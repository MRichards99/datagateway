// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PageBreadcrumb Component - Generic Tests renders correctly for investigations route 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Connect(PageBreadcrumbs)>
        <PageBreadcrumbs
          apiUrl=""
          dispatch={[Function]}
          location="/browse/investigation"
        >
          <div>
            <WithStyles(ForwardRef(Paper))
              elevation={0}
            >
              <ForwardRef(Paper)
                classes={
                  Object {
                    "elevation0": "MuiPaper-elevation0",
                    "elevation1": "MuiPaper-elevation1",
                    "elevation10": "MuiPaper-elevation10",
                    "elevation11": "MuiPaper-elevation11",
                    "elevation12": "MuiPaper-elevation12",
                    "elevation13": "MuiPaper-elevation13",
                    "elevation14": "MuiPaper-elevation14",
                    "elevation15": "MuiPaper-elevation15",
                    "elevation16": "MuiPaper-elevation16",
                    "elevation17": "MuiPaper-elevation17",
                    "elevation18": "MuiPaper-elevation18",
                    "elevation19": "MuiPaper-elevation19",
                    "elevation2": "MuiPaper-elevation2",
                    "elevation20": "MuiPaper-elevation20",
                    "elevation21": "MuiPaper-elevation21",
                    "elevation22": "MuiPaper-elevation22",
                    "elevation23": "MuiPaper-elevation23",
                    "elevation24": "MuiPaper-elevation24",
                    "elevation3": "MuiPaper-elevation3",
                    "elevation4": "MuiPaper-elevation4",
                    "elevation5": "MuiPaper-elevation5",
                    "elevation6": "MuiPaper-elevation6",
                    "elevation7": "MuiPaper-elevation7",
                    "elevation8": "MuiPaper-elevation8",
                    "elevation9": "MuiPaper-elevation9",
                    "root": "MuiPaper-root",
                    "rounded": "MuiPaper-rounded",
                  }
                }
                elevation={0}
              >
                <div
                  className="MuiPaper-root MuiPaper-elevation0 MuiPaper-rounded"
                >
                  <Route>
                    <WithStyles(ForwardRef(Breadcrumbs))
                      aria-label="Breadcrumb"
                      separator={
                        <Memo(NavigateNextIcon)
                          fontSize="small"
                        />
                      }
                    >
                      <ForwardRef(Breadcrumbs)
                        aria-label="Breadcrumb"
                        classes={
                          Object {
                            "li": "MuiBreadcrumbs-li",
                            "ol": "MuiBreadcrumbs-ol",
                            "root": "MuiBreadcrumbs-root",
                            "separator": "MuiBreadcrumbs-separator",
                          }
                        }
                        separator={
                          <Memo(NavigateNextIcon)
                            fontSize="small"
                          />
                        }
                      >
                        <WithStyles(ForwardRef(Typography))
                          aria-label="Breadcrumb"
                          className="MuiBreadcrumbs-root"
                          color="textSecondary"
                          component="nav"
                        >
                          <ForwardRef(Typography)
                            aria-label="Breadcrumb"
                            className="MuiBreadcrumbs-root"
                            classes={
                              Object {
                                "alignCenter": "MuiTypography-alignCenter",
                                "alignJustify": "MuiTypography-alignJustify",
                                "alignLeft": "MuiTypography-alignLeft",
                                "alignRight": "MuiTypography-alignRight",
                                "body1": "MuiTypography-body1",
                                "body2": "MuiTypography-body2",
                                "button": "MuiTypography-button",
                                "caption": "MuiTypography-caption",
                                "colorError": "MuiTypography-colorError",
                                "colorInherit": "MuiTypography-colorInherit",
                                "colorPrimary": "MuiTypography-colorPrimary",
                                "colorSecondary": "MuiTypography-colorSecondary",
                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                "displayBlock": "MuiTypography-displayBlock",
                                "displayInline": "MuiTypography-displayInline",
                                "gutterBottom": "MuiTypography-gutterBottom",
                                "h1": "MuiTypography-h1",
                                "h2": "MuiTypography-h2",
                                "h3": "MuiTypography-h3",
                                "h4": "MuiTypography-h4",
                                "h5": "MuiTypography-h5",
                                "h6": "MuiTypography-h6",
                                "noWrap": "MuiTypography-noWrap",
                                "overline": "MuiTypography-overline",
                                "paragraph": "MuiTypography-paragraph",
                                "root": "MuiTypography-root",
                                "srOnly": "MuiTypography-srOnly",
                                "subtitle1": "MuiTypography-subtitle1",
                                "subtitle2": "MuiTypography-subtitle2",
                              }
                            }
                            color="textSecondary"
                            component="nav"
                          >
                            <nav
                              aria-label="Breadcrumb"
                              className="MuiTypography-root MuiBreadcrumbs-root MuiTypography-body1 MuiTypography-colorTextSecondary"
                            >
                              <ol
                                className="MuiBreadcrumbs-ol"
                              >
                                <li
                                  className="MuiBreadcrumbs-li"
                                  key="child-0"
                                >
                                  <WithStyles(ForwardRef(Typography))
                                    color="textPrimary"
                                    key=".$base-investigation"
                                  >
                                    <ForwardRef(Typography)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textPrimary"
                                    >
                                      <p
                                        className="MuiTypography-root MuiTypography-body1 MuiTypography-colorTextPrimary"
                                      >
                                        Investigations
                                      </p>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                </li>
                              </ol>
                            </nav>
                          </ForwardRef(Typography)>
                        </WithStyles(ForwardRef(Typography))>
                      </ForwardRef(Breadcrumbs)>
                    </WithStyles(ForwardRef(Breadcrumbs))>
                  </Route>
                </div>
              </ForwardRef(Paper)>
            </WithStyles(ForwardRef(Paper))>
          </div>
        </PageBreadcrumbs>
      </Connect(PageBreadcrumbs)>
    </Router>
  </MemoryRouter>
</Provider>
`;
