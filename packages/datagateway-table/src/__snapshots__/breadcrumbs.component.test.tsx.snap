// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PageBreadcrumbs - Snapshot Tests (Generic, DLS, ISIS) renders correctly for DLS datafiles route 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Connect(PageBreadcrumbs)>
        <PageBreadcrumbs
          apiUrl=""
          breadcrumbSettings={Object {}}
          dispatch={[Function]}
          location="/browse/proposal/INVESTIGATION 1/investigation/1/dataset/1/datafile"
        >
          <div>
            <WithStyles(ForwardRef(Paper))
              elevation={0}
            >
              <ForwardRef(Paper)
                classes={
                  Object {
                    "elevation0": "MuiPaper-elevation0",
                    "elevation1": "MuiPaper-elevation1",
                    "elevation10": "MuiPaper-elevation10",
                    "elevation11": "MuiPaper-elevation11",
                    "elevation12": "MuiPaper-elevation12",
                    "elevation13": "MuiPaper-elevation13",
                    "elevation14": "MuiPaper-elevation14",
                    "elevation15": "MuiPaper-elevation15",
                    "elevation16": "MuiPaper-elevation16",
                    "elevation17": "MuiPaper-elevation17",
                    "elevation18": "MuiPaper-elevation18",
                    "elevation19": "MuiPaper-elevation19",
                    "elevation2": "MuiPaper-elevation2",
                    "elevation20": "MuiPaper-elevation20",
                    "elevation21": "MuiPaper-elevation21",
                    "elevation22": "MuiPaper-elevation22",
                    "elevation23": "MuiPaper-elevation23",
                    "elevation24": "MuiPaper-elevation24",
                    "elevation3": "MuiPaper-elevation3",
                    "elevation4": "MuiPaper-elevation4",
                    "elevation5": "MuiPaper-elevation5",
                    "elevation6": "MuiPaper-elevation6",
                    "elevation7": "MuiPaper-elevation7",
                    "elevation8": "MuiPaper-elevation8",
                    "elevation9": "MuiPaper-elevation9",
                    "root": "MuiPaper-root",
                    "rounded": "MuiPaper-rounded",
                  }
                }
                elevation={0}
              >
                <div
                  className="MuiPaper-root MuiPaper-elevation0 MuiPaper-rounded"
                >
                  <Route>
                    <div
                      className="breadcrumb"
                    >
                      <li>
                        <span
                          className="content"
                        >
                          <span
                            className="icon"
                          >
                            <ForwardRef>
                              <WithStyles(ForwardRef(SvgIcon))>
                                <ForwardRef(SvgIcon)
                                  classes={
                                    Object {
                                      "colorAction": "MuiSvgIcon-colorAction",
                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                      "colorError": "MuiSvgIcon-colorError",
                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                      "root": "MuiSvgIcon-root",
                                    }
                                  }
                                >
                                  <svg
                                    aria-hidden="true"
                                    className="MuiSvgIcon-root"
                                    focusable="false"
                                    role="presentation"
                                    viewBox="0 0 24 24"
                                  >
                                    <path
                                      d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"
                                    />
                                  </svg>
                                </ForwardRef(SvgIcon)>
                              </WithStyles(ForwardRef(SvgIcon))>
                            </ForwardRef>
                          </span>
                        </span>
                      </li>
                      <StyledBreadcrumb
                        ariaLabel="Breadcrumb-base"
                        displayName="Proposals"
                        url="/browse/proposal"
                      >
                        <li>
                          <ArrowTooltip
                            title="Proposals"
                          >
                            <WithStyles(ForwardRef(Tooltip))
                              PopperProps={
                                Object {
                                  "popperOptions": Object {
                                    "modifiers": Object {
                                      "arrow": Object {
                                        "element": null,
                                        "enabled": false,
                                      },
                                    },
                                  },
                                }
                              }
                              classes={
                                Object {
                                  "popper": "makeStyles-popper-850",
                                  "tooltip": "makeStyles-tooltip-849",
                                }
                              }
                              disableHoverListener={true}
                              title={
                                <React.Fragment>
                                  Proposals
                                  <span
                                    className="makeStyles-arrow-851"
                                  />
                                </React.Fragment>
                              }
                            >
                              <ForwardRef(Tooltip)
                                PopperProps={
                                  Object {
                                    "popperOptions": Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    },
                                  }
                                }
                                classes={
                                  Object {
                                    "popper": "MuiTooltip-popper makeStyles-popper-850",
                                    "popperInteractive": "MuiTooltip-popperInteractive",
                                    "tooltip": "MuiTooltip-tooltip makeStyles-tooltip-849",
                                    "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                    "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                    "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                    "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                    "touch": "MuiTooltip-touch",
                                  }
                                }
                                disableHoverListener={true}
                                title={
                                  <React.Fragment>
                                    Proposals
                                    <span
                                      className="makeStyles-arrow-851"
                                    />
                                  </React.Fragment>
                                }
                              >
                                <div
                                  aria-describedby={null}
                                  className=""
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchStart={[Function]}
                                  title={null}
                                >
                                  <WithStyles(ForwardRef(Link))
                                    aria-label="Breadcrumb-base"
                                    className="content"
                                    component={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "displayName": "Link",
                                        "propTypes": Object {
                                          "innerRef": [Function],
                                          "onClick": [Function],
                                          "replace": [Function],
                                          "target": [Function],
                                          "to": [Function],
                                        },
                                        "render": [Function],
                                      }
                                    }
                                    to="/browse/proposal"
                                  >
                                    <ForwardRef(Link)
                                      aria-label="Breadcrumb-base"
                                      className="content"
                                      classes={
                                        Object {
                                          "button": "MuiLink-button",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiLink-root",
                                          "underlineAlways": "MuiLink-underlineAlways",
                                          "underlineHover": "MuiLink-underlineHover",
                                          "underlineNone": "MuiLink-underlineNone",
                                        }
                                      }
                                      component={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "displayName": "Link",
                                          "propTypes": Object {
                                            "innerRef": [Function],
                                            "onClick": [Function],
                                            "replace": [Function],
                                            "target": [Function],
                                            "to": [Function],
                                          },
                                          "render": [Function],
                                        }
                                      }
                                      to="/browse/proposal"
                                    >
                                      <WithStyles(ForwardRef(Typography))
                                        aria-label="Breadcrumb-base"
                                        className="MuiLink-root MuiLink-underlineHover content"
                                        color="primary"
                                        component={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "displayName": "Link",
                                            "propTypes": Object {
                                              "innerRef": [Function],
                                              "onClick": [Function],
                                              "replace": [Function],
                                              "target": [Function],
                                              "to": [Function],
                                            },
                                            "render": [Function],
                                          }
                                        }
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        to="/browse/proposal"
                                        variant="inherit"
                                      >
                                        <ForwardRef(Typography)
                                          aria-label="Breadcrumb-base"
                                          className="MuiLink-root MuiLink-underlineHover content"
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter",
                                              "alignJustify": "MuiTypography-alignJustify",
                                              "alignLeft": "MuiTypography-alignLeft",
                                              "alignRight": "MuiTypography-alignRight",
                                              "body1": "MuiTypography-body1",
                                              "body2": "MuiTypography-body2",
                                              "button": "MuiTypography-button",
                                              "caption": "MuiTypography-caption",
                                              "colorError": "MuiTypography-colorError",
                                              "colorInherit": "MuiTypography-colorInherit",
                                              "colorPrimary": "MuiTypography-colorPrimary",
                                              "colorSecondary": "MuiTypography-colorSecondary",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                              "displayBlock": "MuiTypography-displayBlock",
                                              "displayInline": "MuiTypography-displayInline",
                                              "gutterBottom": "MuiTypography-gutterBottom",
                                              "h1": "MuiTypography-h1",
                                              "h2": "MuiTypography-h2",
                                              "h3": "MuiTypography-h3",
                                              "h4": "MuiTypography-h4",
                                              "h5": "MuiTypography-h5",
                                              "h6": "MuiTypography-h6",
                                              "noWrap": "MuiTypography-noWrap",
                                              "overline": "MuiTypography-overline",
                                              "paragraph": "MuiTypography-paragraph",
                                              "root": "MuiTypography-root",
                                              "srOnly": "MuiTypography-srOnly",
                                              "subtitle1": "MuiTypography-subtitle1",
                                              "subtitle2": "MuiTypography-subtitle2",
                                            }
                                          }
                                          color="primary"
                                          component={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "displayName": "Link",
                                              "propTypes": Object {
                                                "innerRef": [Function],
                                                "onClick": [Function],
                                                "replace": [Function],
                                                "target": [Function],
                                                "to": [Function],
                                              },
                                              "render": [Function],
                                            }
                                          }
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          to="/browse/proposal"
                                          variant="inherit"
                                        >
                                          <Link
                                            aria-label="Breadcrumb-base"
                                            className="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            to="/browse/proposal"
                                          >
                                            <LinkAnchor
                                              aria-label="Breadcrumb-base"
                                              className="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                              href="/browse/proposal"
                                              navigate={[Function]}
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                            >
                                              <a
                                                aria-label="Breadcrumb-base"
                                                className="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                                href="/browse/proposal"
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                              >
                                                <span
                                                  className="displayContent"
                                                >
                                                  Proposals
                                                </span>
                                              </a>
                                            </LinkAnchor>
                                          </Link>
                                        </ForwardRef(Typography)>
                                      </WithStyles(ForwardRef(Typography))>
                                    </ForwardRef(Link)>
                                  </WithStyles(ForwardRef(Link))>
                                </div>
                                <ForwardRef(Popper)
                                  anchorEl={
                                    <div
                                      class=""
                                    >
                                      <a
                                        aria-label="Breadcrumb-base"
                                        class="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                        href="/browse/proposal"
                                      >
                                        <span
                                          class="displayContent"
                                        >
                                          Proposals
                                        </span>
                                      </a>
                                    </div>
                                  }
                                  className="MuiTooltip-popper makeStyles-popper-850"
                                  id={null}
                                  open={false}
                                  placement="bottom"
                                  popperOptions={
                                    Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    }
                                  }
                                  transition={true}
                                />
                              </ForwardRef(Tooltip)>
                            </WithStyles(ForwardRef(Tooltip))>
                          </ArrowTooltip>
                        </li>
                      </StyledBreadcrumb>
                      <StyledBreadcrumb
                        ariaLabel="Breadcrumb-hierarchy-1"
                        displayName="INVESTIGATION 1"
                        key="breadcrumb-1"
                        url="/browse/proposal/INVESTIGATION 1/investigation"
                      >
                        <li>
                          <ArrowTooltip
                            title="INVESTIGATION 1"
                          >
                            <WithStyles(ForwardRef(Tooltip))
                              PopperProps={
                                Object {
                                  "popperOptions": Object {
                                    "modifiers": Object {
                                      "arrow": Object {
                                        "element": null,
                                        "enabled": false,
                                      },
                                    },
                                  },
                                }
                              }
                              classes={
                                Object {
                                  "popper": "makeStyles-popper-850",
                                  "tooltip": "makeStyles-tooltip-849",
                                }
                              }
                              disableHoverListener={true}
                              title={
                                <React.Fragment>
                                  INVESTIGATION 1
                                  <span
                                    className="makeStyles-arrow-851"
                                  />
                                </React.Fragment>
                              }
                            >
                              <ForwardRef(Tooltip)
                                PopperProps={
                                  Object {
                                    "popperOptions": Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    },
                                  }
                                }
                                classes={
                                  Object {
                                    "popper": "MuiTooltip-popper makeStyles-popper-850",
                                    "popperInteractive": "MuiTooltip-popperInteractive",
                                    "tooltip": "MuiTooltip-tooltip makeStyles-tooltip-849",
                                    "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                    "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                    "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                    "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                    "touch": "MuiTooltip-touch",
                                  }
                                }
                                disableHoverListener={true}
                                title={
                                  <React.Fragment>
                                    INVESTIGATION 1
                                    <span
                                      className="makeStyles-arrow-851"
                                    />
                                  </React.Fragment>
                                }
                              >
                                <div
                                  aria-describedby={null}
                                  className=""
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchStart={[Function]}
                                  title={null}
                                >
                                  <WithStyles(ForwardRef(Link))
                                    aria-label="Breadcrumb-hierarchy-1"
                                    className="content"
                                    component={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "displayName": "Link",
                                        "propTypes": Object {
                                          "innerRef": [Function],
                                          "onClick": [Function],
                                          "replace": [Function],
                                          "target": [Function],
                                          "to": [Function],
                                        },
                                        "render": [Function],
                                      }
                                    }
                                    to="/browse/proposal/INVESTIGATION 1/investigation"
                                  >
                                    <ForwardRef(Link)
                                      aria-label="Breadcrumb-hierarchy-1"
                                      className="content"
                                      classes={
                                        Object {
                                          "button": "MuiLink-button",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiLink-root",
                                          "underlineAlways": "MuiLink-underlineAlways",
                                          "underlineHover": "MuiLink-underlineHover",
                                          "underlineNone": "MuiLink-underlineNone",
                                        }
                                      }
                                      component={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "displayName": "Link",
                                          "propTypes": Object {
                                            "innerRef": [Function],
                                            "onClick": [Function],
                                            "replace": [Function],
                                            "target": [Function],
                                            "to": [Function],
                                          },
                                          "render": [Function],
                                        }
                                      }
                                      to="/browse/proposal/INVESTIGATION 1/investigation"
                                    >
                                      <WithStyles(ForwardRef(Typography))
                                        aria-label="Breadcrumb-hierarchy-1"
                                        className="MuiLink-root MuiLink-underlineHover content"
                                        color="primary"
                                        component={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "displayName": "Link",
                                            "propTypes": Object {
                                              "innerRef": [Function],
                                              "onClick": [Function],
                                              "replace": [Function],
                                              "target": [Function],
                                              "to": [Function],
                                            },
                                            "render": [Function],
                                          }
                                        }
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        to="/browse/proposal/INVESTIGATION 1/investigation"
                                        variant="inherit"
                                      >
                                        <ForwardRef(Typography)
                                          aria-label="Breadcrumb-hierarchy-1"
                                          className="MuiLink-root MuiLink-underlineHover content"
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter",
                                              "alignJustify": "MuiTypography-alignJustify",
                                              "alignLeft": "MuiTypography-alignLeft",
                                              "alignRight": "MuiTypography-alignRight",
                                              "body1": "MuiTypography-body1",
                                              "body2": "MuiTypography-body2",
                                              "button": "MuiTypography-button",
                                              "caption": "MuiTypography-caption",
                                              "colorError": "MuiTypography-colorError",
                                              "colorInherit": "MuiTypography-colorInherit",
                                              "colorPrimary": "MuiTypography-colorPrimary",
                                              "colorSecondary": "MuiTypography-colorSecondary",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                              "displayBlock": "MuiTypography-displayBlock",
                                              "displayInline": "MuiTypography-displayInline",
                                              "gutterBottom": "MuiTypography-gutterBottom",
                                              "h1": "MuiTypography-h1",
                                              "h2": "MuiTypography-h2",
                                              "h3": "MuiTypography-h3",
                                              "h4": "MuiTypography-h4",
                                              "h5": "MuiTypography-h5",
                                              "h6": "MuiTypography-h6",
                                              "noWrap": "MuiTypography-noWrap",
                                              "overline": "MuiTypography-overline",
                                              "paragraph": "MuiTypography-paragraph",
                                              "root": "MuiTypography-root",
                                              "srOnly": "MuiTypography-srOnly",
                                              "subtitle1": "MuiTypography-subtitle1",
                                              "subtitle2": "MuiTypography-subtitle2",
                                            }
                                          }
                                          color="primary"
                                          component={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "displayName": "Link",
                                              "propTypes": Object {
                                                "innerRef": [Function],
                                                "onClick": [Function],
                                                "replace": [Function],
                                                "target": [Function],
                                                "to": [Function],
                                              },
                                              "render": [Function],
                                            }
                                          }
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          to="/browse/proposal/INVESTIGATION 1/investigation"
                                          variant="inherit"
                                        >
                                          <Link
                                            aria-label="Breadcrumb-hierarchy-1"
                                            className="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            to="/browse/proposal/INVESTIGATION 1/investigation"
                                          >
                                            <LinkAnchor
                                              aria-label="Breadcrumb-hierarchy-1"
                                              className="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                              href="/browse/proposal/INVESTIGATION 1/investigation"
                                              navigate={[Function]}
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                            >
                                              <a
                                                aria-label="Breadcrumb-hierarchy-1"
                                                className="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                                href="/browse/proposal/INVESTIGATION 1/investigation"
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                              >
                                                <span
                                                  className="displayContent"
                                                >
                                                  INVESTIGATION 1
                                                </span>
                                              </a>
                                            </LinkAnchor>
                                          </Link>
                                        </ForwardRef(Typography)>
                                      </WithStyles(ForwardRef(Typography))>
                                    </ForwardRef(Link)>
                                  </WithStyles(ForwardRef(Link))>
                                </div>
                                <ForwardRef(Popper)
                                  anchorEl={
                                    <div
                                      class=""
                                    >
                                      <a
                                        aria-label="Breadcrumb-hierarchy-1"
                                        class="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                        href="/browse/proposal/INVESTIGATION 1/investigation"
                                      >
                                        <span
                                          class="displayContent"
                                        >
                                          INVESTIGATION 1
                                        </span>
                                      </a>
                                    </div>
                                  }
                                  className="MuiTooltip-popper makeStyles-popper-850"
                                  id={null}
                                  open={false}
                                  placement="bottom"
                                  popperOptions={
                                    Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    }
                                  }
                                  transition={true}
                                />
                              </ForwardRef(Tooltip)>
                            </WithStyles(ForwardRef(Tooltip))>
                          </ArrowTooltip>
                        </li>
                      </StyledBreadcrumb>
                      <StyledBreadcrumb
                        ariaLabel="Breadcrumb-hierarchy-2"
                        displayName="Test 1"
                        key="breadcrumb-2"
                        url="/browse/proposal/INVESTIGATION 1/investigation/1/dataset"
                      >
                        <li>
                          <ArrowTooltip
                            title="Test 1"
                          >
                            <WithStyles(ForwardRef(Tooltip))
                              PopperProps={
                                Object {
                                  "popperOptions": Object {
                                    "modifiers": Object {
                                      "arrow": Object {
                                        "element": null,
                                        "enabled": false,
                                      },
                                    },
                                  },
                                }
                              }
                              classes={
                                Object {
                                  "popper": "makeStyles-popper-850",
                                  "tooltip": "makeStyles-tooltip-849",
                                }
                              }
                              disableHoverListener={true}
                              title={
                                <React.Fragment>
                                  Test 1
                                  <span
                                    className="makeStyles-arrow-851"
                                  />
                                </React.Fragment>
                              }
                            >
                              <ForwardRef(Tooltip)
                                PopperProps={
                                  Object {
                                    "popperOptions": Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    },
                                  }
                                }
                                classes={
                                  Object {
                                    "popper": "MuiTooltip-popper makeStyles-popper-850",
                                    "popperInteractive": "MuiTooltip-popperInteractive",
                                    "tooltip": "MuiTooltip-tooltip makeStyles-tooltip-849",
                                    "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                    "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                    "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                    "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                    "touch": "MuiTooltip-touch",
                                  }
                                }
                                disableHoverListener={true}
                                title={
                                  <React.Fragment>
                                    Test 1
                                    <span
                                      className="makeStyles-arrow-851"
                                    />
                                  </React.Fragment>
                                }
                              >
                                <div
                                  aria-describedby={null}
                                  className=""
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchStart={[Function]}
                                  title={null}
                                >
                                  <WithStyles(ForwardRef(Link))
                                    aria-label="Breadcrumb-hierarchy-2"
                                    className="content"
                                    component={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "displayName": "Link",
                                        "propTypes": Object {
                                          "innerRef": [Function],
                                          "onClick": [Function],
                                          "replace": [Function],
                                          "target": [Function],
                                          "to": [Function],
                                        },
                                        "render": [Function],
                                      }
                                    }
                                    to="/browse/proposal/INVESTIGATION 1/investigation/1/dataset"
                                  >
                                    <ForwardRef(Link)
                                      aria-label="Breadcrumb-hierarchy-2"
                                      className="content"
                                      classes={
                                        Object {
                                          "button": "MuiLink-button",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiLink-root",
                                          "underlineAlways": "MuiLink-underlineAlways",
                                          "underlineHover": "MuiLink-underlineHover",
                                          "underlineNone": "MuiLink-underlineNone",
                                        }
                                      }
                                      component={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "displayName": "Link",
                                          "propTypes": Object {
                                            "innerRef": [Function],
                                            "onClick": [Function],
                                            "replace": [Function],
                                            "target": [Function],
                                            "to": [Function],
                                          },
                                          "render": [Function],
                                        }
                                      }
                                      to="/browse/proposal/INVESTIGATION 1/investigation/1/dataset"
                                    >
                                      <WithStyles(ForwardRef(Typography))
                                        aria-label="Breadcrumb-hierarchy-2"
                                        className="MuiLink-root MuiLink-underlineHover content"
                                        color="primary"
                                        component={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "displayName": "Link",
                                            "propTypes": Object {
                                              "innerRef": [Function],
                                              "onClick": [Function],
                                              "replace": [Function],
                                              "target": [Function],
                                              "to": [Function],
                                            },
                                            "render": [Function],
                                          }
                                        }
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        to="/browse/proposal/INVESTIGATION 1/investigation/1/dataset"
                                        variant="inherit"
                                      >
                                        <ForwardRef(Typography)
                                          aria-label="Breadcrumb-hierarchy-2"
                                          className="MuiLink-root MuiLink-underlineHover content"
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter",
                                              "alignJustify": "MuiTypography-alignJustify",
                                              "alignLeft": "MuiTypography-alignLeft",
                                              "alignRight": "MuiTypography-alignRight",
                                              "body1": "MuiTypography-body1",
                                              "body2": "MuiTypography-body2",
                                              "button": "MuiTypography-button",
                                              "caption": "MuiTypography-caption",
                                              "colorError": "MuiTypography-colorError",
                                              "colorInherit": "MuiTypography-colorInherit",
                                              "colorPrimary": "MuiTypography-colorPrimary",
                                              "colorSecondary": "MuiTypography-colorSecondary",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                              "displayBlock": "MuiTypography-displayBlock",
                                              "displayInline": "MuiTypography-displayInline",
                                              "gutterBottom": "MuiTypography-gutterBottom",
                                              "h1": "MuiTypography-h1",
                                              "h2": "MuiTypography-h2",
                                              "h3": "MuiTypography-h3",
                                              "h4": "MuiTypography-h4",
                                              "h5": "MuiTypography-h5",
                                              "h6": "MuiTypography-h6",
                                              "noWrap": "MuiTypography-noWrap",
                                              "overline": "MuiTypography-overline",
                                              "paragraph": "MuiTypography-paragraph",
                                              "root": "MuiTypography-root",
                                              "srOnly": "MuiTypography-srOnly",
                                              "subtitle1": "MuiTypography-subtitle1",
                                              "subtitle2": "MuiTypography-subtitle2",
                                            }
                                          }
                                          color="primary"
                                          component={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "displayName": "Link",
                                              "propTypes": Object {
                                                "innerRef": [Function],
                                                "onClick": [Function],
                                                "replace": [Function],
                                                "target": [Function],
                                                "to": [Function],
                                              },
                                              "render": [Function],
                                            }
                                          }
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          to="/browse/proposal/INVESTIGATION 1/investigation/1/dataset"
                                          variant="inherit"
                                        >
                                          <Link
                                            aria-label="Breadcrumb-hierarchy-2"
                                            className="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            to="/browse/proposal/INVESTIGATION 1/investigation/1/dataset"
                                          >
                                            <LinkAnchor
                                              aria-label="Breadcrumb-hierarchy-2"
                                              className="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                              href="/browse/proposal/INVESTIGATION 1/investigation/1/dataset"
                                              navigate={[Function]}
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                            >
                                              <a
                                                aria-label="Breadcrumb-hierarchy-2"
                                                className="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                                href="/browse/proposal/INVESTIGATION 1/investigation/1/dataset"
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                              >
                                                <span
                                                  className="displayContent"
                                                >
                                                  Test 1
                                                </span>
                                              </a>
                                            </LinkAnchor>
                                          </Link>
                                        </ForwardRef(Typography)>
                                      </WithStyles(ForwardRef(Typography))>
                                    </ForwardRef(Link)>
                                  </WithStyles(ForwardRef(Link))>
                                </div>
                                <ForwardRef(Popper)
                                  anchorEl={
                                    <div
                                      class=""
                                    >
                                      <a
                                        aria-label="Breadcrumb-hierarchy-2"
                                        class="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                        href="/browse/proposal/INVESTIGATION 1/investigation/1/dataset"
                                      >
                                        <span
                                          class="displayContent"
                                        >
                                          Test 1
                                        </span>
                                      </a>
                                    </div>
                                  }
                                  className="MuiTooltip-popper makeStyles-popper-850"
                                  id={null}
                                  open={false}
                                  placement="bottom"
                                  popperOptions={
                                    Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    }
                                  }
                                  transition={true}
                                />
                              </ForwardRef(Tooltip)>
                            </WithStyles(ForwardRef(Tooltip))>
                          </ArrowTooltip>
                        </li>
                      </StyledBreadcrumb>
                      <StyledBreadcrumb
                        ariaLabel="Breadcrumb-hierarchy-3"
                        displayName="INVESTIGATION 1"
                        key="breadcrumb-3"
                      >
                        <li>
                          <ArrowTooltip
                            title="INVESTIGATION 1"
                          >
                            <WithStyles(ForwardRef(Tooltip))
                              PopperProps={
                                Object {
                                  "popperOptions": Object {
                                    "modifiers": Object {
                                      "arrow": Object {
                                        "element": null,
                                        "enabled": false,
                                      },
                                    },
                                  },
                                }
                              }
                              classes={
                                Object {
                                  "popper": "makeStyles-popper-850",
                                  "tooltip": "makeStyles-tooltip-849",
                                }
                              }
                              disableHoverListener={true}
                              title={
                                <React.Fragment>
                                  INVESTIGATION 1
                                  <span
                                    className="makeStyles-arrow-851"
                                  />
                                </React.Fragment>
                              }
                            >
                              <ForwardRef(Tooltip)
                                PopperProps={
                                  Object {
                                    "popperOptions": Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    },
                                  }
                                }
                                classes={
                                  Object {
                                    "popper": "MuiTooltip-popper makeStyles-popper-850",
                                    "popperInteractive": "MuiTooltip-popperInteractive",
                                    "tooltip": "MuiTooltip-tooltip makeStyles-tooltip-849",
                                    "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                    "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                    "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                    "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                    "touch": "MuiTooltip-touch",
                                  }
                                }
                                disableHoverListener={true}
                                title={
                                  <React.Fragment>
                                    INVESTIGATION 1
                                    <span
                                      className="makeStyles-arrow-851"
                                    />
                                  </React.Fragment>
                                }
                              >
                                <div
                                  aria-describedby={null}
                                  className=""
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchStart={[Function]}
                                  title={null}
                                >
                                  <WithStyles(ForwardRef(Typography))
                                    aria-label="Breadcrumb-hierarchy-3"
                                    className="content"
                                    color="textPrimary"
                                  >
                                    <ForwardRef(Typography)
                                      aria-label="Breadcrumb-hierarchy-3"
                                      className="content"
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textPrimary"
                                    >
                                      <p
                                        aria-label="Breadcrumb-hierarchy-3"
                                        className="MuiTypography-root content MuiTypography-body1 MuiTypography-colorTextPrimary"
                                      >
                                        <span
                                          className="displayContent"
                                        >
                                          INVESTIGATION 1
                                        </span>
                                      </p>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                </div>
                                <ForwardRef(Popper)
                                  anchorEl={
                                    <div
                                      class=""
                                    >
                                      <p
                                        aria-label="Breadcrumb-hierarchy-3"
                                        class="MuiTypography-root content MuiTypography-body1 MuiTypography-colorTextPrimary"
                                      >
                                        <span
                                          class="displayContent"
                                        >
                                          INVESTIGATION 1
                                        </span>
                                      </p>
                                    </div>
                                  }
                                  className="MuiTooltip-popper makeStyles-popper-850"
                                  id={null}
                                  open={false}
                                  placement="bottom"
                                  popperOptions={
                                    Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    }
                                  }
                                  transition={true}
                                />
                              </ForwardRef(Tooltip)>
                            </WithStyles(ForwardRef(Tooltip))>
                          </ArrowTooltip>
                        </li>
                      </StyledBreadcrumb>
                      <StyledBreadcrumb
                        ariaLabel="Breadcrumb-last"
                        displayName="Datafiles"
                        isLast={true}
                      >
                        <li>
                          <ArrowTooltip
                            title="Datafiles"
                          >
                            <WithStyles(ForwardRef(Tooltip))
                              PopperProps={
                                Object {
                                  "popperOptions": Object {
                                    "modifiers": Object {
                                      "arrow": Object {
                                        "element": null,
                                        "enabled": false,
                                      },
                                    },
                                  },
                                }
                              }
                              classes={
                                Object {
                                  "popper": "makeStyles-popper-850",
                                  "tooltip": "makeStyles-tooltip-849",
                                }
                              }
                              disableHoverListener={true}
                              title={
                                <React.Fragment>
                                  Datafiles
                                  <span
                                    className="makeStyles-arrow-851"
                                  />
                                </React.Fragment>
                              }
                            >
                              <ForwardRef(Tooltip)
                                PopperProps={
                                  Object {
                                    "popperOptions": Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    },
                                  }
                                }
                                classes={
                                  Object {
                                    "popper": "MuiTooltip-popper makeStyles-popper-850",
                                    "popperInteractive": "MuiTooltip-popperInteractive",
                                    "tooltip": "MuiTooltip-tooltip makeStyles-tooltip-849",
                                    "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                    "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                    "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                    "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                    "touch": "MuiTooltip-touch",
                                  }
                                }
                                disableHoverListener={true}
                                title={
                                  <React.Fragment>
                                    Datafiles
                                    <span
                                      className="makeStyles-arrow-851"
                                    />
                                  </React.Fragment>
                                }
                              >
                                <div
                                  aria-describedby={null}
                                  className=""
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchStart={[Function]}
                                  title={null}
                                >
                                  <WithStyles(ForwardRef(Typography))
                                    aria-label="Breadcrumb-last"
                                    className="content"
                                    color="textPrimary"
                                  >
                                    <ForwardRef(Typography)
                                      aria-label="Breadcrumb-last"
                                      className="content"
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textPrimary"
                                    >
                                      <p
                                        aria-label="Breadcrumb-last"
                                        className="MuiTypography-root content MuiTypography-body1 MuiTypography-colorTextPrimary"
                                      >
                                        <span
                                          className="displayContent"
                                        >
                                          <i>
                                            Datafiles
                                          </i>
                                        </span>
                                      </p>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                </div>
                                <ForwardRef(Popper)
                                  anchorEl={
                                    <div
                                      class=""
                                    >
                                      <p
                                        aria-label="Breadcrumb-last"
                                        class="MuiTypography-root content MuiTypography-body1 MuiTypography-colorTextPrimary"
                                      >
                                        <span
                                          class="displayContent"
                                        >
                                          <i>
                                            Datafiles
                                          </i>
                                        </span>
                                      </p>
                                    </div>
                                  }
                                  className="MuiTooltip-popper makeStyles-popper-850"
                                  id={null}
                                  open={false}
                                  placement="bottom"
                                  popperOptions={
                                    Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    }
                                  }
                                  transition={true}
                                />
                              </ForwardRef(Tooltip)>
                            </WithStyles(ForwardRef(Tooltip))>
                          </ArrowTooltip>
                        </li>
                      </StyledBreadcrumb>
                    </div>
                  </Route>
                </div>
              </ForwardRef(Paper)>
            </WithStyles(ForwardRef(Paper))>
          </div>
        </PageBreadcrumbs>
      </Connect(PageBreadcrumbs)>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`PageBreadcrumbs - Snapshot Tests (Generic, DLS, ISIS) renders correctly for DLS datasets route 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Connect(PageBreadcrumbs)>
        <PageBreadcrumbs
          apiUrl=""
          breadcrumbSettings={Object {}}
          dispatch={[Function]}
          location="/browse/proposal/INVESTIGATION 1/investigation/1/dataset"
        >
          <div>
            <WithStyles(ForwardRef(Paper))
              elevation={0}
            >
              <ForwardRef(Paper)
                classes={
                  Object {
                    "elevation0": "MuiPaper-elevation0",
                    "elevation1": "MuiPaper-elevation1",
                    "elevation10": "MuiPaper-elevation10",
                    "elevation11": "MuiPaper-elevation11",
                    "elevation12": "MuiPaper-elevation12",
                    "elevation13": "MuiPaper-elevation13",
                    "elevation14": "MuiPaper-elevation14",
                    "elevation15": "MuiPaper-elevation15",
                    "elevation16": "MuiPaper-elevation16",
                    "elevation17": "MuiPaper-elevation17",
                    "elevation18": "MuiPaper-elevation18",
                    "elevation19": "MuiPaper-elevation19",
                    "elevation2": "MuiPaper-elevation2",
                    "elevation20": "MuiPaper-elevation20",
                    "elevation21": "MuiPaper-elevation21",
                    "elevation22": "MuiPaper-elevation22",
                    "elevation23": "MuiPaper-elevation23",
                    "elevation24": "MuiPaper-elevation24",
                    "elevation3": "MuiPaper-elevation3",
                    "elevation4": "MuiPaper-elevation4",
                    "elevation5": "MuiPaper-elevation5",
                    "elevation6": "MuiPaper-elevation6",
                    "elevation7": "MuiPaper-elevation7",
                    "elevation8": "MuiPaper-elevation8",
                    "elevation9": "MuiPaper-elevation9",
                    "root": "MuiPaper-root",
                    "rounded": "MuiPaper-rounded",
                  }
                }
                elevation={0}
              >
                <div
                  className="MuiPaper-root MuiPaper-elevation0 MuiPaper-rounded"
                >
                  <Route>
                    <div
                      className="breadcrumb"
                    >
                      <li>
                        <span
                          className="content"
                        >
                          <span
                            className="icon"
                          >
                            <ForwardRef>
                              <WithStyles(ForwardRef(SvgIcon))>
                                <ForwardRef(SvgIcon)
                                  classes={
                                    Object {
                                      "colorAction": "MuiSvgIcon-colorAction",
                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                      "colorError": "MuiSvgIcon-colorError",
                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                      "root": "MuiSvgIcon-root",
                                    }
                                  }
                                >
                                  <svg
                                    aria-hidden="true"
                                    className="MuiSvgIcon-root"
                                    focusable="false"
                                    role="presentation"
                                    viewBox="0 0 24 24"
                                  >
                                    <path
                                      d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"
                                    />
                                  </svg>
                                </ForwardRef(SvgIcon)>
                              </WithStyles(ForwardRef(SvgIcon))>
                            </ForwardRef>
                          </span>
                        </span>
                      </li>
                      <StyledBreadcrumb
                        ariaLabel="Breadcrumb-base"
                        displayName="Proposals"
                        url="/browse/proposal"
                      >
                        <li>
                          <ArrowTooltip
                            title="Proposals"
                          >
                            <WithStyles(ForwardRef(Tooltip))
                              PopperProps={
                                Object {
                                  "popperOptions": Object {
                                    "modifiers": Object {
                                      "arrow": Object {
                                        "element": null,
                                        "enabled": false,
                                      },
                                    },
                                  },
                                }
                              }
                              classes={
                                Object {
                                  "popper": "makeStyles-popper-601",
                                  "tooltip": "makeStyles-tooltip-600",
                                }
                              }
                              disableHoverListener={true}
                              title={
                                <React.Fragment>
                                  Proposals
                                  <span
                                    className="makeStyles-arrow-602"
                                  />
                                </React.Fragment>
                              }
                            >
                              <ForwardRef(Tooltip)
                                PopperProps={
                                  Object {
                                    "popperOptions": Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    },
                                  }
                                }
                                classes={
                                  Object {
                                    "popper": "MuiTooltip-popper makeStyles-popper-601",
                                    "popperInteractive": "MuiTooltip-popperInteractive",
                                    "tooltip": "MuiTooltip-tooltip makeStyles-tooltip-600",
                                    "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                    "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                    "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                    "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                    "touch": "MuiTooltip-touch",
                                  }
                                }
                                disableHoverListener={true}
                                title={
                                  <React.Fragment>
                                    Proposals
                                    <span
                                      className="makeStyles-arrow-602"
                                    />
                                  </React.Fragment>
                                }
                              >
                                <div
                                  aria-describedby={null}
                                  className=""
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchStart={[Function]}
                                  title={null}
                                >
                                  <WithStyles(ForwardRef(Link))
                                    aria-label="Breadcrumb-base"
                                    className="content"
                                    component={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "displayName": "Link",
                                        "propTypes": Object {
                                          "innerRef": [Function],
                                          "onClick": [Function],
                                          "replace": [Function],
                                          "target": [Function],
                                          "to": [Function],
                                        },
                                        "render": [Function],
                                      }
                                    }
                                    to="/browse/proposal"
                                  >
                                    <ForwardRef(Link)
                                      aria-label="Breadcrumb-base"
                                      className="content"
                                      classes={
                                        Object {
                                          "button": "MuiLink-button",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiLink-root",
                                          "underlineAlways": "MuiLink-underlineAlways",
                                          "underlineHover": "MuiLink-underlineHover",
                                          "underlineNone": "MuiLink-underlineNone",
                                        }
                                      }
                                      component={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "displayName": "Link",
                                          "propTypes": Object {
                                            "innerRef": [Function],
                                            "onClick": [Function],
                                            "replace": [Function],
                                            "target": [Function],
                                            "to": [Function],
                                          },
                                          "render": [Function],
                                        }
                                      }
                                      to="/browse/proposal"
                                    >
                                      <WithStyles(ForwardRef(Typography))
                                        aria-label="Breadcrumb-base"
                                        className="MuiLink-root MuiLink-underlineHover content"
                                        color="primary"
                                        component={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "displayName": "Link",
                                            "propTypes": Object {
                                              "innerRef": [Function],
                                              "onClick": [Function],
                                              "replace": [Function],
                                              "target": [Function],
                                              "to": [Function],
                                            },
                                            "render": [Function],
                                          }
                                        }
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        to="/browse/proposal"
                                        variant="inherit"
                                      >
                                        <ForwardRef(Typography)
                                          aria-label="Breadcrumb-base"
                                          className="MuiLink-root MuiLink-underlineHover content"
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter",
                                              "alignJustify": "MuiTypography-alignJustify",
                                              "alignLeft": "MuiTypography-alignLeft",
                                              "alignRight": "MuiTypography-alignRight",
                                              "body1": "MuiTypography-body1",
                                              "body2": "MuiTypography-body2",
                                              "button": "MuiTypography-button",
                                              "caption": "MuiTypography-caption",
                                              "colorError": "MuiTypography-colorError",
                                              "colorInherit": "MuiTypography-colorInherit",
                                              "colorPrimary": "MuiTypography-colorPrimary",
                                              "colorSecondary": "MuiTypography-colorSecondary",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                              "displayBlock": "MuiTypography-displayBlock",
                                              "displayInline": "MuiTypography-displayInline",
                                              "gutterBottom": "MuiTypography-gutterBottom",
                                              "h1": "MuiTypography-h1",
                                              "h2": "MuiTypography-h2",
                                              "h3": "MuiTypography-h3",
                                              "h4": "MuiTypography-h4",
                                              "h5": "MuiTypography-h5",
                                              "h6": "MuiTypography-h6",
                                              "noWrap": "MuiTypography-noWrap",
                                              "overline": "MuiTypography-overline",
                                              "paragraph": "MuiTypography-paragraph",
                                              "root": "MuiTypography-root",
                                              "srOnly": "MuiTypography-srOnly",
                                              "subtitle1": "MuiTypography-subtitle1",
                                              "subtitle2": "MuiTypography-subtitle2",
                                            }
                                          }
                                          color="primary"
                                          component={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "displayName": "Link",
                                              "propTypes": Object {
                                                "innerRef": [Function],
                                                "onClick": [Function],
                                                "replace": [Function],
                                                "target": [Function],
                                                "to": [Function],
                                              },
                                              "render": [Function],
                                            }
                                          }
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          to="/browse/proposal"
                                          variant="inherit"
                                        >
                                          <Link
                                            aria-label="Breadcrumb-base"
                                            className="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            to="/browse/proposal"
                                          >
                                            <LinkAnchor
                                              aria-label="Breadcrumb-base"
                                              className="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                              href="/browse/proposal"
                                              navigate={[Function]}
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                            >
                                              <a
                                                aria-label="Breadcrumb-base"
                                                className="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                                href="/browse/proposal"
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                              >
                                                <span
                                                  className="displayContent"
                                                >
                                                  Proposals
                                                </span>
                                              </a>
                                            </LinkAnchor>
                                          </Link>
                                        </ForwardRef(Typography)>
                                      </WithStyles(ForwardRef(Typography))>
                                    </ForwardRef(Link)>
                                  </WithStyles(ForwardRef(Link))>
                                </div>
                                <ForwardRef(Popper)
                                  anchorEl={
                                    <div
                                      class=""
                                    >
                                      <a
                                        aria-label="Breadcrumb-base"
                                        class="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                        href="/browse/proposal"
                                      >
                                        <span
                                          class="displayContent"
                                        >
                                          Proposals
                                        </span>
                                      </a>
                                    </div>
                                  }
                                  className="MuiTooltip-popper makeStyles-popper-601"
                                  id={null}
                                  open={false}
                                  placement="bottom"
                                  popperOptions={
                                    Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    }
                                  }
                                  transition={true}
                                />
                              </ForwardRef(Tooltip)>
                            </WithStyles(ForwardRef(Tooltip))>
                          </ArrowTooltip>
                        </li>
                      </StyledBreadcrumb>
                      <StyledBreadcrumb
                        ariaLabel="Breadcrumb-hierarchy-1"
                        displayName="INVESTIGATION 1"
                        key="breadcrumb-1"
                        url="/browse/proposal/INVESTIGATION 1/investigation"
                      >
                        <li>
                          <ArrowTooltip
                            title="INVESTIGATION 1"
                          >
                            <WithStyles(ForwardRef(Tooltip))
                              PopperProps={
                                Object {
                                  "popperOptions": Object {
                                    "modifiers": Object {
                                      "arrow": Object {
                                        "element": null,
                                        "enabled": false,
                                      },
                                    },
                                  },
                                }
                              }
                              classes={
                                Object {
                                  "popper": "makeStyles-popper-601",
                                  "tooltip": "makeStyles-tooltip-600",
                                }
                              }
                              disableHoverListener={true}
                              title={
                                <React.Fragment>
                                  INVESTIGATION 1
                                  <span
                                    className="makeStyles-arrow-602"
                                  />
                                </React.Fragment>
                              }
                            >
                              <ForwardRef(Tooltip)
                                PopperProps={
                                  Object {
                                    "popperOptions": Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    },
                                  }
                                }
                                classes={
                                  Object {
                                    "popper": "MuiTooltip-popper makeStyles-popper-601",
                                    "popperInteractive": "MuiTooltip-popperInteractive",
                                    "tooltip": "MuiTooltip-tooltip makeStyles-tooltip-600",
                                    "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                    "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                    "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                    "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                    "touch": "MuiTooltip-touch",
                                  }
                                }
                                disableHoverListener={true}
                                title={
                                  <React.Fragment>
                                    INVESTIGATION 1
                                    <span
                                      className="makeStyles-arrow-602"
                                    />
                                  </React.Fragment>
                                }
                              >
                                <div
                                  aria-describedby={null}
                                  className=""
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchStart={[Function]}
                                  title={null}
                                >
                                  <WithStyles(ForwardRef(Link))
                                    aria-label="Breadcrumb-hierarchy-1"
                                    className="content"
                                    component={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "displayName": "Link",
                                        "propTypes": Object {
                                          "innerRef": [Function],
                                          "onClick": [Function],
                                          "replace": [Function],
                                          "target": [Function],
                                          "to": [Function],
                                        },
                                        "render": [Function],
                                      }
                                    }
                                    to="/browse/proposal/INVESTIGATION 1/investigation"
                                  >
                                    <ForwardRef(Link)
                                      aria-label="Breadcrumb-hierarchy-1"
                                      className="content"
                                      classes={
                                        Object {
                                          "button": "MuiLink-button",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiLink-root",
                                          "underlineAlways": "MuiLink-underlineAlways",
                                          "underlineHover": "MuiLink-underlineHover",
                                          "underlineNone": "MuiLink-underlineNone",
                                        }
                                      }
                                      component={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "displayName": "Link",
                                          "propTypes": Object {
                                            "innerRef": [Function],
                                            "onClick": [Function],
                                            "replace": [Function],
                                            "target": [Function],
                                            "to": [Function],
                                          },
                                          "render": [Function],
                                        }
                                      }
                                      to="/browse/proposal/INVESTIGATION 1/investigation"
                                    >
                                      <WithStyles(ForwardRef(Typography))
                                        aria-label="Breadcrumb-hierarchy-1"
                                        className="MuiLink-root MuiLink-underlineHover content"
                                        color="primary"
                                        component={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "displayName": "Link",
                                            "propTypes": Object {
                                              "innerRef": [Function],
                                              "onClick": [Function],
                                              "replace": [Function],
                                              "target": [Function],
                                              "to": [Function],
                                            },
                                            "render": [Function],
                                          }
                                        }
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        to="/browse/proposal/INVESTIGATION 1/investigation"
                                        variant="inherit"
                                      >
                                        <ForwardRef(Typography)
                                          aria-label="Breadcrumb-hierarchy-1"
                                          className="MuiLink-root MuiLink-underlineHover content"
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter",
                                              "alignJustify": "MuiTypography-alignJustify",
                                              "alignLeft": "MuiTypography-alignLeft",
                                              "alignRight": "MuiTypography-alignRight",
                                              "body1": "MuiTypography-body1",
                                              "body2": "MuiTypography-body2",
                                              "button": "MuiTypography-button",
                                              "caption": "MuiTypography-caption",
                                              "colorError": "MuiTypography-colorError",
                                              "colorInherit": "MuiTypography-colorInherit",
                                              "colorPrimary": "MuiTypography-colorPrimary",
                                              "colorSecondary": "MuiTypography-colorSecondary",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                              "displayBlock": "MuiTypography-displayBlock",
                                              "displayInline": "MuiTypography-displayInline",
                                              "gutterBottom": "MuiTypography-gutterBottom",
                                              "h1": "MuiTypography-h1",
                                              "h2": "MuiTypography-h2",
                                              "h3": "MuiTypography-h3",
                                              "h4": "MuiTypography-h4",
                                              "h5": "MuiTypography-h5",
                                              "h6": "MuiTypography-h6",
                                              "noWrap": "MuiTypography-noWrap",
                                              "overline": "MuiTypography-overline",
                                              "paragraph": "MuiTypography-paragraph",
                                              "root": "MuiTypography-root",
                                              "srOnly": "MuiTypography-srOnly",
                                              "subtitle1": "MuiTypography-subtitle1",
                                              "subtitle2": "MuiTypography-subtitle2",
                                            }
                                          }
                                          color="primary"
                                          component={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "displayName": "Link",
                                              "propTypes": Object {
                                                "innerRef": [Function],
                                                "onClick": [Function],
                                                "replace": [Function],
                                                "target": [Function],
                                                "to": [Function],
                                              },
                                              "render": [Function],
                                            }
                                          }
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          to="/browse/proposal/INVESTIGATION 1/investigation"
                                          variant="inherit"
                                        >
                                          <Link
                                            aria-label="Breadcrumb-hierarchy-1"
                                            className="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            to="/browse/proposal/INVESTIGATION 1/investigation"
                                          >
                                            <LinkAnchor
                                              aria-label="Breadcrumb-hierarchy-1"
                                              className="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                              href="/browse/proposal/INVESTIGATION 1/investigation"
                                              navigate={[Function]}
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                            >
                                              <a
                                                aria-label="Breadcrumb-hierarchy-1"
                                                className="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                                href="/browse/proposal/INVESTIGATION 1/investigation"
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                              >
                                                <span
                                                  className="displayContent"
                                                >
                                                  INVESTIGATION 1
                                                </span>
                                              </a>
                                            </LinkAnchor>
                                          </Link>
                                        </ForwardRef(Typography)>
                                      </WithStyles(ForwardRef(Typography))>
                                    </ForwardRef(Link)>
                                  </WithStyles(ForwardRef(Link))>
                                </div>
                                <ForwardRef(Popper)
                                  anchorEl={
                                    <div
                                      class=""
                                    >
                                      <a
                                        aria-label="Breadcrumb-hierarchy-1"
                                        class="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                        href="/browse/proposal/INVESTIGATION 1/investigation"
                                      >
                                        <span
                                          class="displayContent"
                                        >
                                          INVESTIGATION 1
                                        </span>
                                      </a>
                                    </div>
                                  }
                                  className="MuiTooltip-popper makeStyles-popper-601"
                                  id={null}
                                  open={false}
                                  placement="bottom"
                                  popperOptions={
                                    Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    }
                                  }
                                  transition={true}
                                />
                              </ForwardRef(Tooltip)>
                            </WithStyles(ForwardRef(Tooltip))>
                          </ArrowTooltip>
                        </li>
                      </StyledBreadcrumb>
                      <StyledBreadcrumb
                        ariaLabel="Breadcrumb-hierarchy-2"
                        displayName="Test 1"
                        key="breadcrumb-2"
                      >
                        <li>
                          <ArrowTooltip
                            title="Test 1"
                          >
                            <WithStyles(ForwardRef(Tooltip))
                              PopperProps={
                                Object {
                                  "popperOptions": Object {
                                    "modifiers": Object {
                                      "arrow": Object {
                                        "element": null,
                                        "enabled": false,
                                      },
                                    },
                                  },
                                }
                              }
                              classes={
                                Object {
                                  "popper": "makeStyles-popper-601",
                                  "tooltip": "makeStyles-tooltip-600",
                                }
                              }
                              disableHoverListener={true}
                              title={
                                <React.Fragment>
                                  Test 1
                                  <span
                                    className="makeStyles-arrow-602"
                                  />
                                </React.Fragment>
                              }
                            >
                              <ForwardRef(Tooltip)
                                PopperProps={
                                  Object {
                                    "popperOptions": Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    },
                                  }
                                }
                                classes={
                                  Object {
                                    "popper": "MuiTooltip-popper makeStyles-popper-601",
                                    "popperInteractive": "MuiTooltip-popperInteractive",
                                    "tooltip": "MuiTooltip-tooltip makeStyles-tooltip-600",
                                    "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                    "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                    "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                    "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                    "touch": "MuiTooltip-touch",
                                  }
                                }
                                disableHoverListener={true}
                                title={
                                  <React.Fragment>
                                    Test 1
                                    <span
                                      className="makeStyles-arrow-602"
                                    />
                                  </React.Fragment>
                                }
                              >
                                <div
                                  aria-describedby={null}
                                  className=""
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchStart={[Function]}
                                  title={null}
                                >
                                  <WithStyles(ForwardRef(Typography))
                                    aria-label="Breadcrumb-hierarchy-2"
                                    className="content"
                                    color="textPrimary"
                                  >
                                    <ForwardRef(Typography)
                                      aria-label="Breadcrumb-hierarchy-2"
                                      className="content"
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textPrimary"
                                    >
                                      <p
                                        aria-label="Breadcrumb-hierarchy-2"
                                        className="MuiTypography-root content MuiTypography-body1 MuiTypography-colorTextPrimary"
                                      >
                                        <span
                                          className="displayContent"
                                        >
                                          Test 1
                                        </span>
                                      </p>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                </div>
                                <ForwardRef(Popper)
                                  anchorEl={
                                    <div
                                      class=""
                                    >
                                      <p
                                        aria-label="Breadcrumb-hierarchy-2"
                                        class="MuiTypography-root content MuiTypography-body1 MuiTypography-colorTextPrimary"
                                      >
                                        <span
                                          class="displayContent"
                                        >
                                          Test 1
                                        </span>
                                      </p>
                                    </div>
                                  }
                                  className="MuiTooltip-popper makeStyles-popper-601"
                                  id={null}
                                  open={false}
                                  placement="bottom"
                                  popperOptions={
                                    Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    }
                                  }
                                  transition={true}
                                />
                              </ForwardRef(Tooltip)>
                            </WithStyles(ForwardRef(Tooltip))>
                          </ArrowTooltip>
                        </li>
                      </StyledBreadcrumb>
                      <StyledBreadcrumb
                        ariaLabel="Breadcrumb-last"
                        displayName="Datasets"
                        isLast={true}
                      >
                        <li>
                          <ArrowTooltip
                            title="Datasets"
                          >
                            <WithStyles(ForwardRef(Tooltip))
                              PopperProps={
                                Object {
                                  "popperOptions": Object {
                                    "modifiers": Object {
                                      "arrow": Object {
                                        "element": null,
                                        "enabled": false,
                                      },
                                    },
                                  },
                                }
                              }
                              classes={
                                Object {
                                  "popper": "makeStyles-popper-601",
                                  "tooltip": "makeStyles-tooltip-600",
                                }
                              }
                              disableHoverListener={true}
                              title={
                                <React.Fragment>
                                  Datasets
                                  <span
                                    className="makeStyles-arrow-602"
                                  />
                                </React.Fragment>
                              }
                            >
                              <ForwardRef(Tooltip)
                                PopperProps={
                                  Object {
                                    "popperOptions": Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    },
                                  }
                                }
                                classes={
                                  Object {
                                    "popper": "MuiTooltip-popper makeStyles-popper-601",
                                    "popperInteractive": "MuiTooltip-popperInteractive",
                                    "tooltip": "MuiTooltip-tooltip makeStyles-tooltip-600",
                                    "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                    "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                    "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                    "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                    "touch": "MuiTooltip-touch",
                                  }
                                }
                                disableHoverListener={true}
                                title={
                                  <React.Fragment>
                                    Datasets
                                    <span
                                      className="makeStyles-arrow-602"
                                    />
                                  </React.Fragment>
                                }
                              >
                                <div
                                  aria-describedby={null}
                                  className=""
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchStart={[Function]}
                                  title={null}
                                >
                                  <WithStyles(ForwardRef(Typography))
                                    aria-label="Breadcrumb-last"
                                    className="content"
                                    color="textPrimary"
                                  >
                                    <ForwardRef(Typography)
                                      aria-label="Breadcrumb-last"
                                      className="content"
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textPrimary"
                                    >
                                      <p
                                        aria-label="Breadcrumb-last"
                                        className="MuiTypography-root content MuiTypography-body1 MuiTypography-colorTextPrimary"
                                      >
                                        <span
                                          className="displayContent"
                                        >
                                          <i>
                                            Datasets
                                          </i>
                                        </span>
                                      </p>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                </div>
                                <ForwardRef(Popper)
                                  anchorEl={
                                    <div
                                      class=""
                                    >
                                      <p
                                        aria-label="Breadcrumb-last"
                                        class="MuiTypography-root content MuiTypography-body1 MuiTypography-colorTextPrimary"
                                      >
                                        <span
                                          class="displayContent"
                                        >
                                          <i>
                                            Datasets
                                          </i>
                                        </span>
                                      </p>
                                    </div>
                                  }
                                  className="MuiTooltip-popper makeStyles-popper-601"
                                  id={null}
                                  open={false}
                                  placement="bottom"
                                  popperOptions={
                                    Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    }
                                  }
                                  transition={true}
                                />
                              </ForwardRef(Tooltip)>
                            </WithStyles(ForwardRef(Tooltip))>
                          </ArrowTooltip>
                        </li>
                      </StyledBreadcrumb>
                    </div>
                  </Route>
                </div>
              </ForwardRef(Paper)>
            </WithStyles(ForwardRef(Paper))>
          </div>
        </PageBreadcrumbs>
      </Connect(PageBreadcrumbs)>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`PageBreadcrumbs - Snapshot Tests (Generic, DLS, ISIS) renders correctly for DLS investigations route 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Connect(PageBreadcrumbs)>
        <PageBreadcrumbs
          apiUrl=""
          breadcrumbSettings={Object {}}
          dispatch={[Function]}
          location="/browse/proposal/INVESTIGATION 1/investigation"
        >
          <div>
            <WithStyles(ForwardRef(Paper))
              elevation={0}
            >
              <ForwardRef(Paper)
                classes={
                  Object {
                    "elevation0": "MuiPaper-elevation0",
                    "elevation1": "MuiPaper-elevation1",
                    "elevation10": "MuiPaper-elevation10",
                    "elevation11": "MuiPaper-elevation11",
                    "elevation12": "MuiPaper-elevation12",
                    "elevation13": "MuiPaper-elevation13",
                    "elevation14": "MuiPaper-elevation14",
                    "elevation15": "MuiPaper-elevation15",
                    "elevation16": "MuiPaper-elevation16",
                    "elevation17": "MuiPaper-elevation17",
                    "elevation18": "MuiPaper-elevation18",
                    "elevation19": "MuiPaper-elevation19",
                    "elevation2": "MuiPaper-elevation2",
                    "elevation20": "MuiPaper-elevation20",
                    "elevation21": "MuiPaper-elevation21",
                    "elevation22": "MuiPaper-elevation22",
                    "elevation23": "MuiPaper-elevation23",
                    "elevation24": "MuiPaper-elevation24",
                    "elevation3": "MuiPaper-elevation3",
                    "elevation4": "MuiPaper-elevation4",
                    "elevation5": "MuiPaper-elevation5",
                    "elevation6": "MuiPaper-elevation6",
                    "elevation7": "MuiPaper-elevation7",
                    "elevation8": "MuiPaper-elevation8",
                    "elevation9": "MuiPaper-elevation9",
                    "root": "MuiPaper-root",
                    "rounded": "MuiPaper-rounded",
                  }
                }
                elevation={0}
              >
                <div
                  className="MuiPaper-root MuiPaper-elevation0 MuiPaper-rounded"
                >
                  <Route>
                    <div
                      className="breadcrumb"
                    >
                      <li>
                        <span
                          className="content"
                        >
                          <span
                            className="icon"
                          >
                            <ForwardRef>
                              <WithStyles(ForwardRef(SvgIcon))>
                                <ForwardRef(SvgIcon)
                                  classes={
                                    Object {
                                      "colorAction": "MuiSvgIcon-colorAction",
                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                      "colorError": "MuiSvgIcon-colorError",
                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                      "root": "MuiSvgIcon-root",
                                    }
                                  }
                                >
                                  <svg
                                    aria-hidden="true"
                                    className="MuiSvgIcon-root"
                                    focusable="false"
                                    role="presentation"
                                    viewBox="0 0 24 24"
                                  >
                                    <path
                                      d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"
                                    />
                                  </svg>
                                </ForwardRef(SvgIcon)>
                              </WithStyles(ForwardRef(SvgIcon))>
                            </ForwardRef>
                          </span>
                        </span>
                      </li>
                      <StyledBreadcrumb
                        ariaLabel="Breadcrumb-base"
                        displayName="Proposals"
                        url="/browse/proposal"
                      >
                        <li>
                          <ArrowTooltip
                            title="Proposals"
                          >
                            <WithStyles(ForwardRef(Tooltip))
                              PopperProps={
                                Object {
                                  "popperOptions": Object {
                                    "modifiers": Object {
                                      "arrow": Object {
                                        "element": null,
                                        "enabled": false,
                                      },
                                    },
                                  },
                                }
                              }
                              classes={
                                Object {
                                  "popper": "makeStyles-popper-352",
                                  "tooltip": "makeStyles-tooltip-351",
                                }
                              }
                              disableHoverListener={true}
                              title={
                                <React.Fragment>
                                  Proposals
                                  <span
                                    className="makeStyles-arrow-353"
                                  />
                                </React.Fragment>
                              }
                            >
                              <ForwardRef(Tooltip)
                                PopperProps={
                                  Object {
                                    "popperOptions": Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    },
                                  }
                                }
                                classes={
                                  Object {
                                    "popper": "MuiTooltip-popper makeStyles-popper-352",
                                    "popperInteractive": "MuiTooltip-popperInteractive",
                                    "tooltip": "MuiTooltip-tooltip makeStyles-tooltip-351",
                                    "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                    "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                    "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                    "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                    "touch": "MuiTooltip-touch",
                                  }
                                }
                                disableHoverListener={true}
                                title={
                                  <React.Fragment>
                                    Proposals
                                    <span
                                      className="makeStyles-arrow-353"
                                    />
                                  </React.Fragment>
                                }
                              >
                                <div
                                  aria-describedby={null}
                                  className=""
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchStart={[Function]}
                                  title={null}
                                >
                                  <WithStyles(ForwardRef(Link))
                                    aria-label="Breadcrumb-base"
                                    className="content"
                                    component={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "displayName": "Link",
                                        "propTypes": Object {
                                          "innerRef": [Function],
                                          "onClick": [Function],
                                          "replace": [Function],
                                          "target": [Function],
                                          "to": [Function],
                                        },
                                        "render": [Function],
                                      }
                                    }
                                    to="/browse/proposal"
                                  >
                                    <ForwardRef(Link)
                                      aria-label="Breadcrumb-base"
                                      className="content"
                                      classes={
                                        Object {
                                          "button": "MuiLink-button",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiLink-root",
                                          "underlineAlways": "MuiLink-underlineAlways",
                                          "underlineHover": "MuiLink-underlineHover",
                                          "underlineNone": "MuiLink-underlineNone",
                                        }
                                      }
                                      component={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "displayName": "Link",
                                          "propTypes": Object {
                                            "innerRef": [Function],
                                            "onClick": [Function],
                                            "replace": [Function],
                                            "target": [Function],
                                            "to": [Function],
                                          },
                                          "render": [Function],
                                        }
                                      }
                                      to="/browse/proposal"
                                    >
                                      <WithStyles(ForwardRef(Typography))
                                        aria-label="Breadcrumb-base"
                                        className="MuiLink-root MuiLink-underlineHover content"
                                        color="primary"
                                        component={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "displayName": "Link",
                                            "propTypes": Object {
                                              "innerRef": [Function],
                                              "onClick": [Function],
                                              "replace": [Function],
                                              "target": [Function],
                                              "to": [Function],
                                            },
                                            "render": [Function],
                                          }
                                        }
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        to="/browse/proposal"
                                        variant="inherit"
                                      >
                                        <ForwardRef(Typography)
                                          aria-label="Breadcrumb-base"
                                          className="MuiLink-root MuiLink-underlineHover content"
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter",
                                              "alignJustify": "MuiTypography-alignJustify",
                                              "alignLeft": "MuiTypography-alignLeft",
                                              "alignRight": "MuiTypography-alignRight",
                                              "body1": "MuiTypography-body1",
                                              "body2": "MuiTypography-body2",
                                              "button": "MuiTypography-button",
                                              "caption": "MuiTypography-caption",
                                              "colorError": "MuiTypography-colorError",
                                              "colorInherit": "MuiTypography-colorInherit",
                                              "colorPrimary": "MuiTypography-colorPrimary",
                                              "colorSecondary": "MuiTypography-colorSecondary",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                              "displayBlock": "MuiTypography-displayBlock",
                                              "displayInline": "MuiTypography-displayInline",
                                              "gutterBottom": "MuiTypography-gutterBottom",
                                              "h1": "MuiTypography-h1",
                                              "h2": "MuiTypography-h2",
                                              "h3": "MuiTypography-h3",
                                              "h4": "MuiTypography-h4",
                                              "h5": "MuiTypography-h5",
                                              "h6": "MuiTypography-h6",
                                              "noWrap": "MuiTypography-noWrap",
                                              "overline": "MuiTypography-overline",
                                              "paragraph": "MuiTypography-paragraph",
                                              "root": "MuiTypography-root",
                                              "srOnly": "MuiTypography-srOnly",
                                              "subtitle1": "MuiTypography-subtitle1",
                                              "subtitle2": "MuiTypography-subtitle2",
                                            }
                                          }
                                          color="primary"
                                          component={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "displayName": "Link",
                                              "propTypes": Object {
                                                "innerRef": [Function],
                                                "onClick": [Function],
                                                "replace": [Function],
                                                "target": [Function],
                                                "to": [Function],
                                              },
                                              "render": [Function],
                                            }
                                          }
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          to="/browse/proposal"
                                          variant="inherit"
                                        >
                                          <Link
                                            aria-label="Breadcrumb-base"
                                            className="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            to="/browse/proposal"
                                          >
                                            <LinkAnchor
                                              aria-label="Breadcrumb-base"
                                              className="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                              href="/browse/proposal"
                                              navigate={[Function]}
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                            >
                                              <a
                                                aria-label="Breadcrumb-base"
                                                className="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                                href="/browse/proposal"
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                              >
                                                <span
                                                  className="displayContent"
                                                >
                                                  Proposals
                                                </span>
                                              </a>
                                            </LinkAnchor>
                                          </Link>
                                        </ForwardRef(Typography)>
                                      </WithStyles(ForwardRef(Typography))>
                                    </ForwardRef(Link)>
                                  </WithStyles(ForwardRef(Link))>
                                </div>
                                <ForwardRef(Popper)
                                  anchorEl={
                                    <div
                                      class=""
                                    >
                                      <a
                                        aria-label="Breadcrumb-base"
                                        class="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                        href="/browse/proposal"
                                      >
                                        <span
                                          class="displayContent"
                                        >
                                          Proposals
                                        </span>
                                      </a>
                                    </div>
                                  }
                                  className="MuiTooltip-popper makeStyles-popper-352"
                                  id={null}
                                  open={false}
                                  placement="bottom"
                                  popperOptions={
                                    Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    }
                                  }
                                  transition={true}
                                />
                              </ForwardRef(Tooltip)>
                            </WithStyles(ForwardRef(Tooltip))>
                          </ArrowTooltip>
                        </li>
                      </StyledBreadcrumb>
                      <StyledBreadcrumb
                        ariaLabel="Breadcrumb-hierarchy-1"
                        displayName="INVESTIGATION 1"
                        key="breadcrumb-1"
                      >
                        <li>
                          <ArrowTooltip
                            title="INVESTIGATION 1"
                          >
                            <WithStyles(ForwardRef(Tooltip))
                              PopperProps={
                                Object {
                                  "popperOptions": Object {
                                    "modifiers": Object {
                                      "arrow": Object {
                                        "element": null,
                                        "enabled": false,
                                      },
                                    },
                                  },
                                }
                              }
                              classes={
                                Object {
                                  "popper": "makeStyles-popper-352",
                                  "tooltip": "makeStyles-tooltip-351",
                                }
                              }
                              disableHoverListener={true}
                              title={
                                <React.Fragment>
                                  INVESTIGATION 1
                                  <span
                                    className="makeStyles-arrow-353"
                                  />
                                </React.Fragment>
                              }
                            >
                              <ForwardRef(Tooltip)
                                PopperProps={
                                  Object {
                                    "popperOptions": Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    },
                                  }
                                }
                                classes={
                                  Object {
                                    "popper": "MuiTooltip-popper makeStyles-popper-352",
                                    "popperInteractive": "MuiTooltip-popperInteractive",
                                    "tooltip": "MuiTooltip-tooltip makeStyles-tooltip-351",
                                    "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                    "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                    "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                    "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                    "touch": "MuiTooltip-touch",
                                  }
                                }
                                disableHoverListener={true}
                                title={
                                  <React.Fragment>
                                    INVESTIGATION 1
                                    <span
                                      className="makeStyles-arrow-353"
                                    />
                                  </React.Fragment>
                                }
                              >
                                <div
                                  aria-describedby={null}
                                  className=""
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchStart={[Function]}
                                  title={null}
                                >
                                  <WithStyles(ForwardRef(Typography))
                                    aria-label="Breadcrumb-hierarchy-1"
                                    className="content"
                                    color="textPrimary"
                                  >
                                    <ForwardRef(Typography)
                                      aria-label="Breadcrumb-hierarchy-1"
                                      className="content"
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textPrimary"
                                    >
                                      <p
                                        aria-label="Breadcrumb-hierarchy-1"
                                        className="MuiTypography-root content MuiTypography-body1 MuiTypography-colorTextPrimary"
                                      >
                                        <span
                                          className="displayContent"
                                        >
                                          INVESTIGATION 1
                                        </span>
                                      </p>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                </div>
                                <ForwardRef(Popper)
                                  anchorEl={
                                    <div
                                      class=""
                                    >
                                      <p
                                        aria-label="Breadcrumb-hierarchy-1"
                                        class="MuiTypography-root content MuiTypography-body1 MuiTypography-colorTextPrimary"
                                      >
                                        <span
                                          class="displayContent"
                                        >
                                          INVESTIGATION 1
                                        </span>
                                      </p>
                                    </div>
                                  }
                                  className="MuiTooltip-popper makeStyles-popper-352"
                                  id={null}
                                  open={false}
                                  placement="bottom"
                                  popperOptions={
                                    Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    }
                                  }
                                  transition={true}
                                />
                              </ForwardRef(Tooltip)>
                            </WithStyles(ForwardRef(Tooltip))>
                          </ArrowTooltip>
                        </li>
                      </StyledBreadcrumb>
                      <StyledBreadcrumb
                        ariaLabel="Breadcrumb-last"
                        displayName="Investigations"
                        isLast={true}
                      >
                        <li>
                          <ArrowTooltip
                            title="Investigations"
                          >
                            <WithStyles(ForwardRef(Tooltip))
                              PopperProps={
                                Object {
                                  "popperOptions": Object {
                                    "modifiers": Object {
                                      "arrow": Object {
                                        "element": null,
                                        "enabled": false,
                                      },
                                    },
                                  },
                                }
                              }
                              classes={
                                Object {
                                  "popper": "makeStyles-popper-352",
                                  "tooltip": "makeStyles-tooltip-351",
                                }
                              }
                              disableHoverListener={true}
                              title={
                                <React.Fragment>
                                  Investigations
                                  <span
                                    className="makeStyles-arrow-353"
                                  />
                                </React.Fragment>
                              }
                            >
                              <ForwardRef(Tooltip)
                                PopperProps={
                                  Object {
                                    "popperOptions": Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    },
                                  }
                                }
                                classes={
                                  Object {
                                    "popper": "MuiTooltip-popper makeStyles-popper-352",
                                    "popperInteractive": "MuiTooltip-popperInteractive",
                                    "tooltip": "MuiTooltip-tooltip makeStyles-tooltip-351",
                                    "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                    "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                    "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                    "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                    "touch": "MuiTooltip-touch",
                                  }
                                }
                                disableHoverListener={true}
                                title={
                                  <React.Fragment>
                                    Investigations
                                    <span
                                      className="makeStyles-arrow-353"
                                    />
                                  </React.Fragment>
                                }
                              >
                                <div
                                  aria-describedby={null}
                                  className=""
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchStart={[Function]}
                                  title={null}
                                >
                                  <WithStyles(ForwardRef(Typography))
                                    aria-label="Breadcrumb-last"
                                    className="content"
                                    color="textPrimary"
                                  >
                                    <ForwardRef(Typography)
                                      aria-label="Breadcrumb-last"
                                      className="content"
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textPrimary"
                                    >
                                      <p
                                        aria-label="Breadcrumb-last"
                                        className="MuiTypography-root content MuiTypography-body1 MuiTypography-colorTextPrimary"
                                      >
                                        <span
                                          className="displayContent"
                                        >
                                          <i>
                                            Investigations
                                          </i>
                                        </span>
                                      </p>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                </div>
                                <ForwardRef(Popper)
                                  anchorEl={
                                    <div
                                      class=""
                                    >
                                      <p
                                        aria-label="Breadcrumb-last"
                                        class="MuiTypography-root content MuiTypography-body1 MuiTypography-colorTextPrimary"
                                      >
                                        <span
                                          class="displayContent"
                                        >
                                          <i>
                                            Investigations
                                          </i>
                                        </span>
                                      </p>
                                    </div>
                                  }
                                  className="MuiTooltip-popper makeStyles-popper-352"
                                  id={null}
                                  open={false}
                                  placement="bottom"
                                  popperOptions={
                                    Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    }
                                  }
                                  transition={true}
                                />
                              </ForwardRef(Tooltip)>
                            </WithStyles(ForwardRef(Tooltip))>
                          </ArrowTooltip>
                        </li>
                      </StyledBreadcrumb>
                    </div>
                  </Route>
                </div>
              </ForwardRef(Paper)>
            </WithStyles(ForwardRef(Paper))>
          </div>
        </PageBreadcrumbs>
      </Connect(PageBreadcrumbs)>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`PageBreadcrumbs - Snapshot Tests (Generic, DLS, ISIS) renders correctly for DLS proposals route 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Connect(PageBreadcrumbs)>
        <PageBreadcrumbs
          apiUrl=""
          breadcrumbSettings={Object {}}
          dispatch={[Function]}
          location="/browse/proposal"
        >
          <div>
            <WithStyles(ForwardRef(Paper))
              elevation={0}
            >
              <ForwardRef(Paper)
                classes={
                  Object {
                    "elevation0": "MuiPaper-elevation0",
                    "elevation1": "MuiPaper-elevation1",
                    "elevation10": "MuiPaper-elevation10",
                    "elevation11": "MuiPaper-elevation11",
                    "elevation12": "MuiPaper-elevation12",
                    "elevation13": "MuiPaper-elevation13",
                    "elevation14": "MuiPaper-elevation14",
                    "elevation15": "MuiPaper-elevation15",
                    "elevation16": "MuiPaper-elevation16",
                    "elevation17": "MuiPaper-elevation17",
                    "elevation18": "MuiPaper-elevation18",
                    "elevation19": "MuiPaper-elevation19",
                    "elevation2": "MuiPaper-elevation2",
                    "elevation20": "MuiPaper-elevation20",
                    "elevation21": "MuiPaper-elevation21",
                    "elevation22": "MuiPaper-elevation22",
                    "elevation23": "MuiPaper-elevation23",
                    "elevation24": "MuiPaper-elevation24",
                    "elevation3": "MuiPaper-elevation3",
                    "elevation4": "MuiPaper-elevation4",
                    "elevation5": "MuiPaper-elevation5",
                    "elevation6": "MuiPaper-elevation6",
                    "elevation7": "MuiPaper-elevation7",
                    "elevation8": "MuiPaper-elevation8",
                    "elevation9": "MuiPaper-elevation9",
                    "root": "MuiPaper-root",
                    "rounded": "MuiPaper-rounded",
                  }
                }
                elevation={0}
              >
                <div
                  className="MuiPaper-root MuiPaper-elevation0 MuiPaper-rounded"
                >
                  <Route>
                    <div
                      className="breadcrumb"
                    >
                      <li>
                        <span
                          className="content"
                        >
                          <span
                            className="icon"
                          >
                            <ForwardRef>
                              <WithStyles(ForwardRef(SvgIcon))>
                                <ForwardRef(SvgIcon)
                                  classes={
                                    Object {
                                      "colorAction": "MuiSvgIcon-colorAction",
                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                      "colorError": "MuiSvgIcon-colorError",
                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                      "root": "MuiSvgIcon-root",
                                    }
                                  }
                                >
                                  <svg
                                    aria-hidden="true"
                                    className="MuiSvgIcon-root"
                                    focusable="false"
                                    role="presentation"
                                    viewBox="0 0 24 24"
                                  >
                                    <path
                                      d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"
                                    />
                                  </svg>
                                </ForwardRef(SvgIcon)>
                              </WithStyles(ForwardRef(SvgIcon))>
                            </ForwardRef>
                          </span>
                        </span>
                      </li>
                      <StyledBreadcrumb
                        ariaLabel="Breadcrumb-base"
                        displayName="Proposals"
                      >
                        <li>
                          <ArrowTooltip
                            title="Proposals"
                          >
                            <WithStyles(ForwardRef(Tooltip))
                              PopperProps={
                                Object {
                                  "popperOptions": Object {
                                    "modifiers": Object {
                                      "arrow": Object {
                                        "element": null,
                                        "enabled": false,
                                      },
                                    },
                                  },
                                }
                              }
                              classes={
                                Object {
                                  "popper": "makeStyles-popper-115",
                                  "tooltip": "makeStyles-tooltip-114",
                                }
                              }
                              disableHoverListener={true}
                              title={
                                <React.Fragment>
                                  Proposals
                                  <span
                                    className="makeStyles-arrow-116"
                                  />
                                </React.Fragment>
                              }
                            >
                              <ForwardRef(Tooltip)
                                PopperProps={
                                  Object {
                                    "popperOptions": Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    },
                                  }
                                }
                                classes={
                                  Object {
                                    "popper": "MuiTooltip-popper makeStyles-popper-115",
                                    "popperInteractive": "MuiTooltip-popperInteractive",
                                    "tooltip": "MuiTooltip-tooltip makeStyles-tooltip-114",
                                    "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                    "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                    "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                    "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                    "touch": "MuiTooltip-touch",
                                  }
                                }
                                disableHoverListener={true}
                                title={
                                  <React.Fragment>
                                    Proposals
                                    <span
                                      className="makeStyles-arrow-116"
                                    />
                                  </React.Fragment>
                                }
                              >
                                <div
                                  aria-describedby={null}
                                  className=""
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchStart={[Function]}
                                  title={null}
                                >
                                  <WithStyles(ForwardRef(Typography))
                                    aria-label="Breadcrumb-base"
                                    className="content"
                                    color="textPrimary"
                                  >
                                    <ForwardRef(Typography)
                                      aria-label="Breadcrumb-base"
                                      className="content"
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textPrimary"
                                    >
                                      <p
                                        aria-label="Breadcrumb-base"
                                        className="MuiTypography-root content MuiTypography-body1 MuiTypography-colorTextPrimary"
                                      >
                                        <span
                                          className="displayContent"
                                        >
                                          Proposals
                                        </span>
                                      </p>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                </div>
                                <ForwardRef(Popper)
                                  anchorEl={
                                    <div
                                      class=""
                                    >
                                      <p
                                        aria-label="Breadcrumb-base"
                                        class="MuiTypography-root content MuiTypography-body1 MuiTypography-colorTextPrimary"
                                      >
                                        <span
                                          class="displayContent"
                                        >
                                          Proposals
                                        </span>
                                      </p>
                                    </div>
                                  }
                                  className="MuiTooltip-popper makeStyles-popper-115"
                                  id={null}
                                  open={false}
                                  placement="bottom"
                                  popperOptions={
                                    Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    }
                                  }
                                  transition={true}
                                />
                              </ForwardRef(Tooltip)>
                            </WithStyles(ForwardRef(Tooltip))>
                          </ArrowTooltip>
                        </li>
                      </StyledBreadcrumb>
                    </div>
                  </Route>
                </div>
              </ForwardRef(Paper)>
            </WithStyles(ForwardRef(Paper))>
          </div>
        </PageBreadcrumbs>
      </Connect(PageBreadcrumbs)>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`PageBreadcrumbs - Snapshot Tests (Generic, DLS, ISIS) renders correctly for ISIS datafiles route 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Connect(PageBreadcrumbs)>
        <PageBreadcrumbs
          apiUrl=""
          breadcrumbSettings={Object {}}
          dispatch={[Function]}
          location="/browse/instrument/1/facilityCycle/1/investigation/1/dataset/1/datafile"
        >
          <div>
            <WithStyles(ForwardRef(Paper))
              elevation={0}
            >
              <ForwardRef(Paper)
                classes={
                  Object {
                    "elevation0": "MuiPaper-elevation0",
                    "elevation1": "MuiPaper-elevation1",
                    "elevation10": "MuiPaper-elevation10",
                    "elevation11": "MuiPaper-elevation11",
                    "elevation12": "MuiPaper-elevation12",
                    "elevation13": "MuiPaper-elevation13",
                    "elevation14": "MuiPaper-elevation14",
                    "elevation15": "MuiPaper-elevation15",
                    "elevation16": "MuiPaper-elevation16",
                    "elevation17": "MuiPaper-elevation17",
                    "elevation18": "MuiPaper-elevation18",
                    "elevation19": "MuiPaper-elevation19",
                    "elevation2": "MuiPaper-elevation2",
                    "elevation20": "MuiPaper-elevation20",
                    "elevation21": "MuiPaper-elevation21",
                    "elevation22": "MuiPaper-elevation22",
                    "elevation23": "MuiPaper-elevation23",
                    "elevation24": "MuiPaper-elevation24",
                    "elevation3": "MuiPaper-elevation3",
                    "elevation4": "MuiPaper-elevation4",
                    "elevation5": "MuiPaper-elevation5",
                    "elevation6": "MuiPaper-elevation6",
                    "elevation7": "MuiPaper-elevation7",
                    "elevation8": "MuiPaper-elevation8",
                    "elevation9": "MuiPaper-elevation9",
                    "root": "MuiPaper-root",
                    "rounded": "MuiPaper-rounded",
                  }
                }
                elevation={0}
              >
                <div
                  className="MuiPaper-root MuiPaper-elevation0 MuiPaper-rounded"
                >
                  <Route>
                    <div
                      className="breadcrumb"
                    >
                      <li>
                        <span
                          className="content"
                        >
                          <span
                            className="icon"
                          >
                            <ForwardRef>
                              <WithStyles(ForwardRef(SvgIcon))>
                                <ForwardRef(SvgIcon)
                                  classes={
                                    Object {
                                      "colorAction": "MuiSvgIcon-colorAction",
                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                      "colorError": "MuiSvgIcon-colorError",
                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                      "root": "MuiSvgIcon-root",
                                    }
                                  }
                                >
                                  <svg
                                    aria-hidden="true"
                                    className="MuiSvgIcon-root"
                                    focusable="false"
                                    role="presentation"
                                    viewBox="0 0 24 24"
                                  >
                                    <path
                                      d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"
                                    />
                                  </svg>
                                </ForwardRef(SvgIcon)>
                              </WithStyles(ForwardRef(SvgIcon))>
                            </ForwardRef>
                          </span>
                        </span>
                      </li>
                      <StyledBreadcrumb
                        ariaLabel="Breadcrumb-base"
                        displayName="Instruments"
                        url="/browse/instrument"
                      >
                        <li>
                          <ArrowTooltip
                            title="Instruments"
                          >
                            <WithStyles(ForwardRef(Tooltip))
                              PopperProps={
                                Object {
                                  "popperOptions": Object {
                                    "modifiers": Object {
                                      "arrow": Object {
                                        "element": null,
                                        "enabled": false,
                                      },
                                    },
                                  },
                                }
                              }
                              classes={
                                Object {
                                  "popper": "makeStyles-popper-767",
                                  "tooltip": "makeStyles-tooltip-766",
                                }
                              }
                              disableHoverListener={true}
                              title={
                                <React.Fragment>
                                  Instruments
                                  <span
                                    className="makeStyles-arrow-768"
                                  />
                                </React.Fragment>
                              }
                            >
                              <ForwardRef(Tooltip)
                                PopperProps={
                                  Object {
                                    "popperOptions": Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    },
                                  }
                                }
                                classes={
                                  Object {
                                    "popper": "MuiTooltip-popper makeStyles-popper-767",
                                    "popperInteractive": "MuiTooltip-popperInteractive",
                                    "tooltip": "MuiTooltip-tooltip makeStyles-tooltip-766",
                                    "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                    "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                    "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                    "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                    "touch": "MuiTooltip-touch",
                                  }
                                }
                                disableHoverListener={true}
                                title={
                                  <React.Fragment>
                                    Instruments
                                    <span
                                      className="makeStyles-arrow-768"
                                    />
                                  </React.Fragment>
                                }
                              >
                                <div
                                  aria-describedby={null}
                                  className=""
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchStart={[Function]}
                                  title={null}
                                >
                                  <WithStyles(ForwardRef(Link))
                                    aria-label="Breadcrumb-base"
                                    className="content"
                                    component={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "displayName": "Link",
                                        "propTypes": Object {
                                          "innerRef": [Function],
                                          "onClick": [Function],
                                          "replace": [Function],
                                          "target": [Function],
                                          "to": [Function],
                                        },
                                        "render": [Function],
                                      }
                                    }
                                    to="/browse/instrument"
                                  >
                                    <ForwardRef(Link)
                                      aria-label="Breadcrumb-base"
                                      className="content"
                                      classes={
                                        Object {
                                          "button": "MuiLink-button",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiLink-root",
                                          "underlineAlways": "MuiLink-underlineAlways",
                                          "underlineHover": "MuiLink-underlineHover",
                                          "underlineNone": "MuiLink-underlineNone",
                                        }
                                      }
                                      component={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "displayName": "Link",
                                          "propTypes": Object {
                                            "innerRef": [Function],
                                            "onClick": [Function],
                                            "replace": [Function],
                                            "target": [Function],
                                            "to": [Function],
                                          },
                                          "render": [Function],
                                        }
                                      }
                                      to="/browse/instrument"
                                    >
                                      <WithStyles(ForwardRef(Typography))
                                        aria-label="Breadcrumb-base"
                                        className="MuiLink-root MuiLink-underlineHover content"
                                        color="primary"
                                        component={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "displayName": "Link",
                                            "propTypes": Object {
                                              "innerRef": [Function],
                                              "onClick": [Function],
                                              "replace": [Function],
                                              "target": [Function],
                                              "to": [Function],
                                            },
                                            "render": [Function],
                                          }
                                        }
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        to="/browse/instrument"
                                        variant="inherit"
                                      >
                                        <ForwardRef(Typography)
                                          aria-label="Breadcrumb-base"
                                          className="MuiLink-root MuiLink-underlineHover content"
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter",
                                              "alignJustify": "MuiTypography-alignJustify",
                                              "alignLeft": "MuiTypography-alignLeft",
                                              "alignRight": "MuiTypography-alignRight",
                                              "body1": "MuiTypography-body1",
                                              "body2": "MuiTypography-body2",
                                              "button": "MuiTypography-button",
                                              "caption": "MuiTypography-caption",
                                              "colorError": "MuiTypography-colorError",
                                              "colorInherit": "MuiTypography-colorInherit",
                                              "colorPrimary": "MuiTypography-colorPrimary",
                                              "colorSecondary": "MuiTypography-colorSecondary",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                              "displayBlock": "MuiTypography-displayBlock",
                                              "displayInline": "MuiTypography-displayInline",
                                              "gutterBottom": "MuiTypography-gutterBottom",
                                              "h1": "MuiTypography-h1",
                                              "h2": "MuiTypography-h2",
                                              "h3": "MuiTypography-h3",
                                              "h4": "MuiTypography-h4",
                                              "h5": "MuiTypography-h5",
                                              "h6": "MuiTypography-h6",
                                              "noWrap": "MuiTypography-noWrap",
                                              "overline": "MuiTypography-overline",
                                              "paragraph": "MuiTypography-paragraph",
                                              "root": "MuiTypography-root",
                                              "srOnly": "MuiTypography-srOnly",
                                              "subtitle1": "MuiTypography-subtitle1",
                                              "subtitle2": "MuiTypography-subtitle2",
                                            }
                                          }
                                          color="primary"
                                          component={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "displayName": "Link",
                                              "propTypes": Object {
                                                "innerRef": [Function],
                                                "onClick": [Function],
                                                "replace": [Function],
                                                "target": [Function],
                                                "to": [Function],
                                              },
                                              "render": [Function],
                                            }
                                          }
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          to="/browse/instrument"
                                          variant="inherit"
                                        >
                                          <Link
                                            aria-label="Breadcrumb-base"
                                            className="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            to="/browse/instrument"
                                          >
                                            <LinkAnchor
                                              aria-label="Breadcrumb-base"
                                              className="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                              href="/browse/instrument"
                                              navigate={[Function]}
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                            >
                                              <a
                                                aria-label="Breadcrumb-base"
                                                className="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                                href="/browse/instrument"
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                              >
                                                <span
                                                  className="displayContent"
                                                >
                                                  Instruments
                                                </span>
                                              </a>
                                            </LinkAnchor>
                                          </Link>
                                        </ForwardRef(Typography)>
                                      </WithStyles(ForwardRef(Typography))>
                                    </ForwardRef(Link)>
                                  </WithStyles(ForwardRef(Link))>
                                </div>
                                <ForwardRef(Popper)
                                  anchorEl={
                                    <div
                                      class=""
                                    >
                                      <a
                                        aria-label="Breadcrumb-base"
                                        class="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                        href="/browse/instrument"
                                      >
                                        <span
                                          class="displayContent"
                                        >
                                          Instruments
                                        </span>
                                      </a>
                                    </div>
                                  }
                                  className="MuiTooltip-popper makeStyles-popper-767"
                                  id={null}
                                  open={false}
                                  placement="bottom"
                                  popperOptions={
                                    Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    }
                                  }
                                  transition={true}
                                />
                              </ForwardRef(Tooltip)>
                            </WithStyles(ForwardRef(Tooltip))>
                          </ArrowTooltip>
                        </li>
                      </StyledBreadcrumb>
                      <StyledBreadcrumb
                        ariaLabel="Breadcrumb-hierarchy-1"
                        displayName="INVESTIGATION 1"
                        key="breadcrumb-1"
                        url="/browse/instrument/1/facilityCycle"
                      >
                        <li>
                          <ArrowTooltip
                            title="INVESTIGATION 1"
                          >
                            <WithStyles(ForwardRef(Tooltip))
                              PopperProps={
                                Object {
                                  "popperOptions": Object {
                                    "modifiers": Object {
                                      "arrow": Object {
                                        "element": null,
                                        "enabled": false,
                                      },
                                    },
                                  },
                                }
                              }
                              classes={
                                Object {
                                  "popper": "makeStyles-popper-767",
                                  "tooltip": "makeStyles-tooltip-766",
                                }
                              }
                              disableHoverListener={true}
                              title={
                                <React.Fragment>
                                  INVESTIGATION 1
                                  <span
                                    className="makeStyles-arrow-768"
                                  />
                                </React.Fragment>
                              }
                            >
                              <ForwardRef(Tooltip)
                                PopperProps={
                                  Object {
                                    "popperOptions": Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    },
                                  }
                                }
                                classes={
                                  Object {
                                    "popper": "MuiTooltip-popper makeStyles-popper-767",
                                    "popperInteractive": "MuiTooltip-popperInteractive",
                                    "tooltip": "MuiTooltip-tooltip makeStyles-tooltip-766",
                                    "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                    "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                    "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                    "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                    "touch": "MuiTooltip-touch",
                                  }
                                }
                                disableHoverListener={true}
                                title={
                                  <React.Fragment>
                                    INVESTIGATION 1
                                    <span
                                      className="makeStyles-arrow-768"
                                    />
                                  </React.Fragment>
                                }
                              >
                                <div
                                  aria-describedby={null}
                                  className=""
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchStart={[Function]}
                                  title={null}
                                >
                                  <WithStyles(ForwardRef(Link))
                                    aria-label="Breadcrumb-hierarchy-1"
                                    className="content"
                                    component={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "displayName": "Link",
                                        "propTypes": Object {
                                          "innerRef": [Function],
                                          "onClick": [Function],
                                          "replace": [Function],
                                          "target": [Function],
                                          "to": [Function],
                                        },
                                        "render": [Function],
                                      }
                                    }
                                    to="/browse/instrument/1/facilityCycle"
                                  >
                                    <ForwardRef(Link)
                                      aria-label="Breadcrumb-hierarchy-1"
                                      className="content"
                                      classes={
                                        Object {
                                          "button": "MuiLink-button",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiLink-root",
                                          "underlineAlways": "MuiLink-underlineAlways",
                                          "underlineHover": "MuiLink-underlineHover",
                                          "underlineNone": "MuiLink-underlineNone",
                                        }
                                      }
                                      component={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "displayName": "Link",
                                          "propTypes": Object {
                                            "innerRef": [Function],
                                            "onClick": [Function],
                                            "replace": [Function],
                                            "target": [Function],
                                            "to": [Function],
                                          },
                                          "render": [Function],
                                        }
                                      }
                                      to="/browse/instrument/1/facilityCycle"
                                    >
                                      <WithStyles(ForwardRef(Typography))
                                        aria-label="Breadcrumb-hierarchy-1"
                                        className="MuiLink-root MuiLink-underlineHover content"
                                        color="primary"
                                        component={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "displayName": "Link",
                                            "propTypes": Object {
                                              "innerRef": [Function],
                                              "onClick": [Function],
                                              "replace": [Function],
                                              "target": [Function],
                                              "to": [Function],
                                            },
                                            "render": [Function],
                                          }
                                        }
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        to="/browse/instrument/1/facilityCycle"
                                        variant="inherit"
                                      >
                                        <ForwardRef(Typography)
                                          aria-label="Breadcrumb-hierarchy-1"
                                          className="MuiLink-root MuiLink-underlineHover content"
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter",
                                              "alignJustify": "MuiTypography-alignJustify",
                                              "alignLeft": "MuiTypography-alignLeft",
                                              "alignRight": "MuiTypography-alignRight",
                                              "body1": "MuiTypography-body1",
                                              "body2": "MuiTypography-body2",
                                              "button": "MuiTypography-button",
                                              "caption": "MuiTypography-caption",
                                              "colorError": "MuiTypography-colorError",
                                              "colorInherit": "MuiTypography-colorInherit",
                                              "colorPrimary": "MuiTypography-colorPrimary",
                                              "colorSecondary": "MuiTypography-colorSecondary",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                              "displayBlock": "MuiTypography-displayBlock",
                                              "displayInline": "MuiTypography-displayInline",
                                              "gutterBottom": "MuiTypography-gutterBottom",
                                              "h1": "MuiTypography-h1",
                                              "h2": "MuiTypography-h2",
                                              "h3": "MuiTypography-h3",
                                              "h4": "MuiTypography-h4",
                                              "h5": "MuiTypography-h5",
                                              "h6": "MuiTypography-h6",
                                              "noWrap": "MuiTypography-noWrap",
                                              "overline": "MuiTypography-overline",
                                              "paragraph": "MuiTypography-paragraph",
                                              "root": "MuiTypography-root",
                                              "srOnly": "MuiTypography-srOnly",
                                              "subtitle1": "MuiTypography-subtitle1",
                                              "subtitle2": "MuiTypography-subtitle2",
                                            }
                                          }
                                          color="primary"
                                          component={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "displayName": "Link",
                                              "propTypes": Object {
                                                "innerRef": [Function],
                                                "onClick": [Function],
                                                "replace": [Function],
                                                "target": [Function],
                                                "to": [Function],
                                              },
                                              "render": [Function],
                                            }
                                          }
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          to="/browse/instrument/1/facilityCycle"
                                          variant="inherit"
                                        >
                                          <Link
                                            aria-label="Breadcrumb-hierarchy-1"
                                            className="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            to="/browse/instrument/1/facilityCycle"
                                          >
                                            <LinkAnchor
                                              aria-label="Breadcrumb-hierarchy-1"
                                              className="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                              href="/browse/instrument/1/facilityCycle"
                                              navigate={[Function]}
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                            >
                                              <a
                                                aria-label="Breadcrumb-hierarchy-1"
                                                className="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                                href="/browse/instrument/1/facilityCycle"
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                              >
                                                <span
                                                  className="displayContent"
                                                >
                                                  INVESTIGATION 1
                                                </span>
                                              </a>
                                            </LinkAnchor>
                                          </Link>
                                        </ForwardRef(Typography)>
                                      </WithStyles(ForwardRef(Typography))>
                                    </ForwardRef(Link)>
                                  </WithStyles(ForwardRef(Link))>
                                </div>
                                <ForwardRef(Popper)
                                  anchorEl={
                                    <div
                                      class=""
                                    >
                                      <a
                                        aria-label="Breadcrumb-hierarchy-1"
                                        class="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                        href="/browse/instrument/1/facilityCycle"
                                      >
                                        <span
                                          class="displayContent"
                                        >
                                          INVESTIGATION 1
                                        </span>
                                      </a>
                                    </div>
                                  }
                                  className="MuiTooltip-popper makeStyles-popper-767"
                                  id={null}
                                  open={false}
                                  placement="bottom"
                                  popperOptions={
                                    Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    }
                                  }
                                  transition={true}
                                />
                              </ForwardRef(Tooltip)>
                            </WithStyles(ForwardRef(Tooltip))>
                          </ArrowTooltip>
                        </li>
                      </StyledBreadcrumb>
                      <StyledBreadcrumb
                        ariaLabel="Breadcrumb-hierarchy-2"
                        displayName="INVESTIGATION 1"
                        key="breadcrumb-2"
                        url="/browse/instrument/1/facilityCycle/1/investigation"
                      >
                        <li>
                          <ArrowTooltip
                            title="INVESTIGATION 1"
                          >
                            <WithStyles(ForwardRef(Tooltip))
                              PopperProps={
                                Object {
                                  "popperOptions": Object {
                                    "modifiers": Object {
                                      "arrow": Object {
                                        "element": null,
                                        "enabled": false,
                                      },
                                    },
                                  },
                                }
                              }
                              classes={
                                Object {
                                  "popper": "makeStyles-popper-767",
                                  "tooltip": "makeStyles-tooltip-766",
                                }
                              }
                              disableHoverListener={true}
                              title={
                                <React.Fragment>
                                  INVESTIGATION 1
                                  <span
                                    className="makeStyles-arrow-768"
                                  />
                                </React.Fragment>
                              }
                            >
                              <ForwardRef(Tooltip)
                                PopperProps={
                                  Object {
                                    "popperOptions": Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    },
                                  }
                                }
                                classes={
                                  Object {
                                    "popper": "MuiTooltip-popper makeStyles-popper-767",
                                    "popperInteractive": "MuiTooltip-popperInteractive",
                                    "tooltip": "MuiTooltip-tooltip makeStyles-tooltip-766",
                                    "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                    "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                    "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                    "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                    "touch": "MuiTooltip-touch",
                                  }
                                }
                                disableHoverListener={true}
                                title={
                                  <React.Fragment>
                                    INVESTIGATION 1
                                    <span
                                      className="makeStyles-arrow-768"
                                    />
                                  </React.Fragment>
                                }
                              >
                                <div
                                  aria-describedby={null}
                                  className=""
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchStart={[Function]}
                                  title={null}
                                >
                                  <WithStyles(ForwardRef(Link))
                                    aria-label="Breadcrumb-hierarchy-2"
                                    className="content"
                                    component={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "displayName": "Link",
                                        "propTypes": Object {
                                          "innerRef": [Function],
                                          "onClick": [Function],
                                          "replace": [Function],
                                          "target": [Function],
                                          "to": [Function],
                                        },
                                        "render": [Function],
                                      }
                                    }
                                    to="/browse/instrument/1/facilityCycle/1/investigation"
                                  >
                                    <ForwardRef(Link)
                                      aria-label="Breadcrumb-hierarchy-2"
                                      className="content"
                                      classes={
                                        Object {
                                          "button": "MuiLink-button",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiLink-root",
                                          "underlineAlways": "MuiLink-underlineAlways",
                                          "underlineHover": "MuiLink-underlineHover",
                                          "underlineNone": "MuiLink-underlineNone",
                                        }
                                      }
                                      component={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "displayName": "Link",
                                          "propTypes": Object {
                                            "innerRef": [Function],
                                            "onClick": [Function],
                                            "replace": [Function],
                                            "target": [Function],
                                            "to": [Function],
                                          },
                                          "render": [Function],
                                        }
                                      }
                                      to="/browse/instrument/1/facilityCycle/1/investigation"
                                    >
                                      <WithStyles(ForwardRef(Typography))
                                        aria-label="Breadcrumb-hierarchy-2"
                                        className="MuiLink-root MuiLink-underlineHover content"
                                        color="primary"
                                        component={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "displayName": "Link",
                                            "propTypes": Object {
                                              "innerRef": [Function],
                                              "onClick": [Function],
                                              "replace": [Function],
                                              "target": [Function],
                                              "to": [Function],
                                            },
                                            "render": [Function],
                                          }
                                        }
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        to="/browse/instrument/1/facilityCycle/1/investigation"
                                        variant="inherit"
                                      >
                                        <ForwardRef(Typography)
                                          aria-label="Breadcrumb-hierarchy-2"
                                          className="MuiLink-root MuiLink-underlineHover content"
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter",
                                              "alignJustify": "MuiTypography-alignJustify",
                                              "alignLeft": "MuiTypography-alignLeft",
                                              "alignRight": "MuiTypography-alignRight",
                                              "body1": "MuiTypography-body1",
                                              "body2": "MuiTypography-body2",
                                              "button": "MuiTypography-button",
                                              "caption": "MuiTypography-caption",
                                              "colorError": "MuiTypography-colorError",
                                              "colorInherit": "MuiTypography-colorInherit",
                                              "colorPrimary": "MuiTypography-colorPrimary",
                                              "colorSecondary": "MuiTypography-colorSecondary",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                              "displayBlock": "MuiTypography-displayBlock",
                                              "displayInline": "MuiTypography-displayInline",
                                              "gutterBottom": "MuiTypography-gutterBottom",
                                              "h1": "MuiTypography-h1",
                                              "h2": "MuiTypography-h2",
                                              "h3": "MuiTypography-h3",
                                              "h4": "MuiTypography-h4",
                                              "h5": "MuiTypography-h5",
                                              "h6": "MuiTypography-h6",
                                              "noWrap": "MuiTypography-noWrap",
                                              "overline": "MuiTypography-overline",
                                              "paragraph": "MuiTypography-paragraph",
                                              "root": "MuiTypography-root",
                                              "srOnly": "MuiTypography-srOnly",
                                              "subtitle1": "MuiTypography-subtitle1",
                                              "subtitle2": "MuiTypography-subtitle2",
                                            }
                                          }
                                          color="primary"
                                          component={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "displayName": "Link",
                                              "propTypes": Object {
                                                "innerRef": [Function],
                                                "onClick": [Function],
                                                "replace": [Function],
                                                "target": [Function],
                                                "to": [Function],
                                              },
                                              "render": [Function],
                                            }
                                          }
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          to="/browse/instrument/1/facilityCycle/1/investigation"
                                          variant="inherit"
                                        >
                                          <Link
                                            aria-label="Breadcrumb-hierarchy-2"
                                            className="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            to="/browse/instrument/1/facilityCycle/1/investigation"
                                          >
                                            <LinkAnchor
                                              aria-label="Breadcrumb-hierarchy-2"
                                              className="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                              href="/browse/instrument/1/facilityCycle/1/investigation"
                                              navigate={[Function]}
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                            >
                                              <a
                                                aria-label="Breadcrumb-hierarchy-2"
                                                className="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                                href="/browse/instrument/1/facilityCycle/1/investigation"
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                              >
                                                <span
                                                  className="displayContent"
                                                >
                                                  INVESTIGATION 1
                                                </span>
                                              </a>
                                            </LinkAnchor>
                                          </Link>
                                        </ForwardRef(Typography)>
                                      </WithStyles(ForwardRef(Typography))>
                                    </ForwardRef(Link)>
                                  </WithStyles(ForwardRef(Link))>
                                </div>
                                <ForwardRef(Popper)
                                  anchorEl={
                                    <div
                                      class=""
                                    >
                                      <a
                                        aria-label="Breadcrumb-hierarchy-2"
                                        class="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                        href="/browse/instrument/1/facilityCycle/1/investigation"
                                      >
                                        <span
                                          class="displayContent"
                                        >
                                          INVESTIGATION 1
                                        </span>
                                      </a>
                                    </div>
                                  }
                                  className="MuiTooltip-popper makeStyles-popper-767"
                                  id={null}
                                  open={false}
                                  placement="bottom"
                                  popperOptions={
                                    Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    }
                                  }
                                  transition={true}
                                />
                              </ForwardRef(Tooltip)>
                            </WithStyles(ForwardRef(Tooltip))>
                          </ArrowTooltip>
                        </li>
                      </StyledBreadcrumb>
                      <StyledBreadcrumb
                        ariaLabel="Breadcrumb-hierarchy-3"
                        displayName="Test 1"
                        key="breadcrumb-3"
                        url="/browse/instrument/1/facilityCycle/1/investigation/1/dataset"
                      >
                        <li>
                          <ArrowTooltip
                            title="Test 1"
                          >
                            <WithStyles(ForwardRef(Tooltip))
                              PopperProps={
                                Object {
                                  "popperOptions": Object {
                                    "modifiers": Object {
                                      "arrow": Object {
                                        "element": null,
                                        "enabled": false,
                                      },
                                    },
                                  },
                                }
                              }
                              classes={
                                Object {
                                  "popper": "makeStyles-popper-767",
                                  "tooltip": "makeStyles-tooltip-766",
                                }
                              }
                              disableHoverListener={true}
                              title={
                                <React.Fragment>
                                  Test 1
                                  <span
                                    className="makeStyles-arrow-768"
                                  />
                                </React.Fragment>
                              }
                            >
                              <ForwardRef(Tooltip)
                                PopperProps={
                                  Object {
                                    "popperOptions": Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    },
                                  }
                                }
                                classes={
                                  Object {
                                    "popper": "MuiTooltip-popper makeStyles-popper-767",
                                    "popperInteractive": "MuiTooltip-popperInteractive",
                                    "tooltip": "MuiTooltip-tooltip makeStyles-tooltip-766",
                                    "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                    "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                    "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                    "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                    "touch": "MuiTooltip-touch",
                                  }
                                }
                                disableHoverListener={true}
                                title={
                                  <React.Fragment>
                                    Test 1
                                    <span
                                      className="makeStyles-arrow-768"
                                    />
                                  </React.Fragment>
                                }
                              >
                                <div
                                  aria-describedby={null}
                                  className=""
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchStart={[Function]}
                                  title={null}
                                >
                                  <WithStyles(ForwardRef(Link))
                                    aria-label="Breadcrumb-hierarchy-3"
                                    className="content"
                                    component={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "displayName": "Link",
                                        "propTypes": Object {
                                          "innerRef": [Function],
                                          "onClick": [Function],
                                          "replace": [Function],
                                          "target": [Function],
                                          "to": [Function],
                                        },
                                        "render": [Function],
                                      }
                                    }
                                    to="/browse/instrument/1/facilityCycle/1/investigation/1/dataset"
                                  >
                                    <ForwardRef(Link)
                                      aria-label="Breadcrumb-hierarchy-3"
                                      className="content"
                                      classes={
                                        Object {
                                          "button": "MuiLink-button",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiLink-root",
                                          "underlineAlways": "MuiLink-underlineAlways",
                                          "underlineHover": "MuiLink-underlineHover",
                                          "underlineNone": "MuiLink-underlineNone",
                                        }
                                      }
                                      component={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "displayName": "Link",
                                          "propTypes": Object {
                                            "innerRef": [Function],
                                            "onClick": [Function],
                                            "replace": [Function],
                                            "target": [Function],
                                            "to": [Function],
                                          },
                                          "render": [Function],
                                        }
                                      }
                                      to="/browse/instrument/1/facilityCycle/1/investigation/1/dataset"
                                    >
                                      <WithStyles(ForwardRef(Typography))
                                        aria-label="Breadcrumb-hierarchy-3"
                                        className="MuiLink-root MuiLink-underlineHover content"
                                        color="primary"
                                        component={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "displayName": "Link",
                                            "propTypes": Object {
                                              "innerRef": [Function],
                                              "onClick": [Function],
                                              "replace": [Function],
                                              "target": [Function],
                                              "to": [Function],
                                            },
                                            "render": [Function],
                                          }
                                        }
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        to="/browse/instrument/1/facilityCycle/1/investigation/1/dataset"
                                        variant="inherit"
                                      >
                                        <ForwardRef(Typography)
                                          aria-label="Breadcrumb-hierarchy-3"
                                          className="MuiLink-root MuiLink-underlineHover content"
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter",
                                              "alignJustify": "MuiTypography-alignJustify",
                                              "alignLeft": "MuiTypography-alignLeft",
                                              "alignRight": "MuiTypography-alignRight",
                                              "body1": "MuiTypography-body1",
                                              "body2": "MuiTypography-body2",
                                              "button": "MuiTypography-button",
                                              "caption": "MuiTypography-caption",
                                              "colorError": "MuiTypography-colorError",
                                              "colorInherit": "MuiTypography-colorInherit",
                                              "colorPrimary": "MuiTypography-colorPrimary",
                                              "colorSecondary": "MuiTypography-colorSecondary",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                              "displayBlock": "MuiTypography-displayBlock",
                                              "displayInline": "MuiTypography-displayInline",
                                              "gutterBottom": "MuiTypography-gutterBottom",
                                              "h1": "MuiTypography-h1",
                                              "h2": "MuiTypography-h2",
                                              "h3": "MuiTypography-h3",
                                              "h4": "MuiTypography-h4",
                                              "h5": "MuiTypography-h5",
                                              "h6": "MuiTypography-h6",
                                              "noWrap": "MuiTypography-noWrap",
                                              "overline": "MuiTypography-overline",
                                              "paragraph": "MuiTypography-paragraph",
                                              "root": "MuiTypography-root",
                                              "srOnly": "MuiTypography-srOnly",
                                              "subtitle1": "MuiTypography-subtitle1",
                                              "subtitle2": "MuiTypography-subtitle2",
                                            }
                                          }
                                          color="primary"
                                          component={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "displayName": "Link",
                                              "propTypes": Object {
                                                "innerRef": [Function],
                                                "onClick": [Function],
                                                "replace": [Function],
                                                "target": [Function],
                                                "to": [Function],
                                              },
                                              "render": [Function],
                                            }
                                          }
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          to="/browse/instrument/1/facilityCycle/1/investigation/1/dataset"
                                          variant="inherit"
                                        >
                                          <Link
                                            aria-label="Breadcrumb-hierarchy-3"
                                            className="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            to="/browse/instrument/1/facilityCycle/1/investigation/1/dataset"
                                          >
                                            <LinkAnchor
                                              aria-label="Breadcrumb-hierarchy-3"
                                              className="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                              href="/browse/instrument/1/facilityCycle/1/investigation/1/dataset"
                                              navigate={[Function]}
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                            >
                                              <a
                                                aria-label="Breadcrumb-hierarchy-3"
                                                className="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                                href="/browse/instrument/1/facilityCycle/1/investigation/1/dataset"
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                              >
                                                <span
                                                  className="displayContent"
                                                >
                                                  Test 1
                                                </span>
                                              </a>
                                            </LinkAnchor>
                                          </Link>
                                        </ForwardRef(Typography)>
                                      </WithStyles(ForwardRef(Typography))>
                                    </ForwardRef(Link)>
                                  </WithStyles(ForwardRef(Link))>
                                </div>
                                <ForwardRef(Popper)
                                  anchorEl={
                                    <div
                                      class=""
                                    >
                                      <a
                                        aria-label="Breadcrumb-hierarchy-3"
                                        class="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                        href="/browse/instrument/1/facilityCycle/1/investigation/1/dataset"
                                      >
                                        <span
                                          class="displayContent"
                                        >
                                          Test 1
                                        </span>
                                      </a>
                                    </div>
                                  }
                                  className="MuiTooltip-popper makeStyles-popper-767"
                                  id={null}
                                  open={false}
                                  placement="bottom"
                                  popperOptions={
                                    Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    }
                                  }
                                  transition={true}
                                />
                              </ForwardRef(Tooltip)>
                            </WithStyles(ForwardRef(Tooltip))>
                          </ArrowTooltip>
                        </li>
                      </StyledBreadcrumb>
                      <StyledBreadcrumb
                        ariaLabel="Breadcrumb-hierarchy-4"
                        displayName="INVESTIGATION 1"
                        key="breadcrumb-4"
                      >
                        <li>
                          <ArrowTooltip
                            title="INVESTIGATION 1"
                          >
                            <WithStyles(ForwardRef(Tooltip))
                              PopperProps={
                                Object {
                                  "popperOptions": Object {
                                    "modifiers": Object {
                                      "arrow": Object {
                                        "element": null,
                                        "enabled": false,
                                      },
                                    },
                                  },
                                }
                              }
                              classes={
                                Object {
                                  "popper": "makeStyles-popper-767",
                                  "tooltip": "makeStyles-tooltip-766",
                                }
                              }
                              disableHoverListener={true}
                              title={
                                <React.Fragment>
                                  INVESTIGATION 1
                                  <span
                                    className="makeStyles-arrow-768"
                                  />
                                </React.Fragment>
                              }
                            >
                              <ForwardRef(Tooltip)
                                PopperProps={
                                  Object {
                                    "popperOptions": Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    },
                                  }
                                }
                                classes={
                                  Object {
                                    "popper": "MuiTooltip-popper makeStyles-popper-767",
                                    "popperInteractive": "MuiTooltip-popperInteractive",
                                    "tooltip": "MuiTooltip-tooltip makeStyles-tooltip-766",
                                    "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                    "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                    "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                    "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                    "touch": "MuiTooltip-touch",
                                  }
                                }
                                disableHoverListener={true}
                                title={
                                  <React.Fragment>
                                    INVESTIGATION 1
                                    <span
                                      className="makeStyles-arrow-768"
                                    />
                                  </React.Fragment>
                                }
                              >
                                <div
                                  aria-describedby={null}
                                  className=""
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchStart={[Function]}
                                  title={null}
                                >
                                  <WithStyles(ForwardRef(Typography))
                                    aria-label="Breadcrumb-hierarchy-4"
                                    className="content"
                                    color="textPrimary"
                                  >
                                    <ForwardRef(Typography)
                                      aria-label="Breadcrumb-hierarchy-4"
                                      className="content"
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textPrimary"
                                    >
                                      <p
                                        aria-label="Breadcrumb-hierarchy-4"
                                        className="MuiTypography-root content MuiTypography-body1 MuiTypography-colorTextPrimary"
                                      >
                                        <span
                                          className="displayContent"
                                        >
                                          INVESTIGATION 1
                                        </span>
                                      </p>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                </div>
                                <ForwardRef(Popper)
                                  anchorEl={
                                    <div
                                      class=""
                                    >
                                      <p
                                        aria-label="Breadcrumb-hierarchy-4"
                                        class="MuiTypography-root content MuiTypography-body1 MuiTypography-colorTextPrimary"
                                      >
                                        <span
                                          class="displayContent"
                                        >
                                          INVESTIGATION 1
                                        </span>
                                      </p>
                                    </div>
                                  }
                                  className="MuiTooltip-popper makeStyles-popper-767"
                                  id={null}
                                  open={false}
                                  placement="bottom"
                                  popperOptions={
                                    Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    }
                                  }
                                  transition={true}
                                />
                              </ForwardRef(Tooltip)>
                            </WithStyles(ForwardRef(Tooltip))>
                          </ArrowTooltip>
                        </li>
                      </StyledBreadcrumb>
                      <StyledBreadcrumb
                        ariaLabel="Breadcrumb-last"
                        displayName="Datafiles"
                        isLast={true}
                      >
                        <li>
                          <ArrowTooltip
                            title="Datafiles"
                          >
                            <WithStyles(ForwardRef(Tooltip))
                              PopperProps={
                                Object {
                                  "popperOptions": Object {
                                    "modifiers": Object {
                                      "arrow": Object {
                                        "element": null,
                                        "enabled": false,
                                      },
                                    },
                                  },
                                }
                              }
                              classes={
                                Object {
                                  "popper": "makeStyles-popper-767",
                                  "tooltip": "makeStyles-tooltip-766",
                                }
                              }
                              disableHoverListener={true}
                              title={
                                <React.Fragment>
                                  Datafiles
                                  <span
                                    className="makeStyles-arrow-768"
                                  />
                                </React.Fragment>
                              }
                            >
                              <ForwardRef(Tooltip)
                                PopperProps={
                                  Object {
                                    "popperOptions": Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    },
                                  }
                                }
                                classes={
                                  Object {
                                    "popper": "MuiTooltip-popper makeStyles-popper-767",
                                    "popperInteractive": "MuiTooltip-popperInteractive",
                                    "tooltip": "MuiTooltip-tooltip makeStyles-tooltip-766",
                                    "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                    "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                    "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                    "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                    "touch": "MuiTooltip-touch",
                                  }
                                }
                                disableHoverListener={true}
                                title={
                                  <React.Fragment>
                                    Datafiles
                                    <span
                                      className="makeStyles-arrow-768"
                                    />
                                  </React.Fragment>
                                }
                              >
                                <div
                                  aria-describedby={null}
                                  className=""
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchStart={[Function]}
                                  title={null}
                                >
                                  <WithStyles(ForwardRef(Typography))
                                    aria-label="Breadcrumb-last"
                                    className="content"
                                    color="textPrimary"
                                  >
                                    <ForwardRef(Typography)
                                      aria-label="Breadcrumb-last"
                                      className="content"
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textPrimary"
                                    >
                                      <p
                                        aria-label="Breadcrumb-last"
                                        className="MuiTypography-root content MuiTypography-body1 MuiTypography-colorTextPrimary"
                                      >
                                        <span
                                          className="displayContent"
                                        >
                                          <i>
                                            Datafiles
                                          </i>
                                        </span>
                                      </p>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                </div>
                                <ForwardRef(Popper)
                                  anchorEl={
                                    <div
                                      class=""
                                    >
                                      <p
                                        aria-label="Breadcrumb-last"
                                        class="MuiTypography-root content MuiTypography-body1 MuiTypography-colorTextPrimary"
                                      >
                                        <span
                                          class="displayContent"
                                        >
                                          <i>
                                            Datafiles
                                          </i>
                                        </span>
                                      </p>
                                    </div>
                                  }
                                  className="MuiTooltip-popper makeStyles-popper-767"
                                  id={null}
                                  open={false}
                                  placement="bottom"
                                  popperOptions={
                                    Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    }
                                  }
                                  transition={true}
                                />
                              </ForwardRef(Tooltip)>
                            </WithStyles(ForwardRef(Tooltip))>
                          </ArrowTooltip>
                        </li>
                      </StyledBreadcrumb>
                    </div>
                  </Route>
                </div>
              </ForwardRef(Paper)>
            </WithStyles(ForwardRef(Paper))>
          </div>
        </PageBreadcrumbs>
      </Connect(PageBreadcrumbs)>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`PageBreadcrumbs - Snapshot Tests (Generic, DLS, ISIS) renders correctly for ISIS datasets route 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Connect(PageBreadcrumbs)>
        <PageBreadcrumbs
          apiUrl=""
          breadcrumbSettings={Object {}}
          dispatch={[Function]}
          location="/browse/instrument/1/facilityCycle/1/investigation/1/dataset"
        >
          <div>
            <WithStyles(ForwardRef(Paper))
              elevation={0}
            >
              <ForwardRef(Paper)
                classes={
                  Object {
                    "elevation0": "MuiPaper-elevation0",
                    "elevation1": "MuiPaper-elevation1",
                    "elevation10": "MuiPaper-elevation10",
                    "elevation11": "MuiPaper-elevation11",
                    "elevation12": "MuiPaper-elevation12",
                    "elevation13": "MuiPaper-elevation13",
                    "elevation14": "MuiPaper-elevation14",
                    "elevation15": "MuiPaper-elevation15",
                    "elevation16": "MuiPaper-elevation16",
                    "elevation17": "MuiPaper-elevation17",
                    "elevation18": "MuiPaper-elevation18",
                    "elevation19": "MuiPaper-elevation19",
                    "elevation2": "MuiPaper-elevation2",
                    "elevation20": "MuiPaper-elevation20",
                    "elevation21": "MuiPaper-elevation21",
                    "elevation22": "MuiPaper-elevation22",
                    "elevation23": "MuiPaper-elevation23",
                    "elevation24": "MuiPaper-elevation24",
                    "elevation3": "MuiPaper-elevation3",
                    "elevation4": "MuiPaper-elevation4",
                    "elevation5": "MuiPaper-elevation5",
                    "elevation6": "MuiPaper-elevation6",
                    "elevation7": "MuiPaper-elevation7",
                    "elevation8": "MuiPaper-elevation8",
                    "elevation9": "MuiPaper-elevation9",
                    "root": "MuiPaper-root",
                    "rounded": "MuiPaper-rounded",
                  }
                }
                elevation={0}
              >
                <div
                  className="MuiPaper-root MuiPaper-elevation0 MuiPaper-rounded"
                >
                  <Route>
                    <div
                      className="breadcrumb"
                    >
                      <li>
                        <span
                          className="content"
                        >
                          <span
                            className="icon"
                          >
                            <ForwardRef>
                              <WithStyles(ForwardRef(SvgIcon))>
                                <ForwardRef(SvgIcon)
                                  classes={
                                    Object {
                                      "colorAction": "MuiSvgIcon-colorAction",
                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                      "colorError": "MuiSvgIcon-colorError",
                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                      "root": "MuiSvgIcon-root",
                                    }
                                  }
                                >
                                  <svg
                                    aria-hidden="true"
                                    className="MuiSvgIcon-root"
                                    focusable="false"
                                    role="presentation"
                                    viewBox="0 0 24 24"
                                  >
                                    <path
                                      d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"
                                    />
                                  </svg>
                                </ForwardRef(SvgIcon)>
                              </WithStyles(ForwardRef(SvgIcon))>
                            </ForwardRef>
                          </span>
                        </span>
                      </li>
                      <StyledBreadcrumb
                        ariaLabel="Breadcrumb-base"
                        displayName="Instruments"
                        url="/browse/instrument"
                      >
                        <li>
                          <ArrowTooltip
                            title="Instruments"
                          >
                            <WithStyles(ForwardRef(Tooltip))
                              PopperProps={
                                Object {
                                  "popperOptions": Object {
                                    "modifiers": Object {
                                      "arrow": Object {
                                        "element": null,
                                        "enabled": false,
                                      },
                                    },
                                  },
                                }
                              }
                              classes={
                                Object {
                                  "popper": "makeStyles-popper-518",
                                  "tooltip": "makeStyles-tooltip-517",
                                }
                              }
                              disableHoverListener={true}
                              title={
                                <React.Fragment>
                                  Instruments
                                  <span
                                    className="makeStyles-arrow-519"
                                  />
                                </React.Fragment>
                              }
                            >
                              <ForwardRef(Tooltip)
                                PopperProps={
                                  Object {
                                    "popperOptions": Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    },
                                  }
                                }
                                classes={
                                  Object {
                                    "popper": "MuiTooltip-popper makeStyles-popper-518",
                                    "popperInteractive": "MuiTooltip-popperInteractive",
                                    "tooltip": "MuiTooltip-tooltip makeStyles-tooltip-517",
                                    "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                    "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                    "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                    "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                    "touch": "MuiTooltip-touch",
                                  }
                                }
                                disableHoverListener={true}
                                title={
                                  <React.Fragment>
                                    Instruments
                                    <span
                                      className="makeStyles-arrow-519"
                                    />
                                  </React.Fragment>
                                }
                              >
                                <div
                                  aria-describedby={null}
                                  className=""
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchStart={[Function]}
                                  title={null}
                                >
                                  <WithStyles(ForwardRef(Link))
                                    aria-label="Breadcrumb-base"
                                    className="content"
                                    component={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "displayName": "Link",
                                        "propTypes": Object {
                                          "innerRef": [Function],
                                          "onClick": [Function],
                                          "replace": [Function],
                                          "target": [Function],
                                          "to": [Function],
                                        },
                                        "render": [Function],
                                      }
                                    }
                                    to="/browse/instrument"
                                  >
                                    <ForwardRef(Link)
                                      aria-label="Breadcrumb-base"
                                      className="content"
                                      classes={
                                        Object {
                                          "button": "MuiLink-button",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiLink-root",
                                          "underlineAlways": "MuiLink-underlineAlways",
                                          "underlineHover": "MuiLink-underlineHover",
                                          "underlineNone": "MuiLink-underlineNone",
                                        }
                                      }
                                      component={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "displayName": "Link",
                                          "propTypes": Object {
                                            "innerRef": [Function],
                                            "onClick": [Function],
                                            "replace": [Function],
                                            "target": [Function],
                                            "to": [Function],
                                          },
                                          "render": [Function],
                                        }
                                      }
                                      to="/browse/instrument"
                                    >
                                      <WithStyles(ForwardRef(Typography))
                                        aria-label="Breadcrumb-base"
                                        className="MuiLink-root MuiLink-underlineHover content"
                                        color="primary"
                                        component={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "displayName": "Link",
                                            "propTypes": Object {
                                              "innerRef": [Function],
                                              "onClick": [Function],
                                              "replace": [Function],
                                              "target": [Function],
                                              "to": [Function],
                                            },
                                            "render": [Function],
                                          }
                                        }
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        to="/browse/instrument"
                                        variant="inherit"
                                      >
                                        <ForwardRef(Typography)
                                          aria-label="Breadcrumb-base"
                                          className="MuiLink-root MuiLink-underlineHover content"
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter",
                                              "alignJustify": "MuiTypography-alignJustify",
                                              "alignLeft": "MuiTypography-alignLeft",
                                              "alignRight": "MuiTypography-alignRight",
                                              "body1": "MuiTypography-body1",
                                              "body2": "MuiTypography-body2",
                                              "button": "MuiTypography-button",
                                              "caption": "MuiTypography-caption",
                                              "colorError": "MuiTypography-colorError",
                                              "colorInherit": "MuiTypography-colorInherit",
                                              "colorPrimary": "MuiTypography-colorPrimary",
                                              "colorSecondary": "MuiTypography-colorSecondary",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                              "displayBlock": "MuiTypography-displayBlock",
                                              "displayInline": "MuiTypography-displayInline",
                                              "gutterBottom": "MuiTypography-gutterBottom",
                                              "h1": "MuiTypography-h1",
                                              "h2": "MuiTypography-h2",
                                              "h3": "MuiTypography-h3",
                                              "h4": "MuiTypography-h4",
                                              "h5": "MuiTypography-h5",
                                              "h6": "MuiTypography-h6",
                                              "noWrap": "MuiTypography-noWrap",
                                              "overline": "MuiTypography-overline",
                                              "paragraph": "MuiTypography-paragraph",
                                              "root": "MuiTypography-root",
                                              "srOnly": "MuiTypography-srOnly",
                                              "subtitle1": "MuiTypography-subtitle1",
                                              "subtitle2": "MuiTypography-subtitle2",
                                            }
                                          }
                                          color="primary"
                                          component={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "displayName": "Link",
                                              "propTypes": Object {
                                                "innerRef": [Function],
                                                "onClick": [Function],
                                                "replace": [Function],
                                                "target": [Function],
                                                "to": [Function],
                                              },
                                              "render": [Function],
                                            }
                                          }
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          to="/browse/instrument"
                                          variant="inherit"
                                        >
                                          <Link
                                            aria-label="Breadcrumb-base"
                                            className="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            to="/browse/instrument"
                                          >
                                            <LinkAnchor
                                              aria-label="Breadcrumb-base"
                                              className="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                              href="/browse/instrument"
                                              navigate={[Function]}
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                            >
                                              <a
                                                aria-label="Breadcrumb-base"
                                                className="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                                href="/browse/instrument"
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                              >
                                                <span
                                                  className="displayContent"
                                                >
                                                  Instruments
                                                </span>
                                              </a>
                                            </LinkAnchor>
                                          </Link>
                                        </ForwardRef(Typography)>
                                      </WithStyles(ForwardRef(Typography))>
                                    </ForwardRef(Link)>
                                  </WithStyles(ForwardRef(Link))>
                                </div>
                                <ForwardRef(Popper)
                                  anchorEl={
                                    <div
                                      class=""
                                    >
                                      <a
                                        aria-label="Breadcrumb-base"
                                        class="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                        href="/browse/instrument"
                                      >
                                        <span
                                          class="displayContent"
                                        >
                                          Instruments
                                        </span>
                                      </a>
                                    </div>
                                  }
                                  className="MuiTooltip-popper makeStyles-popper-518"
                                  id={null}
                                  open={false}
                                  placement="bottom"
                                  popperOptions={
                                    Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    }
                                  }
                                  transition={true}
                                />
                              </ForwardRef(Tooltip)>
                            </WithStyles(ForwardRef(Tooltip))>
                          </ArrowTooltip>
                        </li>
                      </StyledBreadcrumb>
                      <StyledBreadcrumb
                        ariaLabel="Breadcrumb-hierarchy-1"
                        displayName="INVESTIGATION 1"
                        key="breadcrumb-1"
                        url="/browse/instrument/1/facilityCycle"
                      >
                        <li>
                          <ArrowTooltip
                            title="INVESTIGATION 1"
                          >
                            <WithStyles(ForwardRef(Tooltip))
                              PopperProps={
                                Object {
                                  "popperOptions": Object {
                                    "modifiers": Object {
                                      "arrow": Object {
                                        "element": null,
                                        "enabled": false,
                                      },
                                    },
                                  },
                                }
                              }
                              classes={
                                Object {
                                  "popper": "makeStyles-popper-518",
                                  "tooltip": "makeStyles-tooltip-517",
                                }
                              }
                              disableHoverListener={true}
                              title={
                                <React.Fragment>
                                  INVESTIGATION 1
                                  <span
                                    className="makeStyles-arrow-519"
                                  />
                                </React.Fragment>
                              }
                            >
                              <ForwardRef(Tooltip)
                                PopperProps={
                                  Object {
                                    "popperOptions": Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    },
                                  }
                                }
                                classes={
                                  Object {
                                    "popper": "MuiTooltip-popper makeStyles-popper-518",
                                    "popperInteractive": "MuiTooltip-popperInteractive",
                                    "tooltip": "MuiTooltip-tooltip makeStyles-tooltip-517",
                                    "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                    "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                    "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                    "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                    "touch": "MuiTooltip-touch",
                                  }
                                }
                                disableHoverListener={true}
                                title={
                                  <React.Fragment>
                                    INVESTIGATION 1
                                    <span
                                      className="makeStyles-arrow-519"
                                    />
                                  </React.Fragment>
                                }
                              >
                                <div
                                  aria-describedby={null}
                                  className=""
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchStart={[Function]}
                                  title={null}
                                >
                                  <WithStyles(ForwardRef(Link))
                                    aria-label="Breadcrumb-hierarchy-1"
                                    className="content"
                                    component={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "displayName": "Link",
                                        "propTypes": Object {
                                          "innerRef": [Function],
                                          "onClick": [Function],
                                          "replace": [Function],
                                          "target": [Function],
                                          "to": [Function],
                                        },
                                        "render": [Function],
                                      }
                                    }
                                    to="/browse/instrument/1/facilityCycle"
                                  >
                                    <ForwardRef(Link)
                                      aria-label="Breadcrumb-hierarchy-1"
                                      className="content"
                                      classes={
                                        Object {
                                          "button": "MuiLink-button",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiLink-root",
                                          "underlineAlways": "MuiLink-underlineAlways",
                                          "underlineHover": "MuiLink-underlineHover",
                                          "underlineNone": "MuiLink-underlineNone",
                                        }
                                      }
                                      component={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "displayName": "Link",
                                          "propTypes": Object {
                                            "innerRef": [Function],
                                            "onClick": [Function],
                                            "replace": [Function],
                                            "target": [Function],
                                            "to": [Function],
                                          },
                                          "render": [Function],
                                        }
                                      }
                                      to="/browse/instrument/1/facilityCycle"
                                    >
                                      <WithStyles(ForwardRef(Typography))
                                        aria-label="Breadcrumb-hierarchy-1"
                                        className="MuiLink-root MuiLink-underlineHover content"
                                        color="primary"
                                        component={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "displayName": "Link",
                                            "propTypes": Object {
                                              "innerRef": [Function],
                                              "onClick": [Function],
                                              "replace": [Function],
                                              "target": [Function],
                                              "to": [Function],
                                            },
                                            "render": [Function],
                                          }
                                        }
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        to="/browse/instrument/1/facilityCycle"
                                        variant="inherit"
                                      >
                                        <ForwardRef(Typography)
                                          aria-label="Breadcrumb-hierarchy-1"
                                          className="MuiLink-root MuiLink-underlineHover content"
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter",
                                              "alignJustify": "MuiTypography-alignJustify",
                                              "alignLeft": "MuiTypography-alignLeft",
                                              "alignRight": "MuiTypography-alignRight",
                                              "body1": "MuiTypography-body1",
                                              "body2": "MuiTypography-body2",
                                              "button": "MuiTypography-button",
                                              "caption": "MuiTypography-caption",
                                              "colorError": "MuiTypography-colorError",
                                              "colorInherit": "MuiTypography-colorInherit",
                                              "colorPrimary": "MuiTypography-colorPrimary",
                                              "colorSecondary": "MuiTypography-colorSecondary",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                              "displayBlock": "MuiTypography-displayBlock",
                                              "displayInline": "MuiTypography-displayInline",
                                              "gutterBottom": "MuiTypography-gutterBottom",
                                              "h1": "MuiTypography-h1",
                                              "h2": "MuiTypography-h2",
                                              "h3": "MuiTypography-h3",
                                              "h4": "MuiTypography-h4",
                                              "h5": "MuiTypography-h5",
                                              "h6": "MuiTypography-h6",
                                              "noWrap": "MuiTypography-noWrap",
                                              "overline": "MuiTypography-overline",
                                              "paragraph": "MuiTypography-paragraph",
                                              "root": "MuiTypography-root",
                                              "srOnly": "MuiTypography-srOnly",
                                              "subtitle1": "MuiTypography-subtitle1",
                                              "subtitle2": "MuiTypography-subtitle2",
                                            }
                                          }
                                          color="primary"
                                          component={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "displayName": "Link",
                                              "propTypes": Object {
                                                "innerRef": [Function],
                                                "onClick": [Function],
                                                "replace": [Function],
                                                "target": [Function],
                                                "to": [Function],
                                              },
                                              "render": [Function],
                                            }
                                          }
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          to="/browse/instrument/1/facilityCycle"
                                          variant="inherit"
                                        >
                                          <Link
                                            aria-label="Breadcrumb-hierarchy-1"
                                            className="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            to="/browse/instrument/1/facilityCycle"
                                          >
                                            <LinkAnchor
                                              aria-label="Breadcrumb-hierarchy-1"
                                              className="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                              href="/browse/instrument/1/facilityCycle"
                                              navigate={[Function]}
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                            >
                                              <a
                                                aria-label="Breadcrumb-hierarchy-1"
                                                className="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                                href="/browse/instrument/1/facilityCycle"
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                              >
                                                <span
                                                  className="displayContent"
                                                >
                                                  INVESTIGATION 1
                                                </span>
                                              </a>
                                            </LinkAnchor>
                                          </Link>
                                        </ForwardRef(Typography)>
                                      </WithStyles(ForwardRef(Typography))>
                                    </ForwardRef(Link)>
                                  </WithStyles(ForwardRef(Link))>
                                </div>
                                <ForwardRef(Popper)
                                  anchorEl={
                                    <div
                                      class=""
                                    >
                                      <a
                                        aria-label="Breadcrumb-hierarchy-1"
                                        class="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                        href="/browse/instrument/1/facilityCycle"
                                      >
                                        <span
                                          class="displayContent"
                                        >
                                          INVESTIGATION 1
                                        </span>
                                      </a>
                                    </div>
                                  }
                                  className="MuiTooltip-popper makeStyles-popper-518"
                                  id={null}
                                  open={false}
                                  placement="bottom"
                                  popperOptions={
                                    Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    }
                                  }
                                  transition={true}
                                />
                              </ForwardRef(Tooltip)>
                            </WithStyles(ForwardRef(Tooltip))>
                          </ArrowTooltip>
                        </li>
                      </StyledBreadcrumb>
                      <StyledBreadcrumb
                        ariaLabel="Breadcrumb-hierarchy-2"
                        displayName="INVESTIGATION 1"
                        key="breadcrumb-2"
                        url="/browse/instrument/1/facilityCycle/1/investigation"
                      >
                        <li>
                          <ArrowTooltip
                            title="INVESTIGATION 1"
                          >
                            <WithStyles(ForwardRef(Tooltip))
                              PopperProps={
                                Object {
                                  "popperOptions": Object {
                                    "modifiers": Object {
                                      "arrow": Object {
                                        "element": null,
                                        "enabled": false,
                                      },
                                    },
                                  },
                                }
                              }
                              classes={
                                Object {
                                  "popper": "makeStyles-popper-518",
                                  "tooltip": "makeStyles-tooltip-517",
                                }
                              }
                              disableHoverListener={true}
                              title={
                                <React.Fragment>
                                  INVESTIGATION 1
                                  <span
                                    className="makeStyles-arrow-519"
                                  />
                                </React.Fragment>
                              }
                            >
                              <ForwardRef(Tooltip)
                                PopperProps={
                                  Object {
                                    "popperOptions": Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    },
                                  }
                                }
                                classes={
                                  Object {
                                    "popper": "MuiTooltip-popper makeStyles-popper-518",
                                    "popperInteractive": "MuiTooltip-popperInteractive",
                                    "tooltip": "MuiTooltip-tooltip makeStyles-tooltip-517",
                                    "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                    "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                    "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                    "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                    "touch": "MuiTooltip-touch",
                                  }
                                }
                                disableHoverListener={true}
                                title={
                                  <React.Fragment>
                                    INVESTIGATION 1
                                    <span
                                      className="makeStyles-arrow-519"
                                    />
                                  </React.Fragment>
                                }
                              >
                                <div
                                  aria-describedby={null}
                                  className=""
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchStart={[Function]}
                                  title={null}
                                >
                                  <WithStyles(ForwardRef(Link))
                                    aria-label="Breadcrumb-hierarchy-2"
                                    className="content"
                                    component={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "displayName": "Link",
                                        "propTypes": Object {
                                          "innerRef": [Function],
                                          "onClick": [Function],
                                          "replace": [Function],
                                          "target": [Function],
                                          "to": [Function],
                                        },
                                        "render": [Function],
                                      }
                                    }
                                    to="/browse/instrument/1/facilityCycle/1/investigation"
                                  >
                                    <ForwardRef(Link)
                                      aria-label="Breadcrumb-hierarchy-2"
                                      className="content"
                                      classes={
                                        Object {
                                          "button": "MuiLink-button",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiLink-root",
                                          "underlineAlways": "MuiLink-underlineAlways",
                                          "underlineHover": "MuiLink-underlineHover",
                                          "underlineNone": "MuiLink-underlineNone",
                                        }
                                      }
                                      component={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "displayName": "Link",
                                          "propTypes": Object {
                                            "innerRef": [Function],
                                            "onClick": [Function],
                                            "replace": [Function],
                                            "target": [Function],
                                            "to": [Function],
                                          },
                                          "render": [Function],
                                        }
                                      }
                                      to="/browse/instrument/1/facilityCycle/1/investigation"
                                    >
                                      <WithStyles(ForwardRef(Typography))
                                        aria-label="Breadcrumb-hierarchy-2"
                                        className="MuiLink-root MuiLink-underlineHover content"
                                        color="primary"
                                        component={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "displayName": "Link",
                                            "propTypes": Object {
                                              "innerRef": [Function],
                                              "onClick": [Function],
                                              "replace": [Function],
                                              "target": [Function],
                                              "to": [Function],
                                            },
                                            "render": [Function],
                                          }
                                        }
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        to="/browse/instrument/1/facilityCycle/1/investigation"
                                        variant="inherit"
                                      >
                                        <ForwardRef(Typography)
                                          aria-label="Breadcrumb-hierarchy-2"
                                          className="MuiLink-root MuiLink-underlineHover content"
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter",
                                              "alignJustify": "MuiTypography-alignJustify",
                                              "alignLeft": "MuiTypography-alignLeft",
                                              "alignRight": "MuiTypography-alignRight",
                                              "body1": "MuiTypography-body1",
                                              "body2": "MuiTypography-body2",
                                              "button": "MuiTypography-button",
                                              "caption": "MuiTypography-caption",
                                              "colorError": "MuiTypography-colorError",
                                              "colorInherit": "MuiTypography-colorInherit",
                                              "colorPrimary": "MuiTypography-colorPrimary",
                                              "colorSecondary": "MuiTypography-colorSecondary",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                              "displayBlock": "MuiTypography-displayBlock",
                                              "displayInline": "MuiTypography-displayInline",
                                              "gutterBottom": "MuiTypography-gutterBottom",
                                              "h1": "MuiTypography-h1",
                                              "h2": "MuiTypography-h2",
                                              "h3": "MuiTypography-h3",
                                              "h4": "MuiTypography-h4",
                                              "h5": "MuiTypography-h5",
                                              "h6": "MuiTypography-h6",
                                              "noWrap": "MuiTypography-noWrap",
                                              "overline": "MuiTypography-overline",
                                              "paragraph": "MuiTypography-paragraph",
                                              "root": "MuiTypography-root",
                                              "srOnly": "MuiTypography-srOnly",
                                              "subtitle1": "MuiTypography-subtitle1",
                                              "subtitle2": "MuiTypography-subtitle2",
                                            }
                                          }
                                          color="primary"
                                          component={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "displayName": "Link",
                                              "propTypes": Object {
                                                "innerRef": [Function],
                                                "onClick": [Function],
                                                "replace": [Function],
                                                "target": [Function],
                                                "to": [Function],
                                              },
                                              "render": [Function],
                                            }
                                          }
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          to="/browse/instrument/1/facilityCycle/1/investigation"
                                          variant="inherit"
                                        >
                                          <Link
                                            aria-label="Breadcrumb-hierarchy-2"
                                            className="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            to="/browse/instrument/1/facilityCycle/1/investigation"
                                          >
                                            <LinkAnchor
                                              aria-label="Breadcrumb-hierarchy-2"
                                              className="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                              href="/browse/instrument/1/facilityCycle/1/investigation"
                                              navigate={[Function]}
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                            >
                                              <a
                                                aria-label="Breadcrumb-hierarchy-2"
                                                className="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                                href="/browse/instrument/1/facilityCycle/1/investigation"
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                              >
                                                <span
                                                  className="displayContent"
                                                >
                                                  INVESTIGATION 1
                                                </span>
                                              </a>
                                            </LinkAnchor>
                                          </Link>
                                        </ForwardRef(Typography)>
                                      </WithStyles(ForwardRef(Typography))>
                                    </ForwardRef(Link)>
                                  </WithStyles(ForwardRef(Link))>
                                </div>
                                <ForwardRef(Popper)
                                  anchorEl={
                                    <div
                                      class=""
                                    >
                                      <a
                                        aria-label="Breadcrumb-hierarchy-2"
                                        class="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                        href="/browse/instrument/1/facilityCycle/1/investigation"
                                      >
                                        <span
                                          class="displayContent"
                                        >
                                          INVESTIGATION 1
                                        </span>
                                      </a>
                                    </div>
                                  }
                                  className="MuiTooltip-popper makeStyles-popper-518"
                                  id={null}
                                  open={false}
                                  placement="bottom"
                                  popperOptions={
                                    Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    }
                                  }
                                  transition={true}
                                />
                              </ForwardRef(Tooltip)>
                            </WithStyles(ForwardRef(Tooltip))>
                          </ArrowTooltip>
                        </li>
                      </StyledBreadcrumb>
                      <StyledBreadcrumb
                        ariaLabel="Breadcrumb-hierarchy-3"
                        displayName="Test 1"
                        key="breadcrumb-3"
                      >
                        <li>
                          <ArrowTooltip
                            title="Test 1"
                          >
                            <WithStyles(ForwardRef(Tooltip))
                              PopperProps={
                                Object {
                                  "popperOptions": Object {
                                    "modifiers": Object {
                                      "arrow": Object {
                                        "element": null,
                                        "enabled": false,
                                      },
                                    },
                                  },
                                }
                              }
                              classes={
                                Object {
                                  "popper": "makeStyles-popper-518",
                                  "tooltip": "makeStyles-tooltip-517",
                                }
                              }
                              disableHoverListener={true}
                              title={
                                <React.Fragment>
                                  Test 1
                                  <span
                                    className="makeStyles-arrow-519"
                                  />
                                </React.Fragment>
                              }
                            >
                              <ForwardRef(Tooltip)
                                PopperProps={
                                  Object {
                                    "popperOptions": Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    },
                                  }
                                }
                                classes={
                                  Object {
                                    "popper": "MuiTooltip-popper makeStyles-popper-518",
                                    "popperInteractive": "MuiTooltip-popperInteractive",
                                    "tooltip": "MuiTooltip-tooltip makeStyles-tooltip-517",
                                    "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                    "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                    "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                    "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                    "touch": "MuiTooltip-touch",
                                  }
                                }
                                disableHoverListener={true}
                                title={
                                  <React.Fragment>
                                    Test 1
                                    <span
                                      className="makeStyles-arrow-519"
                                    />
                                  </React.Fragment>
                                }
                              >
                                <div
                                  aria-describedby={null}
                                  className=""
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchStart={[Function]}
                                  title={null}
                                >
                                  <WithStyles(ForwardRef(Typography))
                                    aria-label="Breadcrumb-hierarchy-3"
                                    className="content"
                                    color="textPrimary"
                                  >
                                    <ForwardRef(Typography)
                                      aria-label="Breadcrumb-hierarchy-3"
                                      className="content"
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textPrimary"
                                    >
                                      <p
                                        aria-label="Breadcrumb-hierarchy-3"
                                        className="MuiTypography-root content MuiTypography-body1 MuiTypography-colorTextPrimary"
                                      >
                                        <span
                                          className="displayContent"
                                        >
                                          Test 1
                                        </span>
                                      </p>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                </div>
                                <ForwardRef(Popper)
                                  anchorEl={
                                    <div
                                      class=""
                                    >
                                      <p
                                        aria-label="Breadcrumb-hierarchy-3"
                                        class="MuiTypography-root content MuiTypography-body1 MuiTypography-colorTextPrimary"
                                      >
                                        <span
                                          class="displayContent"
                                        >
                                          Test 1
                                        </span>
                                      </p>
                                    </div>
                                  }
                                  className="MuiTooltip-popper makeStyles-popper-518"
                                  id={null}
                                  open={false}
                                  placement="bottom"
                                  popperOptions={
                                    Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    }
                                  }
                                  transition={true}
                                />
                              </ForwardRef(Tooltip)>
                            </WithStyles(ForwardRef(Tooltip))>
                          </ArrowTooltip>
                        </li>
                      </StyledBreadcrumb>
                      <StyledBreadcrumb
                        ariaLabel="Breadcrumb-last"
                        displayName="Datasets"
                        isLast={true}
                      >
                        <li>
                          <ArrowTooltip
                            title="Datasets"
                          >
                            <WithStyles(ForwardRef(Tooltip))
                              PopperProps={
                                Object {
                                  "popperOptions": Object {
                                    "modifiers": Object {
                                      "arrow": Object {
                                        "element": null,
                                        "enabled": false,
                                      },
                                    },
                                  },
                                }
                              }
                              classes={
                                Object {
                                  "popper": "makeStyles-popper-518",
                                  "tooltip": "makeStyles-tooltip-517",
                                }
                              }
                              disableHoverListener={true}
                              title={
                                <React.Fragment>
                                  Datasets
                                  <span
                                    className="makeStyles-arrow-519"
                                  />
                                </React.Fragment>
                              }
                            >
                              <ForwardRef(Tooltip)
                                PopperProps={
                                  Object {
                                    "popperOptions": Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    },
                                  }
                                }
                                classes={
                                  Object {
                                    "popper": "MuiTooltip-popper makeStyles-popper-518",
                                    "popperInteractive": "MuiTooltip-popperInteractive",
                                    "tooltip": "MuiTooltip-tooltip makeStyles-tooltip-517",
                                    "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                    "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                    "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                    "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                    "touch": "MuiTooltip-touch",
                                  }
                                }
                                disableHoverListener={true}
                                title={
                                  <React.Fragment>
                                    Datasets
                                    <span
                                      className="makeStyles-arrow-519"
                                    />
                                  </React.Fragment>
                                }
                              >
                                <div
                                  aria-describedby={null}
                                  className=""
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchStart={[Function]}
                                  title={null}
                                >
                                  <WithStyles(ForwardRef(Typography))
                                    aria-label="Breadcrumb-last"
                                    className="content"
                                    color="textPrimary"
                                  >
                                    <ForwardRef(Typography)
                                      aria-label="Breadcrumb-last"
                                      className="content"
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textPrimary"
                                    >
                                      <p
                                        aria-label="Breadcrumb-last"
                                        className="MuiTypography-root content MuiTypography-body1 MuiTypography-colorTextPrimary"
                                      >
                                        <span
                                          className="displayContent"
                                        >
                                          <i>
                                            Datasets
                                          </i>
                                        </span>
                                      </p>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                </div>
                                <ForwardRef(Popper)
                                  anchorEl={
                                    <div
                                      class=""
                                    >
                                      <p
                                        aria-label="Breadcrumb-last"
                                        class="MuiTypography-root content MuiTypography-body1 MuiTypography-colorTextPrimary"
                                      >
                                        <span
                                          class="displayContent"
                                        >
                                          <i>
                                            Datasets
                                          </i>
                                        </span>
                                      </p>
                                    </div>
                                  }
                                  className="MuiTooltip-popper makeStyles-popper-518"
                                  id={null}
                                  open={false}
                                  placement="bottom"
                                  popperOptions={
                                    Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    }
                                  }
                                  transition={true}
                                />
                              </ForwardRef(Tooltip)>
                            </WithStyles(ForwardRef(Tooltip))>
                          </ArrowTooltip>
                        </li>
                      </StyledBreadcrumb>
                    </div>
                  </Route>
                </div>
              </ForwardRef(Paper)>
            </WithStyles(ForwardRef(Paper))>
          </div>
        </PageBreadcrumbs>
      </Connect(PageBreadcrumbs)>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`PageBreadcrumbs - Snapshot Tests (Generic, DLS, ISIS) renders correctly for ISIS facilityCycles route 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Connect(PageBreadcrumbs)>
        <PageBreadcrumbs
          apiUrl=""
          breadcrumbSettings={Object {}}
          dispatch={[Function]}
          location="/browse/instrument/1/facilityCycle"
        >
          <div>
            <WithStyles(ForwardRef(Paper))
              elevation={0}
            >
              <ForwardRef(Paper)
                classes={
                  Object {
                    "elevation0": "MuiPaper-elevation0",
                    "elevation1": "MuiPaper-elevation1",
                    "elevation10": "MuiPaper-elevation10",
                    "elevation11": "MuiPaper-elevation11",
                    "elevation12": "MuiPaper-elevation12",
                    "elevation13": "MuiPaper-elevation13",
                    "elevation14": "MuiPaper-elevation14",
                    "elevation15": "MuiPaper-elevation15",
                    "elevation16": "MuiPaper-elevation16",
                    "elevation17": "MuiPaper-elevation17",
                    "elevation18": "MuiPaper-elevation18",
                    "elevation19": "MuiPaper-elevation19",
                    "elevation2": "MuiPaper-elevation2",
                    "elevation20": "MuiPaper-elevation20",
                    "elevation21": "MuiPaper-elevation21",
                    "elevation22": "MuiPaper-elevation22",
                    "elevation23": "MuiPaper-elevation23",
                    "elevation24": "MuiPaper-elevation24",
                    "elevation3": "MuiPaper-elevation3",
                    "elevation4": "MuiPaper-elevation4",
                    "elevation5": "MuiPaper-elevation5",
                    "elevation6": "MuiPaper-elevation6",
                    "elevation7": "MuiPaper-elevation7",
                    "elevation8": "MuiPaper-elevation8",
                    "elevation9": "MuiPaper-elevation9",
                    "root": "MuiPaper-root",
                    "rounded": "MuiPaper-rounded",
                  }
                }
                elevation={0}
              >
                <div
                  className="MuiPaper-root MuiPaper-elevation0 MuiPaper-rounded"
                >
                  <Route>
                    <div
                      className="breadcrumb"
                    >
                      <li>
                        <span
                          className="content"
                        >
                          <span
                            className="icon"
                          >
                            <ForwardRef>
                              <WithStyles(ForwardRef(SvgIcon))>
                                <ForwardRef(SvgIcon)
                                  classes={
                                    Object {
                                      "colorAction": "MuiSvgIcon-colorAction",
                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                      "colorError": "MuiSvgIcon-colorError",
                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                      "root": "MuiSvgIcon-root",
                                    }
                                  }
                                >
                                  <svg
                                    aria-hidden="true"
                                    className="MuiSvgIcon-root"
                                    focusable="false"
                                    role="presentation"
                                    viewBox="0 0 24 24"
                                  >
                                    <path
                                      d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"
                                    />
                                  </svg>
                                </ForwardRef(SvgIcon)>
                              </WithStyles(ForwardRef(SvgIcon))>
                            </ForwardRef>
                          </span>
                        </span>
                      </li>
                      <StyledBreadcrumb
                        ariaLabel="Breadcrumb-base"
                        displayName="Instruments"
                        url="/browse/instrument"
                      >
                        <li>
                          <ArrowTooltip
                            title="Instruments"
                          >
                            <WithStyles(ForwardRef(Tooltip))
                              PopperProps={
                                Object {
                                  "popperOptions": Object {
                                    "modifiers": Object {
                                      "arrow": Object {
                                        "element": null,
                                        "enabled": false,
                                      },
                                    },
                                  },
                                }
                              }
                              classes={
                                Object {
                                  "popper": "makeStyles-popper-269",
                                  "tooltip": "makeStyles-tooltip-268",
                                }
                              }
                              disableHoverListener={true}
                              title={
                                <React.Fragment>
                                  Instruments
                                  <span
                                    className="makeStyles-arrow-270"
                                  />
                                </React.Fragment>
                              }
                            >
                              <ForwardRef(Tooltip)
                                PopperProps={
                                  Object {
                                    "popperOptions": Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    },
                                  }
                                }
                                classes={
                                  Object {
                                    "popper": "MuiTooltip-popper makeStyles-popper-269",
                                    "popperInteractive": "MuiTooltip-popperInteractive",
                                    "tooltip": "MuiTooltip-tooltip makeStyles-tooltip-268",
                                    "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                    "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                    "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                    "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                    "touch": "MuiTooltip-touch",
                                  }
                                }
                                disableHoverListener={true}
                                title={
                                  <React.Fragment>
                                    Instruments
                                    <span
                                      className="makeStyles-arrow-270"
                                    />
                                  </React.Fragment>
                                }
                              >
                                <div
                                  aria-describedby={null}
                                  className=""
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchStart={[Function]}
                                  title={null}
                                >
                                  <WithStyles(ForwardRef(Link))
                                    aria-label="Breadcrumb-base"
                                    className="content"
                                    component={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "displayName": "Link",
                                        "propTypes": Object {
                                          "innerRef": [Function],
                                          "onClick": [Function],
                                          "replace": [Function],
                                          "target": [Function],
                                          "to": [Function],
                                        },
                                        "render": [Function],
                                      }
                                    }
                                    to="/browse/instrument"
                                  >
                                    <ForwardRef(Link)
                                      aria-label="Breadcrumb-base"
                                      className="content"
                                      classes={
                                        Object {
                                          "button": "MuiLink-button",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiLink-root",
                                          "underlineAlways": "MuiLink-underlineAlways",
                                          "underlineHover": "MuiLink-underlineHover",
                                          "underlineNone": "MuiLink-underlineNone",
                                        }
                                      }
                                      component={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "displayName": "Link",
                                          "propTypes": Object {
                                            "innerRef": [Function],
                                            "onClick": [Function],
                                            "replace": [Function],
                                            "target": [Function],
                                            "to": [Function],
                                          },
                                          "render": [Function],
                                        }
                                      }
                                      to="/browse/instrument"
                                    >
                                      <WithStyles(ForwardRef(Typography))
                                        aria-label="Breadcrumb-base"
                                        className="MuiLink-root MuiLink-underlineHover content"
                                        color="primary"
                                        component={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "displayName": "Link",
                                            "propTypes": Object {
                                              "innerRef": [Function],
                                              "onClick": [Function],
                                              "replace": [Function],
                                              "target": [Function],
                                              "to": [Function],
                                            },
                                            "render": [Function],
                                          }
                                        }
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        to="/browse/instrument"
                                        variant="inherit"
                                      >
                                        <ForwardRef(Typography)
                                          aria-label="Breadcrumb-base"
                                          className="MuiLink-root MuiLink-underlineHover content"
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter",
                                              "alignJustify": "MuiTypography-alignJustify",
                                              "alignLeft": "MuiTypography-alignLeft",
                                              "alignRight": "MuiTypography-alignRight",
                                              "body1": "MuiTypography-body1",
                                              "body2": "MuiTypography-body2",
                                              "button": "MuiTypography-button",
                                              "caption": "MuiTypography-caption",
                                              "colorError": "MuiTypography-colorError",
                                              "colorInherit": "MuiTypography-colorInherit",
                                              "colorPrimary": "MuiTypography-colorPrimary",
                                              "colorSecondary": "MuiTypography-colorSecondary",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                              "displayBlock": "MuiTypography-displayBlock",
                                              "displayInline": "MuiTypography-displayInline",
                                              "gutterBottom": "MuiTypography-gutterBottom",
                                              "h1": "MuiTypography-h1",
                                              "h2": "MuiTypography-h2",
                                              "h3": "MuiTypography-h3",
                                              "h4": "MuiTypography-h4",
                                              "h5": "MuiTypography-h5",
                                              "h6": "MuiTypography-h6",
                                              "noWrap": "MuiTypography-noWrap",
                                              "overline": "MuiTypography-overline",
                                              "paragraph": "MuiTypography-paragraph",
                                              "root": "MuiTypography-root",
                                              "srOnly": "MuiTypography-srOnly",
                                              "subtitle1": "MuiTypography-subtitle1",
                                              "subtitle2": "MuiTypography-subtitle2",
                                            }
                                          }
                                          color="primary"
                                          component={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "displayName": "Link",
                                              "propTypes": Object {
                                                "innerRef": [Function],
                                                "onClick": [Function],
                                                "replace": [Function],
                                                "target": [Function],
                                                "to": [Function],
                                              },
                                              "render": [Function],
                                            }
                                          }
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          to="/browse/instrument"
                                          variant="inherit"
                                        >
                                          <Link
                                            aria-label="Breadcrumb-base"
                                            className="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            to="/browse/instrument"
                                          >
                                            <LinkAnchor
                                              aria-label="Breadcrumb-base"
                                              className="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                              href="/browse/instrument"
                                              navigate={[Function]}
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                            >
                                              <a
                                                aria-label="Breadcrumb-base"
                                                className="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                                href="/browse/instrument"
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                              >
                                                <span
                                                  className="displayContent"
                                                >
                                                  Instruments
                                                </span>
                                              </a>
                                            </LinkAnchor>
                                          </Link>
                                        </ForwardRef(Typography)>
                                      </WithStyles(ForwardRef(Typography))>
                                    </ForwardRef(Link)>
                                  </WithStyles(ForwardRef(Link))>
                                </div>
                                <ForwardRef(Popper)
                                  anchorEl={
                                    <div
                                      class=""
                                    >
                                      <a
                                        aria-label="Breadcrumb-base"
                                        class="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                        href="/browse/instrument"
                                      >
                                        <span
                                          class="displayContent"
                                        >
                                          Instruments
                                        </span>
                                      </a>
                                    </div>
                                  }
                                  className="MuiTooltip-popper makeStyles-popper-269"
                                  id={null}
                                  open={false}
                                  placement="bottom"
                                  popperOptions={
                                    Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    }
                                  }
                                  transition={true}
                                />
                              </ForwardRef(Tooltip)>
                            </WithStyles(ForwardRef(Tooltip))>
                          </ArrowTooltip>
                        </li>
                      </StyledBreadcrumb>
                      <StyledBreadcrumb
                        ariaLabel="Breadcrumb-hierarchy-1"
                        displayName="INVESTIGATION 1"
                        key="breadcrumb-1"
                      >
                        <li>
                          <ArrowTooltip
                            title="INVESTIGATION 1"
                          >
                            <WithStyles(ForwardRef(Tooltip))
                              PopperProps={
                                Object {
                                  "popperOptions": Object {
                                    "modifiers": Object {
                                      "arrow": Object {
                                        "element": null,
                                        "enabled": false,
                                      },
                                    },
                                  },
                                }
                              }
                              classes={
                                Object {
                                  "popper": "makeStyles-popper-269",
                                  "tooltip": "makeStyles-tooltip-268",
                                }
                              }
                              disableHoverListener={true}
                              title={
                                <React.Fragment>
                                  INVESTIGATION 1
                                  <span
                                    className="makeStyles-arrow-270"
                                  />
                                </React.Fragment>
                              }
                            >
                              <ForwardRef(Tooltip)
                                PopperProps={
                                  Object {
                                    "popperOptions": Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    },
                                  }
                                }
                                classes={
                                  Object {
                                    "popper": "MuiTooltip-popper makeStyles-popper-269",
                                    "popperInteractive": "MuiTooltip-popperInteractive",
                                    "tooltip": "MuiTooltip-tooltip makeStyles-tooltip-268",
                                    "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                    "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                    "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                    "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                    "touch": "MuiTooltip-touch",
                                  }
                                }
                                disableHoverListener={true}
                                title={
                                  <React.Fragment>
                                    INVESTIGATION 1
                                    <span
                                      className="makeStyles-arrow-270"
                                    />
                                  </React.Fragment>
                                }
                              >
                                <div
                                  aria-describedby={null}
                                  className=""
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchStart={[Function]}
                                  title={null}
                                >
                                  <WithStyles(ForwardRef(Typography))
                                    aria-label="Breadcrumb-hierarchy-1"
                                    className="content"
                                    color="textPrimary"
                                  >
                                    <ForwardRef(Typography)
                                      aria-label="Breadcrumb-hierarchy-1"
                                      className="content"
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textPrimary"
                                    >
                                      <p
                                        aria-label="Breadcrumb-hierarchy-1"
                                        className="MuiTypography-root content MuiTypography-body1 MuiTypography-colorTextPrimary"
                                      >
                                        <span
                                          className="displayContent"
                                        >
                                          INVESTIGATION 1
                                        </span>
                                      </p>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                </div>
                                <ForwardRef(Popper)
                                  anchorEl={
                                    <div
                                      class=""
                                    >
                                      <p
                                        aria-label="Breadcrumb-hierarchy-1"
                                        class="MuiTypography-root content MuiTypography-body1 MuiTypography-colorTextPrimary"
                                      >
                                        <span
                                          class="displayContent"
                                        >
                                          INVESTIGATION 1
                                        </span>
                                      </p>
                                    </div>
                                  }
                                  className="MuiTooltip-popper makeStyles-popper-269"
                                  id={null}
                                  open={false}
                                  placement="bottom"
                                  popperOptions={
                                    Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    }
                                  }
                                  transition={true}
                                />
                              </ForwardRef(Tooltip)>
                            </WithStyles(ForwardRef(Tooltip))>
                          </ArrowTooltip>
                        </li>
                      </StyledBreadcrumb>
                      <StyledBreadcrumb
                        ariaLabel="Breadcrumb-last"
                        displayName="FacilityCycles"
                        isLast={true}
                      >
                        <li>
                          <ArrowTooltip
                            title="FacilityCycles"
                          >
                            <WithStyles(ForwardRef(Tooltip))
                              PopperProps={
                                Object {
                                  "popperOptions": Object {
                                    "modifiers": Object {
                                      "arrow": Object {
                                        "element": null,
                                        "enabled": false,
                                      },
                                    },
                                  },
                                }
                              }
                              classes={
                                Object {
                                  "popper": "makeStyles-popper-269",
                                  "tooltip": "makeStyles-tooltip-268",
                                }
                              }
                              disableHoverListener={true}
                              title={
                                <React.Fragment>
                                  FacilityCycles
                                  <span
                                    className="makeStyles-arrow-270"
                                  />
                                </React.Fragment>
                              }
                            >
                              <ForwardRef(Tooltip)
                                PopperProps={
                                  Object {
                                    "popperOptions": Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    },
                                  }
                                }
                                classes={
                                  Object {
                                    "popper": "MuiTooltip-popper makeStyles-popper-269",
                                    "popperInteractive": "MuiTooltip-popperInteractive",
                                    "tooltip": "MuiTooltip-tooltip makeStyles-tooltip-268",
                                    "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                    "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                    "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                    "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                    "touch": "MuiTooltip-touch",
                                  }
                                }
                                disableHoverListener={true}
                                title={
                                  <React.Fragment>
                                    FacilityCycles
                                    <span
                                      className="makeStyles-arrow-270"
                                    />
                                  </React.Fragment>
                                }
                              >
                                <div
                                  aria-describedby={null}
                                  className=""
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchStart={[Function]}
                                  title={null}
                                >
                                  <WithStyles(ForwardRef(Typography))
                                    aria-label="Breadcrumb-last"
                                    className="content"
                                    color="textPrimary"
                                  >
                                    <ForwardRef(Typography)
                                      aria-label="Breadcrumb-last"
                                      className="content"
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textPrimary"
                                    >
                                      <p
                                        aria-label="Breadcrumb-last"
                                        className="MuiTypography-root content MuiTypography-body1 MuiTypography-colorTextPrimary"
                                      >
                                        <span
                                          className="displayContent"
                                        >
                                          <i>
                                            FacilityCycles
                                          </i>
                                        </span>
                                      </p>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                </div>
                                <ForwardRef(Popper)
                                  anchorEl={
                                    <div
                                      class=""
                                    >
                                      <p
                                        aria-label="Breadcrumb-last"
                                        class="MuiTypography-root content MuiTypography-body1 MuiTypography-colorTextPrimary"
                                      >
                                        <span
                                          class="displayContent"
                                        >
                                          <i>
                                            FacilityCycles
                                          </i>
                                        </span>
                                      </p>
                                    </div>
                                  }
                                  className="MuiTooltip-popper makeStyles-popper-269"
                                  id={null}
                                  open={false}
                                  placement="bottom"
                                  popperOptions={
                                    Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    }
                                  }
                                  transition={true}
                                />
                              </ForwardRef(Tooltip)>
                            </WithStyles(ForwardRef(Tooltip))>
                          </ArrowTooltip>
                        </li>
                      </StyledBreadcrumb>
                    </div>
                  </Route>
                </div>
              </ForwardRef(Paper)>
            </WithStyles(ForwardRef(Paper))>
          </div>
        </PageBreadcrumbs>
      </Connect(PageBreadcrumbs)>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`PageBreadcrumbs - Snapshot Tests (Generic, DLS, ISIS) renders correctly for ISIS instruments route 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Connect(PageBreadcrumbs)>
        <PageBreadcrumbs
          apiUrl=""
          breadcrumbSettings={Object {}}
          dispatch={[Function]}
          location="/browse/instrument"
        >
          <div>
            <WithStyles(ForwardRef(Paper))
              elevation={0}
            >
              <ForwardRef(Paper)
                classes={
                  Object {
                    "elevation0": "MuiPaper-elevation0",
                    "elevation1": "MuiPaper-elevation1",
                    "elevation10": "MuiPaper-elevation10",
                    "elevation11": "MuiPaper-elevation11",
                    "elevation12": "MuiPaper-elevation12",
                    "elevation13": "MuiPaper-elevation13",
                    "elevation14": "MuiPaper-elevation14",
                    "elevation15": "MuiPaper-elevation15",
                    "elevation16": "MuiPaper-elevation16",
                    "elevation17": "MuiPaper-elevation17",
                    "elevation18": "MuiPaper-elevation18",
                    "elevation19": "MuiPaper-elevation19",
                    "elevation2": "MuiPaper-elevation2",
                    "elevation20": "MuiPaper-elevation20",
                    "elevation21": "MuiPaper-elevation21",
                    "elevation22": "MuiPaper-elevation22",
                    "elevation23": "MuiPaper-elevation23",
                    "elevation24": "MuiPaper-elevation24",
                    "elevation3": "MuiPaper-elevation3",
                    "elevation4": "MuiPaper-elevation4",
                    "elevation5": "MuiPaper-elevation5",
                    "elevation6": "MuiPaper-elevation6",
                    "elevation7": "MuiPaper-elevation7",
                    "elevation8": "MuiPaper-elevation8",
                    "elevation9": "MuiPaper-elevation9",
                    "root": "MuiPaper-root",
                    "rounded": "MuiPaper-rounded",
                  }
                }
                elevation={0}
              >
                <div
                  className="MuiPaper-root MuiPaper-elevation0 MuiPaper-rounded"
                >
                  <Route>
                    <div
                      className="breadcrumb"
                    >
                      <li>
                        <span
                          className="content"
                        >
                          <span
                            className="icon"
                          >
                            <ForwardRef>
                              <WithStyles(ForwardRef(SvgIcon))>
                                <ForwardRef(SvgIcon)
                                  classes={
                                    Object {
                                      "colorAction": "MuiSvgIcon-colorAction",
                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                      "colorError": "MuiSvgIcon-colorError",
                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                      "root": "MuiSvgIcon-root",
                                    }
                                  }
                                >
                                  <svg
                                    aria-hidden="true"
                                    className="MuiSvgIcon-root"
                                    focusable="false"
                                    role="presentation"
                                    viewBox="0 0 24 24"
                                  >
                                    <path
                                      d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"
                                    />
                                  </svg>
                                </ForwardRef(SvgIcon)>
                              </WithStyles(ForwardRef(SvgIcon))>
                            </ForwardRef>
                          </span>
                        </span>
                      </li>
                      <StyledBreadcrumb
                        ariaLabel="Breadcrumb-base"
                        displayName="Instruments"
                      >
                        <li>
                          <ArrowTooltip
                            title="Instruments"
                          >
                            <WithStyles(ForwardRef(Tooltip))
                              PopperProps={
                                Object {
                                  "popperOptions": Object {
                                    "modifiers": Object {
                                      "arrow": Object {
                                        "element": null,
                                        "enabled": false,
                                      },
                                    },
                                  },
                                }
                              }
                              classes={
                                Object {
                                  "popper": "makeStyles-popper-192",
                                  "tooltip": "makeStyles-tooltip-191",
                                }
                              }
                              disableHoverListener={true}
                              title={
                                <React.Fragment>
                                  Instruments
                                  <span
                                    className="makeStyles-arrow-193"
                                  />
                                </React.Fragment>
                              }
                            >
                              <ForwardRef(Tooltip)
                                PopperProps={
                                  Object {
                                    "popperOptions": Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    },
                                  }
                                }
                                classes={
                                  Object {
                                    "popper": "MuiTooltip-popper makeStyles-popper-192",
                                    "popperInteractive": "MuiTooltip-popperInteractive",
                                    "tooltip": "MuiTooltip-tooltip makeStyles-tooltip-191",
                                    "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                    "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                    "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                    "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                    "touch": "MuiTooltip-touch",
                                  }
                                }
                                disableHoverListener={true}
                                title={
                                  <React.Fragment>
                                    Instruments
                                    <span
                                      className="makeStyles-arrow-193"
                                    />
                                  </React.Fragment>
                                }
                              >
                                <div
                                  aria-describedby={null}
                                  className=""
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchStart={[Function]}
                                  title={null}
                                >
                                  <WithStyles(ForwardRef(Typography))
                                    aria-label="Breadcrumb-base"
                                    className="content"
                                    color="textPrimary"
                                  >
                                    <ForwardRef(Typography)
                                      aria-label="Breadcrumb-base"
                                      className="content"
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textPrimary"
                                    >
                                      <p
                                        aria-label="Breadcrumb-base"
                                        className="MuiTypography-root content MuiTypography-body1 MuiTypography-colorTextPrimary"
                                      >
                                        <span
                                          className="displayContent"
                                        >
                                          Instruments
                                        </span>
                                      </p>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                </div>
                                <ForwardRef(Popper)
                                  anchorEl={
                                    <div
                                      class=""
                                    >
                                      <p
                                        aria-label="Breadcrumb-base"
                                        class="MuiTypography-root content MuiTypography-body1 MuiTypography-colorTextPrimary"
                                      >
                                        <span
                                          class="displayContent"
                                        >
                                          Instruments
                                        </span>
                                      </p>
                                    </div>
                                  }
                                  className="MuiTooltip-popper makeStyles-popper-192"
                                  id={null}
                                  open={false}
                                  placement="bottom"
                                  popperOptions={
                                    Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    }
                                  }
                                  transition={true}
                                />
                              </ForwardRef(Tooltip)>
                            </WithStyles(ForwardRef(Tooltip))>
                          </ArrowTooltip>
                        </li>
                      </StyledBreadcrumb>
                    </div>
                  </Route>
                </div>
              </ForwardRef(Paper)>
            </WithStyles(ForwardRef(Paper))>
          </div>
        </PageBreadcrumbs>
      </Connect(PageBreadcrumbs)>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`PageBreadcrumbs - Snapshot Tests (Generic, DLS, ISIS) renders correctly for generic datafiles route 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Connect(PageBreadcrumbs)>
        <PageBreadcrumbs
          apiUrl=""
          breadcrumbSettings={Object {}}
          dispatch={[Function]}
          location="/browse/investigation/1/dataset/1/datafile"
        >
          <div>
            <WithStyles(ForwardRef(Paper))
              elevation={0}
            >
              <ForwardRef(Paper)
                classes={
                  Object {
                    "elevation0": "MuiPaper-elevation0",
                    "elevation1": "MuiPaper-elevation1",
                    "elevation10": "MuiPaper-elevation10",
                    "elevation11": "MuiPaper-elevation11",
                    "elevation12": "MuiPaper-elevation12",
                    "elevation13": "MuiPaper-elevation13",
                    "elevation14": "MuiPaper-elevation14",
                    "elevation15": "MuiPaper-elevation15",
                    "elevation16": "MuiPaper-elevation16",
                    "elevation17": "MuiPaper-elevation17",
                    "elevation18": "MuiPaper-elevation18",
                    "elevation19": "MuiPaper-elevation19",
                    "elevation2": "MuiPaper-elevation2",
                    "elevation20": "MuiPaper-elevation20",
                    "elevation21": "MuiPaper-elevation21",
                    "elevation22": "MuiPaper-elevation22",
                    "elevation23": "MuiPaper-elevation23",
                    "elevation24": "MuiPaper-elevation24",
                    "elevation3": "MuiPaper-elevation3",
                    "elevation4": "MuiPaper-elevation4",
                    "elevation5": "MuiPaper-elevation5",
                    "elevation6": "MuiPaper-elevation6",
                    "elevation7": "MuiPaper-elevation7",
                    "elevation8": "MuiPaper-elevation8",
                    "elevation9": "MuiPaper-elevation9",
                    "root": "MuiPaper-root",
                    "rounded": "MuiPaper-rounded",
                  }
                }
                elevation={0}
              >
                <div
                  className="MuiPaper-root MuiPaper-elevation0 MuiPaper-rounded"
                >
                  <Route>
                    <div
                      className="breadcrumb"
                    >
                      <li>
                        <span
                          className="content"
                        >
                          <span
                            className="icon"
                          >
                            <ForwardRef>
                              <WithStyles(ForwardRef(SvgIcon))>
                                <ForwardRef(SvgIcon)
                                  classes={
                                    Object {
                                      "colorAction": "MuiSvgIcon-colorAction",
                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                      "colorError": "MuiSvgIcon-colorError",
                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                      "root": "MuiSvgIcon-root",
                                    }
                                  }
                                >
                                  <svg
                                    aria-hidden="true"
                                    className="MuiSvgIcon-root"
                                    focusable="false"
                                    role="presentation"
                                    viewBox="0 0 24 24"
                                  >
                                    <path
                                      d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"
                                    />
                                  </svg>
                                </ForwardRef(SvgIcon)>
                              </WithStyles(ForwardRef(SvgIcon))>
                            </ForwardRef>
                          </span>
                        </span>
                      </li>
                      <StyledBreadcrumb
                        ariaLabel="Breadcrumb-base"
                        displayName="Investigations"
                        url="/browse/investigation"
                      >
                        <li>
                          <ArrowTooltip
                            title="Investigations"
                          >
                            <WithStyles(ForwardRef(Tooltip))
                              PopperProps={
                                Object {
                                  "popperOptions": Object {
                                    "modifiers": Object {
                                      "arrow": Object {
                                        "element": null,
                                        "enabled": false,
                                      },
                                    },
                                  },
                                }
                              }
                              classes={
                                Object {
                                  "popper": "makeStyles-popper-684",
                                  "tooltip": "makeStyles-tooltip-683",
                                }
                              }
                              disableHoverListener={true}
                              title={
                                <React.Fragment>
                                  Investigations
                                  <span
                                    className="makeStyles-arrow-685"
                                  />
                                </React.Fragment>
                              }
                            >
                              <ForwardRef(Tooltip)
                                PopperProps={
                                  Object {
                                    "popperOptions": Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    },
                                  }
                                }
                                classes={
                                  Object {
                                    "popper": "MuiTooltip-popper makeStyles-popper-684",
                                    "popperInteractive": "MuiTooltip-popperInteractive",
                                    "tooltip": "MuiTooltip-tooltip makeStyles-tooltip-683",
                                    "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                    "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                    "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                    "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                    "touch": "MuiTooltip-touch",
                                  }
                                }
                                disableHoverListener={true}
                                title={
                                  <React.Fragment>
                                    Investigations
                                    <span
                                      className="makeStyles-arrow-685"
                                    />
                                  </React.Fragment>
                                }
                              >
                                <div
                                  aria-describedby={null}
                                  className=""
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchStart={[Function]}
                                  title={null}
                                >
                                  <WithStyles(ForwardRef(Link))
                                    aria-label="Breadcrumb-base"
                                    className="content"
                                    component={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "displayName": "Link",
                                        "propTypes": Object {
                                          "innerRef": [Function],
                                          "onClick": [Function],
                                          "replace": [Function],
                                          "target": [Function],
                                          "to": [Function],
                                        },
                                        "render": [Function],
                                      }
                                    }
                                    to="/browse/investigation"
                                  >
                                    <ForwardRef(Link)
                                      aria-label="Breadcrumb-base"
                                      className="content"
                                      classes={
                                        Object {
                                          "button": "MuiLink-button",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiLink-root",
                                          "underlineAlways": "MuiLink-underlineAlways",
                                          "underlineHover": "MuiLink-underlineHover",
                                          "underlineNone": "MuiLink-underlineNone",
                                        }
                                      }
                                      component={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "displayName": "Link",
                                          "propTypes": Object {
                                            "innerRef": [Function],
                                            "onClick": [Function],
                                            "replace": [Function],
                                            "target": [Function],
                                            "to": [Function],
                                          },
                                          "render": [Function],
                                        }
                                      }
                                      to="/browse/investigation"
                                    >
                                      <WithStyles(ForwardRef(Typography))
                                        aria-label="Breadcrumb-base"
                                        className="MuiLink-root MuiLink-underlineHover content"
                                        color="primary"
                                        component={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "displayName": "Link",
                                            "propTypes": Object {
                                              "innerRef": [Function],
                                              "onClick": [Function],
                                              "replace": [Function],
                                              "target": [Function],
                                              "to": [Function],
                                            },
                                            "render": [Function],
                                          }
                                        }
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        to="/browse/investigation"
                                        variant="inherit"
                                      >
                                        <ForwardRef(Typography)
                                          aria-label="Breadcrumb-base"
                                          className="MuiLink-root MuiLink-underlineHover content"
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter",
                                              "alignJustify": "MuiTypography-alignJustify",
                                              "alignLeft": "MuiTypography-alignLeft",
                                              "alignRight": "MuiTypography-alignRight",
                                              "body1": "MuiTypography-body1",
                                              "body2": "MuiTypography-body2",
                                              "button": "MuiTypography-button",
                                              "caption": "MuiTypography-caption",
                                              "colorError": "MuiTypography-colorError",
                                              "colorInherit": "MuiTypography-colorInherit",
                                              "colorPrimary": "MuiTypography-colorPrimary",
                                              "colorSecondary": "MuiTypography-colorSecondary",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                              "displayBlock": "MuiTypography-displayBlock",
                                              "displayInline": "MuiTypography-displayInline",
                                              "gutterBottom": "MuiTypography-gutterBottom",
                                              "h1": "MuiTypography-h1",
                                              "h2": "MuiTypography-h2",
                                              "h3": "MuiTypography-h3",
                                              "h4": "MuiTypography-h4",
                                              "h5": "MuiTypography-h5",
                                              "h6": "MuiTypography-h6",
                                              "noWrap": "MuiTypography-noWrap",
                                              "overline": "MuiTypography-overline",
                                              "paragraph": "MuiTypography-paragraph",
                                              "root": "MuiTypography-root",
                                              "srOnly": "MuiTypography-srOnly",
                                              "subtitle1": "MuiTypography-subtitle1",
                                              "subtitle2": "MuiTypography-subtitle2",
                                            }
                                          }
                                          color="primary"
                                          component={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "displayName": "Link",
                                              "propTypes": Object {
                                                "innerRef": [Function],
                                                "onClick": [Function],
                                                "replace": [Function],
                                                "target": [Function],
                                                "to": [Function],
                                              },
                                              "render": [Function],
                                            }
                                          }
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          to="/browse/investigation"
                                          variant="inherit"
                                        >
                                          <Link
                                            aria-label="Breadcrumb-base"
                                            className="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            to="/browse/investigation"
                                          >
                                            <LinkAnchor
                                              aria-label="Breadcrumb-base"
                                              className="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                              href="/browse/investigation"
                                              navigate={[Function]}
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                            >
                                              <a
                                                aria-label="Breadcrumb-base"
                                                className="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                                href="/browse/investigation"
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                              >
                                                <span
                                                  className="displayContent"
                                                >
                                                  Investigations
                                                </span>
                                              </a>
                                            </LinkAnchor>
                                          </Link>
                                        </ForwardRef(Typography)>
                                      </WithStyles(ForwardRef(Typography))>
                                    </ForwardRef(Link)>
                                  </WithStyles(ForwardRef(Link))>
                                </div>
                                <ForwardRef(Popper)
                                  anchorEl={
                                    <div
                                      class=""
                                    >
                                      <a
                                        aria-label="Breadcrumb-base"
                                        class="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                        href="/browse/investigation"
                                      >
                                        <span
                                          class="displayContent"
                                        >
                                          Investigations
                                        </span>
                                      </a>
                                    </div>
                                  }
                                  className="MuiTooltip-popper makeStyles-popper-684"
                                  id={null}
                                  open={false}
                                  placement="bottom"
                                  popperOptions={
                                    Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    }
                                  }
                                  transition={true}
                                />
                              </ForwardRef(Tooltip)>
                            </WithStyles(ForwardRef(Tooltip))>
                          </ArrowTooltip>
                        </li>
                      </StyledBreadcrumb>
                      <StyledBreadcrumb
                        ariaLabel="Breadcrumb-hierarchy-1"
                        displayName="Test 1"
                        key="breadcrumb-1"
                        url="/browse/investigation/1/dataset"
                      >
                        <li>
                          <ArrowTooltip
                            title="Test 1"
                          >
                            <WithStyles(ForwardRef(Tooltip))
                              PopperProps={
                                Object {
                                  "popperOptions": Object {
                                    "modifiers": Object {
                                      "arrow": Object {
                                        "element": null,
                                        "enabled": false,
                                      },
                                    },
                                  },
                                }
                              }
                              classes={
                                Object {
                                  "popper": "makeStyles-popper-684",
                                  "tooltip": "makeStyles-tooltip-683",
                                }
                              }
                              disableHoverListener={true}
                              title={
                                <React.Fragment>
                                  Test 1
                                  <span
                                    className="makeStyles-arrow-685"
                                  />
                                </React.Fragment>
                              }
                            >
                              <ForwardRef(Tooltip)
                                PopperProps={
                                  Object {
                                    "popperOptions": Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    },
                                  }
                                }
                                classes={
                                  Object {
                                    "popper": "MuiTooltip-popper makeStyles-popper-684",
                                    "popperInteractive": "MuiTooltip-popperInteractive",
                                    "tooltip": "MuiTooltip-tooltip makeStyles-tooltip-683",
                                    "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                    "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                    "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                    "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                    "touch": "MuiTooltip-touch",
                                  }
                                }
                                disableHoverListener={true}
                                title={
                                  <React.Fragment>
                                    Test 1
                                    <span
                                      className="makeStyles-arrow-685"
                                    />
                                  </React.Fragment>
                                }
                              >
                                <div
                                  aria-describedby={null}
                                  className=""
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchStart={[Function]}
                                  title={null}
                                >
                                  <WithStyles(ForwardRef(Link))
                                    aria-label="Breadcrumb-hierarchy-1"
                                    className="content"
                                    component={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "displayName": "Link",
                                        "propTypes": Object {
                                          "innerRef": [Function],
                                          "onClick": [Function],
                                          "replace": [Function],
                                          "target": [Function],
                                          "to": [Function],
                                        },
                                        "render": [Function],
                                      }
                                    }
                                    to="/browse/investigation/1/dataset"
                                  >
                                    <ForwardRef(Link)
                                      aria-label="Breadcrumb-hierarchy-1"
                                      className="content"
                                      classes={
                                        Object {
                                          "button": "MuiLink-button",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiLink-root",
                                          "underlineAlways": "MuiLink-underlineAlways",
                                          "underlineHover": "MuiLink-underlineHover",
                                          "underlineNone": "MuiLink-underlineNone",
                                        }
                                      }
                                      component={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "displayName": "Link",
                                          "propTypes": Object {
                                            "innerRef": [Function],
                                            "onClick": [Function],
                                            "replace": [Function],
                                            "target": [Function],
                                            "to": [Function],
                                          },
                                          "render": [Function],
                                        }
                                      }
                                      to="/browse/investigation/1/dataset"
                                    >
                                      <WithStyles(ForwardRef(Typography))
                                        aria-label="Breadcrumb-hierarchy-1"
                                        className="MuiLink-root MuiLink-underlineHover content"
                                        color="primary"
                                        component={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "displayName": "Link",
                                            "propTypes": Object {
                                              "innerRef": [Function],
                                              "onClick": [Function],
                                              "replace": [Function],
                                              "target": [Function],
                                              "to": [Function],
                                            },
                                            "render": [Function],
                                          }
                                        }
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        to="/browse/investigation/1/dataset"
                                        variant="inherit"
                                      >
                                        <ForwardRef(Typography)
                                          aria-label="Breadcrumb-hierarchy-1"
                                          className="MuiLink-root MuiLink-underlineHover content"
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter",
                                              "alignJustify": "MuiTypography-alignJustify",
                                              "alignLeft": "MuiTypography-alignLeft",
                                              "alignRight": "MuiTypography-alignRight",
                                              "body1": "MuiTypography-body1",
                                              "body2": "MuiTypography-body2",
                                              "button": "MuiTypography-button",
                                              "caption": "MuiTypography-caption",
                                              "colorError": "MuiTypography-colorError",
                                              "colorInherit": "MuiTypography-colorInherit",
                                              "colorPrimary": "MuiTypography-colorPrimary",
                                              "colorSecondary": "MuiTypography-colorSecondary",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                              "displayBlock": "MuiTypography-displayBlock",
                                              "displayInline": "MuiTypography-displayInline",
                                              "gutterBottom": "MuiTypography-gutterBottom",
                                              "h1": "MuiTypography-h1",
                                              "h2": "MuiTypography-h2",
                                              "h3": "MuiTypography-h3",
                                              "h4": "MuiTypography-h4",
                                              "h5": "MuiTypography-h5",
                                              "h6": "MuiTypography-h6",
                                              "noWrap": "MuiTypography-noWrap",
                                              "overline": "MuiTypography-overline",
                                              "paragraph": "MuiTypography-paragraph",
                                              "root": "MuiTypography-root",
                                              "srOnly": "MuiTypography-srOnly",
                                              "subtitle1": "MuiTypography-subtitle1",
                                              "subtitle2": "MuiTypography-subtitle2",
                                            }
                                          }
                                          color="primary"
                                          component={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "displayName": "Link",
                                              "propTypes": Object {
                                                "innerRef": [Function],
                                                "onClick": [Function],
                                                "replace": [Function],
                                                "target": [Function],
                                                "to": [Function],
                                              },
                                              "render": [Function],
                                            }
                                          }
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          to="/browse/investigation/1/dataset"
                                          variant="inherit"
                                        >
                                          <Link
                                            aria-label="Breadcrumb-hierarchy-1"
                                            className="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            to="/browse/investigation/1/dataset"
                                          >
                                            <LinkAnchor
                                              aria-label="Breadcrumb-hierarchy-1"
                                              className="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                              href="/browse/investigation/1/dataset"
                                              navigate={[Function]}
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                            >
                                              <a
                                                aria-label="Breadcrumb-hierarchy-1"
                                                className="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                                href="/browse/investigation/1/dataset"
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                              >
                                                <span
                                                  className="displayContent"
                                                >
                                                  Test 1
                                                </span>
                                              </a>
                                            </LinkAnchor>
                                          </Link>
                                        </ForwardRef(Typography)>
                                      </WithStyles(ForwardRef(Typography))>
                                    </ForwardRef(Link)>
                                  </WithStyles(ForwardRef(Link))>
                                </div>
                                <ForwardRef(Popper)
                                  anchorEl={
                                    <div
                                      class=""
                                    >
                                      <a
                                        aria-label="Breadcrumb-hierarchy-1"
                                        class="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                        href="/browse/investigation/1/dataset"
                                      >
                                        <span
                                          class="displayContent"
                                        >
                                          Test 1
                                        </span>
                                      </a>
                                    </div>
                                  }
                                  className="MuiTooltip-popper makeStyles-popper-684"
                                  id={null}
                                  open={false}
                                  placement="bottom"
                                  popperOptions={
                                    Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    }
                                  }
                                  transition={true}
                                />
                              </ForwardRef(Tooltip)>
                            </WithStyles(ForwardRef(Tooltip))>
                          </ArrowTooltip>
                        </li>
                      </StyledBreadcrumb>
                      <StyledBreadcrumb
                        ariaLabel="Breadcrumb-hierarchy-2"
                        displayName="INVESTIGATION 1"
                        key="breadcrumb-2"
                      >
                        <li>
                          <ArrowTooltip
                            title="INVESTIGATION 1"
                          >
                            <WithStyles(ForwardRef(Tooltip))
                              PopperProps={
                                Object {
                                  "popperOptions": Object {
                                    "modifiers": Object {
                                      "arrow": Object {
                                        "element": null,
                                        "enabled": false,
                                      },
                                    },
                                  },
                                }
                              }
                              classes={
                                Object {
                                  "popper": "makeStyles-popper-684",
                                  "tooltip": "makeStyles-tooltip-683",
                                }
                              }
                              disableHoverListener={true}
                              title={
                                <React.Fragment>
                                  INVESTIGATION 1
                                  <span
                                    className="makeStyles-arrow-685"
                                  />
                                </React.Fragment>
                              }
                            >
                              <ForwardRef(Tooltip)
                                PopperProps={
                                  Object {
                                    "popperOptions": Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    },
                                  }
                                }
                                classes={
                                  Object {
                                    "popper": "MuiTooltip-popper makeStyles-popper-684",
                                    "popperInteractive": "MuiTooltip-popperInteractive",
                                    "tooltip": "MuiTooltip-tooltip makeStyles-tooltip-683",
                                    "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                    "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                    "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                    "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                    "touch": "MuiTooltip-touch",
                                  }
                                }
                                disableHoverListener={true}
                                title={
                                  <React.Fragment>
                                    INVESTIGATION 1
                                    <span
                                      className="makeStyles-arrow-685"
                                    />
                                  </React.Fragment>
                                }
                              >
                                <div
                                  aria-describedby={null}
                                  className=""
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchStart={[Function]}
                                  title={null}
                                >
                                  <WithStyles(ForwardRef(Typography))
                                    aria-label="Breadcrumb-hierarchy-2"
                                    className="content"
                                    color="textPrimary"
                                  >
                                    <ForwardRef(Typography)
                                      aria-label="Breadcrumb-hierarchy-2"
                                      className="content"
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textPrimary"
                                    >
                                      <p
                                        aria-label="Breadcrumb-hierarchy-2"
                                        className="MuiTypography-root content MuiTypography-body1 MuiTypography-colorTextPrimary"
                                      >
                                        <span
                                          className="displayContent"
                                        >
                                          INVESTIGATION 1
                                        </span>
                                      </p>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                </div>
                                <ForwardRef(Popper)
                                  anchorEl={
                                    <div
                                      class=""
                                    >
                                      <p
                                        aria-label="Breadcrumb-hierarchy-2"
                                        class="MuiTypography-root content MuiTypography-body1 MuiTypography-colorTextPrimary"
                                      >
                                        <span
                                          class="displayContent"
                                        >
                                          INVESTIGATION 1
                                        </span>
                                      </p>
                                    </div>
                                  }
                                  className="MuiTooltip-popper makeStyles-popper-684"
                                  id={null}
                                  open={false}
                                  placement="bottom"
                                  popperOptions={
                                    Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    }
                                  }
                                  transition={true}
                                />
                              </ForwardRef(Tooltip)>
                            </WithStyles(ForwardRef(Tooltip))>
                          </ArrowTooltip>
                        </li>
                      </StyledBreadcrumb>
                      <StyledBreadcrumb
                        ariaLabel="Breadcrumb-last"
                        displayName="Datafiles"
                        isLast={true}
                      >
                        <li>
                          <ArrowTooltip
                            title="Datafiles"
                          >
                            <WithStyles(ForwardRef(Tooltip))
                              PopperProps={
                                Object {
                                  "popperOptions": Object {
                                    "modifiers": Object {
                                      "arrow": Object {
                                        "element": null,
                                        "enabled": false,
                                      },
                                    },
                                  },
                                }
                              }
                              classes={
                                Object {
                                  "popper": "makeStyles-popper-684",
                                  "tooltip": "makeStyles-tooltip-683",
                                }
                              }
                              disableHoverListener={true}
                              title={
                                <React.Fragment>
                                  Datafiles
                                  <span
                                    className="makeStyles-arrow-685"
                                  />
                                </React.Fragment>
                              }
                            >
                              <ForwardRef(Tooltip)
                                PopperProps={
                                  Object {
                                    "popperOptions": Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    },
                                  }
                                }
                                classes={
                                  Object {
                                    "popper": "MuiTooltip-popper makeStyles-popper-684",
                                    "popperInteractive": "MuiTooltip-popperInteractive",
                                    "tooltip": "MuiTooltip-tooltip makeStyles-tooltip-683",
                                    "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                    "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                    "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                    "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                    "touch": "MuiTooltip-touch",
                                  }
                                }
                                disableHoverListener={true}
                                title={
                                  <React.Fragment>
                                    Datafiles
                                    <span
                                      className="makeStyles-arrow-685"
                                    />
                                  </React.Fragment>
                                }
                              >
                                <div
                                  aria-describedby={null}
                                  className=""
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchStart={[Function]}
                                  title={null}
                                >
                                  <WithStyles(ForwardRef(Typography))
                                    aria-label="Breadcrumb-last"
                                    className="content"
                                    color="textPrimary"
                                  >
                                    <ForwardRef(Typography)
                                      aria-label="Breadcrumb-last"
                                      className="content"
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textPrimary"
                                    >
                                      <p
                                        aria-label="Breadcrumb-last"
                                        className="MuiTypography-root content MuiTypography-body1 MuiTypography-colorTextPrimary"
                                      >
                                        <span
                                          className="displayContent"
                                        >
                                          <i>
                                            Datafiles
                                          </i>
                                        </span>
                                      </p>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                </div>
                                <ForwardRef(Popper)
                                  anchorEl={
                                    <div
                                      class=""
                                    >
                                      <p
                                        aria-label="Breadcrumb-last"
                                        class="MuiTypography-root content MuiTypography-body1 MuiTypography-colorTextPrimary"
                                      >
                                        <span
                                          class="displayContent"
                                        >
                                          <i>
                                            Datafiles
                                          </i>
                                        </span>
                                      </p>
                                    </div>
                                  }
                                  className="MuiTooltip-popper makeStyles-popper-684"
                                  id={null}
                                  open={false}
                                  placement="bottom"
                                  popperOptions={
                                    Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    }
                                  }
                                  transition={true}
                                />
                              </ForwardRef(Tooltip)>
                            </WithStyles(ForwardRef(Tooltip))>
                          </ArrowTooltip>
                        </li>
                      </StyledBreadcrumb>
                    </div>
                  </Route>
                </div>
              </ForwardRef(Paper)>
            </WithStyles(ForwardRef(Paper))>
          </div>
        </PageBreadcrumbs>
      </Connect(PageBreadcrumbs)>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`PageBreadcrumbs - Snapshot Tests (Generic, DLS, ISIS) renders correctly for generic datasets route 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Connect(PageBreadcrumbs)>
        <PageBreadcrumbs
          apiUrl=""
          breadcrumbSettings={Object {}}
          dispatch={[Function]}
          location="/browse/investigation/1/dataset"
        >
          <div>
            <WithStyles(ForwardRef(Paper))
              elevation={0}
            >
              <ForwardRef(Paper)
                classes={
                  Object {
                    "elevation0": "MuiPaper-elevation0",
                    "elevation1": "MuiPaper-elevation1",
                    "elevation10": "MuiPaper-elevation10",
                    "elevation11": "MuiPaper-elevation11",
                    "elevation12": "MuiPaper-elevation12",
                    "elevation13": "MuiPaper-elevation13",
                    "elevation14": "MuiPaper-elevation14",
                    "elevation15": "MuiPaper-elevation15",
                    "elevation16": "MuiPaper-elevation16",
                    "elevation17": "MuiPaper-elevation17",
                    "elevation18": "MuiPaper-elevation18",
                    "elevation19": "MuiPaper-elevation19",
                    "elevation2": "MuiPaper-elevation2",
                    "elevation20": "MuiPaper-elevation20",
                    "elevation21": "MuiPaper-elevation21",
                    "elevation22": "MuiPaper-elevation22",
                    "elevation23": "MuiPaper-elevation23",
                    "elevation24": "MuiPaper-elevation24",
                    "elevation3": "MuiPaper-elevation3",
                    "elevation4": "MuiPaper-elevation4",
                    "elevation5": "MuiPaper-elevation5",
                    "elevation6": "MuiPaper-elevation6",
                    "elevation7": "MuiPaper-elevation7",
                    "elevation8": "MuiPaper-elevation8",
                    "elevation9": "MuiPaper-elevation9",
                    "root": "MuiPaper-root",
                    "rounded": "MuiPaper-rounded",
                  }
                }
                elevation={0}
              >
                <div
                  className="MuiPaper-root MuiPaper-elevation0 MuiPaper-rounded"
                >
                  <Route>
                    <div
                      className="breadcrumb"
                    >
                      <li>
                        <span
                          className="content"
                        >
                          <span
                            className="icon"
                          >
                            <ForwardRef>
                              <WithStyles(ForwardRef(SvgIcon))>
                                <ForwardRef(SvgIcon)
                                  classes={
                                    Object {
                                      "colorAction": "MuiSvgIcon-colorAction",
                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                      "colorError": "MuiSvgIcon-colorError",
                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                      "root": "MuiSvgIcon-root",
                                    }
                                  }
                                >
                                  <svg
                                    aria-hidden="true"
                                    className="MuiSvgIcon-root"
                                    focusable="false"
                                    role="presentation"
                                    viewBox="0 0 24 24"
                                  >
                                    <path
                                      d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"
                                    />
                                  </svg>
                                </ForwardRef(SvgIcon)>
                              </WithStyles(ForwardRef(SvgIcon))>
                            </ForwardRef>
                          </span>
                        </span>
                      </li>
                      <StyledBreadcrumb
                        ariaLabel="Breadcrumb-base"
                        displayName="Investigations"
                        url="/browse/investigation"
                      >
                        <li>
                          <ArrowTooltip
                            title="Investigations"
                          >
                            <WithStyles(ForwardRef(Tooltip))
                              PopperProps={
                                Object {
                                  "popperOptions": Object {
                                    "modifiers": Object {
                                      "arrow": Object {
                                        "element": null,
                                        "enabled": false,
                                      },
                                    },
                                  },
                                }
                              }
                              classes={
                                Object {
                                  "popper": "makeStyles-popper-435",
                                  "tooltip": "makeStyles-tooltip-434",
                                }
                              }
                              disableHoverListener={true}
                              title={
                                <React.Fragment>
                                  Investigations
                                  <span
                                    className="makeStyles-arrow-436"
                                  />
                                </React.Fragment>
                              }
                            >
                              <ForwardRef(Tooltip)
                                PopperProps={
                                  Object {
                                    "popperOptions": Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    },
                                  }
                                }
                                classes={
                                  Object {
                                    "popper": "MuiTooltip-popper makeStyles-popper-435",
                                    "popperInteractive": "MuiTooltip-popperInteractive",
                                    "tooltip": "MuiTooltip-tooltip makeStyles-tooltip-434",
                                    "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                    "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                    "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                    "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                    "touch": "MuiTooltip-touch",
                                  }
                                }
                                disableHoverListener={true}
                                title={
                                  <React.Fragment>
                                    Investigations
                                    <span
                                      className="makeStyles-arrow-436"
                                    />
                                  </React.Fragment>
                                }
                              >
                                <div
                                  aria-describedby={null}
                                  className=""
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchStart={[Function]}
                                  title={null}
                                >
                                  <WithStyles(ForwardRef(Link))
                                    aria-label="Breadcrumb-base"
                                    className="content"
                                    component={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "displayName": "Link",
                                        "propTypes": Object {
                                          "innerRef": [Function],
                                          "onClick": [Function],
                                          "replace": [Function],
                                          "target": [Function],
                                          "to": [Function],
                                        },
                                        "render": [Function],
                                      }
                                    }
                                    to="/browse/investigation"
                                  >
                                    <ForwardRef(Link)
                                      aria-label="Breadcrumb-base"
                                      className="content"
                                      classes={
                                        Object {
                                          "button": "MuiLink-button",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiLink-root",
                                          "underlineAlways": "MuiLink-underlineAlways",
                                          "underlineHover": "MuiLink-underlineHover",
                                          "underlineNone": "MuiLink-underlineNone",
                                        }
                                      }
                                      component={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "displayName": "Link",
                                          "propTypes": Object {
                                            "innerRef": [Function],
                                            "onClick": [Function],
                                            "replace": [Function],
                                            "target": [Function],
                                            "to": [Function],
                                          },
                                          "render": [Function],
                                        }
                                      }
                                      to="/browse/investigation"
                                    >
                                      <WithStyles(ForwardRef(Typography))
                                        aria-label="Breadcrumb-base"
                                        className="MuiLink-root MuiLink-underlineHover content"
                                        color="primary"
                                        component={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "displayName": "Link",
                                            "propTypes": Object {
                                              "innerRef": [Function],
                                              "onClick": [Function],
                                              "replace": [Function],
                                              "target": [Function],
                                              "to": [Function],
                                            },
                                            "render": [Function],
                                          }
                                        }
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        to="/browse/investigation"
                                        variant="inherit"
                                      >
                                        <ForwardRef(Typography)
                                          aria-label="Breadcrumb-base"
                                          className="MuiLink-root MuiLink-underlineHover content"
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter",
                                              "alignJustify": "MuiTypography-alignJustify",
                                              "alignLeft": "MuiTypography-alignLeft",
                                              "alignRight": "MuiTypography-alignRight",
                                              "body1": "MuiTypography-body1",
                                              "body2": "MuiTypography-body2",
                                              "button": "MuiTypography-button",
                                              "caption": "MuiTypography-caption",
                                              "colorError": "MuiTypography-colorError",
                                              "colorInherit": "MuiTypography-colorInherit",
                                              "colorPrimary": "MuiTypography-colorPrimary",
                                              "colorSecondary": "MuiTypography-colorSecondary",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                              "displayBlock": "MuiTypography-displayBlock",
                                              "displayInline": "MuiTypography-displayInline",
                                              "gutterBottom": "MuiTypography-gutterBottom",
                                              "h1": "MuiTypography-h1",
                                              "h2": "MuiTypography-h2",
                                              "h3": "MuiTypography-h3",
                                              "h4": "MuiTypography-h4",
                                              "h5": "MuiTypography-h5",
                                              "h6": "MuiTypography-h6",
                                              "noWrap": "MuiTypography-noWrap",
                                              "overline": "MuiTypography-overline",
                                              "paragraph": "MuiTypography-paragraph",
                                              "root": "MuiTypography-root",
                                              "srOnly": "MuiTypography-srOnly",
                                              "subtitle1": "MuiTypography-subtitle1",
                                              "subtitle2": "MuiTypography-subtitle2",
                                            }
                                          }
                                          color="primary"
                                          component={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "displayName": "Link",
                                              "propTypes": Object {
                                                "innerRef": [Function],
                                                "onClick": [Function],
                                                "replace": [Function],
                                                "target": [Function],
                                                "to": [Function],
                                              },
                                              "render": [Function],
                                            }
                                          }
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          to="/browse/investigation"
                                          variant="inherit"
                                        >
                                          <Link
                                            aria-label="Breadcrumb-base"
                                            className="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            to="/browse/investigation"
                                          >
                                            <LinkAnchor
                                              aria-label="Breadcrumb-base"
                                              className="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                              href="/browse/investigation"
                                              navigate={[Function]}
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                            >
                                              <a
                                                aria-label="Breadcrumb-base"
                                                className="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                                href="/browse/investigation"
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                              >
                                                <span
                                                  className="displayContent"
                                                >
                                                  Investigations
                                                </span>
                                              </a>
                                            </LinkAnchor>
                                          </Link>
                                        </ForwardRef(Typography)>
                                      </WithStyles(ForwardRef(Typography))>
                                    </ForwardRef(Link)>
                                  </WithStyles(ForwardRef(Link))>
                                </div>
                                <ForwardRef(Popper)
                                  anchorEl={
                                    <div
                                      class=""
                                    >
                                      <a
                                        aria-label="Breadcrumb-base"
                                        class="MuiTypography-root MuiLink-root MuiLink-underlineHover content MuiTypography-colorPrimary"
                                        href="/browse/investigation"
                                      >
                                        <span
                                          class="displayContent"
                                        >
                                          Investigations
                                        </span>
                                      </a>
                                    </div>
                                  }
                                  className="MuiTooltip-popper makeStyles-popper-435"
                                  id={null}
                                  open={false}
                                  placement="bottom"
                                  popperOptions={
                                    Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    }
                                  }
                                  transition={true}
                                />
                              </ForwardRef(Tooltip)>
                            </WithStyles(ForwardRef(Tooltip))>
                          </ArrowTooltip>
                        </li>
                      </StyledBreadcrumb>
                      <StyledBreadcrumb
                        ariaLabel="Breadcrumb-hierarchy-1"
                        displayName="Test 1"
                        key="breadcrumb-1"
                      >
                        <li>
                          <ArrowTooltip
                            title="Test 1"
                          >
                            <WithStyles(ForwardRef(Tooltip))
                              PopperProps={
                                Object {
                                  "popperOptions": Object {
                                    "modifiers": Object {
                                      "arrow": Object {
                                        "element": null,
                                        "enabled": false,
                                      },
                                    },
                                  },
                                }
                              }
                              classes={
                                Object {
                                  "popper": "makeStyles-popper-435",
                                  "tooltip": "makeStyles-tooltip-434",
                                }
                              }
                              disableHoverListener={true}
                              title={
                                <React.Fragment>
                                  Test 1
                                  <span
                                    className="makeStyles-arrow-436"
                                  />
                                </React.Fragment>
                              }
                            >
                              <ForwardRef(Tooltip)
                                PopperProps={
                                  Object {
                                    "popperOptions": Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    },
                                  }
                                }
                                classes={
                                  Object {
                                    "popper": "MuiTooltip-popper makeStyles-popper-435",
                                    "popperInteractive": "MuiTooltip-popperInteractive",
                                    "tooltip": "MuiTooltip-tooltip makeStyles-tooltip-434",
                                    "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                    "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                    "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                    "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                    "touch": "MuiTooltip-touch",
                                  }
                                }
                                disableHoverListener={true}
                                title={
                                  <React.Fragment>
                                    Test 1
                                    <span
                                      className="makeStyles-arrow-436"
                                    />
                                  </React.Fragment>
                                }
                              >
                                <div
                                  aria-describedby={null}
                                  className=""
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchStart={[Function]}
                                  title={null}
                                >
                                  <WithStyles(ForwardRef(Typography))
                                    aria-label="Breadcrumb-hierarchy-1"
                                    className="content"
                                    color="textPrimary"
                                  >
                                    <ForwardRef(Typography)
                                      aria-label="Breadcrumb-hierarchy-1"
                                      className="content"
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textPrimary"
                                    >
                                      <p
                                        aria-label="Breadcrumb-hierarchy-1"
                                        className="MuiTypography-root content MuiTypography-body1 MuiTypography-colorTextPrimary"
                                      >
                                        <span
                                          className="displayContent"
                                        >
                                          Test 1
                                        </span>
                                      </p>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                </div>
                                <ForwardRef(Popper)
                                  anchorEl={
                                    <div
                                      class=""
                                    >
                                      <p
                                        aria-label="Breadcrumb-hierarchy-1"
                                        class="MuiTypography-root content MuiTypography-body1 MuiTypography-colorTextPrimary"
                                      >
                                        <span
                                          class="displayContent"
                                        >
                                          Test 1
                                        </span>
                                      </p>
                                    </div>
                                  }
                                  className="MuiTooltip-popper makeStyles-popper-435"
                                  id={null}
                                  open={false}
                                  placement="bottom"
                                  popperOptions={
                                    Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    }
                                  }
                                  transition={true}
                                />
                              </ForwardRef(Tooltip)>
                            </WithStyles(ForwardRef(Tooltip))>
                          </ArrowTooltip>
                        </li>
                      </StyledBreadcrumb>
                      <StyledBreadcrumb
                        ariaLabel="Breadcrumb-last"
                        displayName="Datasets"
                        isLast={true}
                      >
                        <li>
                          <ArrowTooltip
                            title="Datasets"
                          >
                            <WithStyles(ForwardRef(Tooltip))
                              PopperProps={
                                Object {
                                  "popperOptions": Object {
                                    "modifiers": Object {
                                      "arrow": Object {
                                        "element": null,
                                        "enabled": false,
                                      },
                                    },
                                  },
                                }
                              }
                              classes={
                                Object {
                                  "popper": "makeStyles-popper-435",
                                  "tooltip": "makeStyles-tooltip-434",
                                }
                              }
                              disableHoverListener={true}
                              title={
                                <React.Fragment>
                                  Datasets
                                  <span
                                    className="makeStyles-arrow-436"
                                  />
                                </React.Fragment>
                              }
                            >
                              <ForwardRef(Tooltip)
                                PopperProps={
                                  Object {
                                    "popperOptions": Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    },
                                  }
                                }
                                classes={
                                  Object {
                                    "popper": "MuiTooltip-popper makeStyles-popper-435",
                                    "popperInteractive": "MuiTooltip-popperInteractive",
                                    "tooltip": "MuiTooltip-tooltip makeStyles-tooltip-434",
                                    "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                    "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                    "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                    "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                    "touch": "MuiTooltip-touch",
                                  }
                                }
                                disableHoverListener={true}
                                title={
                                  <React.Fragment>
                                    Datasets
                                    <span
                                      className="makeStyles-arrow-436"
                                    />
                                  </React.Fragment>
                                }
                              >
                                <div
                                  aria-describedby={null}
                                  className=""
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchStart={[Function]}
                                  title={null}
                                >
                                  <WithStyles(ForwardRef(Typography))
                                    aria-label="Breadcrumb-last"
                                    className="content"
                                    color="textPrimary"
                                  >
                                    <ForwardRef(Typography)
                                      aria-label="Breadcrumb-last"
                                      className="content"
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textPrimary"
                                    >
                                      <p
                                        aria-label="Breadcrumb-last"
                                        className="MuiTypography-root content MuiTypography-body1 MuiTypography-colorTextPrimary"
                                      >
                                        <span
                                          className="displayContent"
                                        >
                                          <i>
                                            Datasets
                                          </i>
                                        </span>
                                      </p>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                </div>
                                <ForwardRef(Popper)
                                  anchorEl={
                                    <div
                                      class=""
                                    >
                                      <p
                                        aria-label="Breadcrumb-last"
                                        class="MuiTypography-root content MuiTypography-body1 MuiTypography-colorTextPrimary"
                                      >
                                        <span
                                          class="displayContent"
                                        >
                                          <i>
                                            Datasets
                                          </i>
                                        </span>
                                      </p>
                                    </div>
                                  }
                                  className="MuiTooltip-popper makeStyles-popper-435"
                                  id={null}
                                  open={false}
                                  placement="bottom"
                                  popperOptions={
                                    Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    }
                                  }
                                  transition={true}
                                />
                              </ForwardRef(Tooltip)>
                            </WithStyles(ForwardRef(Tooltip))>
                          </ArrowTooltip>
                        </li>
                      </StyledBreadcrumb>
                    </div>
                  </Route>
                </div>
              </ForwardRef(Paper)>
            </WithStyles(ForwardRef(Paper))>
          </div>
        </PageBreadcrumbs>
      </Connect(PageBreadcrumbs)>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`PageBreadcrumbs - Snapshot Tests (Generic, DLS, ISIS) renders correctly for generic investigations route 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Connect(PageBreadcrumbs)>
        <PageBreadcrumbs
          apiUrl=""
          breadcrumbSettings={Object {}}
          dispatch={[Function]}
          location="/browse/investigation"
        >
          <div>
            <WithStyles(ForwardRef(Paper))
              elevation={0}
            >
              <ForwardRef(Paper)
                classes={
                  Object {
                    "elevation0": "MuiPaper-elevation0",
                    "elevation1": "MuiPaper-elevation1",
                    "elevation10": "MuiPaper-elevation10",
                    "elevation11": "MuiPaper-elevation11",
                    "elevation12": "MuiPaper-elevation12",
                    "elevation13": "MuiPaper-elevation13",
                    "elevation14": "MuiPaper-elevation14",
                    "elevation15": "MuiPaper-elevation15",
                    "elevation16": "MuiPaper-elevation16",
                    "elevation17": "MuiPaper-elevation17",
                    "elevation18": "MuiPaper-elevation18",
                    "elevation19": "MuiPaper-elevation19",
                    "elevation2": "MuiPaper-elevation2",
                    "elevation20": "MuiPaper-elevation20",
                    "elevation21": "MuiPaper-elevation21",
                    "elevation22": "MuiPaper-elevation22",
                    "elevation23": "MuiPaper-elevation23",
                    "elevation24": "MuiPaper-elevation24",
                    "elevation3": "MuiPaper-elevation3",
                    "elevation4": "MuiPaper-elevation4",
                    "elevation5": "MuiPaper-elevation5",
                    "elevation6": "MuiPaper-elevation6",
                    "elevation7": "MuiPaper-elevation7",
                    "elevation8": "MuiPaper-elevation8",
                    "elevation9": "MuiPaper-elevation9",
                    "root": "MuiPaper-root",
                    "rounded": "MuiPaper-rounded",
                  }
                }
                elevation={0}
              >
                <div
                  className="MuiPaper-root MuiPaper-elevation0 MuiPaper-rounded"
                >
                  <Route>
                    <div
                      className="breadcrumb"
                    >
                      <li>
                        <span
                          className="content"
                        >
                          <span
                            className="icon"
                          >
                            <ForwardRef>
                              <WithStyles(ForwardRef(SvgIcon))>
                                <ForwardRef(SvgIcon)
                                  classes={
                                    Object {
                                      "colorAction": "MuiSvgIcon-colorAction",
                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                      "colorError": "MuiSvgIcon-colorError",
                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                      "root": "MuiSvgIcon-root",
                                    }
                                  }
                                >
                                  <svg
                                    aria-hidden="true"
                                    className="MuiSvgIcon-root"
                                    focusable="false"
                                    role="presentation"
                                    viewBox="0 0 24 24"
                                  >
                                    <path
                                      d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"
                                    />
                                  </svg>
                                </ForwardRef(SvgIcon)>
                              </WithStyles(ForwardRef(SvgIcon))>
                            </ForwardRef>
                          </span>
                        </span>
                      </li>
                      <StyledBreadcrumb
                        ariaLabel="Breadcrumb-base"
                        displayName="Investigations"
                      >
                        <li>
                          <ArrowTooltip
                            title="Investigations"
                          >
                            <WithStyles(ForwardRef(Tooltip))
                              PopperProps={
                                Object {
                                  "popperOptions": Object {
                                    "modifiers": Object {
                                      "arrow": Object {
                                        "element": null,
                                        "enabled": false,
                                      },
                                    },
                                  },
                                }
                              }
                              classes={
                                Object {
                                  "popper": "makeStyles-popper-38",
                                  "tooltip": "makeStyles-tooltip-37",
                                }
                              }
                              disableHoverListener={true}
                              title={
                                <React.Fragment>
                                  Investigations
                                  <span
                                    className="makeStyles-arrow-39"
                                  />
                                </React.Fragment>
                              }
                            >
                              <ForwardRef(Tooltip)
                                PopperProps={
                                  Object {
                                    "popperOptions": Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    },
                                  }
                                }
                                classes={
                                  Object {
                                    "popper": "MuiTooltip-popper makeStyles-popper-38",
                                    "popperInteractive": "MuiTooltip-popperInteractive",
                                    "tooltip": "MuiTooltip-tooltip makeStyles-tooltip-37",
                                    "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                    "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                    "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                    "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                    "touch": "MuiTooltip-touch",
                                  }
                                }
                                disableHoverListener={true}
                                title={
                                  <React.Fragment>
                                    Investigations
                                    <span
                                      className="makeStyles-arrow-39"
                                    />
                                  </React.Fragment>
                                }
                              >
                                <div
                                  aria-describedby={null}
                                  className=""
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchStart={[Function]}
                                  title={null}
                                >
                                  <WithStyles(ForwardRef(Typography))
                                    aria-label="Breadcrumb-base"
                                    className="content"
                                    color="textPrimary"
                                  >
                                    <ForwardRef(Typography)
                                      aria-label="Breadcrumb-base"
                                      className="content"
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textPrimary"
                                    >
                                      <p
                                        aria-label="Breadcrumb-base"
                                        className="MuiTypography-root content MuiTypography-body1 MuiTypography-colorTextPrimary"
                                      >
                                        <span
                                          className="displayContent"
                                        >
                                          Investigations
                                        </span>
                                      </p>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                </div>
                                <ForwardRef(Popper)
                                  anchorEl={
                                    <div
                                      class=""
                                    >
                                      <p
                                        aria-label="Breadcrumb-base"
                                        class="MuiTypography-root content MuiTypography-body1 MuiTypography-colorTextPrimary"
                                      >
                                        <span
                                          class="displayContent"
                                        >
                                          Investigations
                                        </span>
                                      </p>
                                    </div>
                                  }
                                  className="MuiTooltip-popper makeStyles-popper-38"
                                  id={null}
                                  open={false}
                                  placement="bottom"
                                  popperOptions={
                                    Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    }
                                  }
                                  transition={true}
                                />
                              </ForwardRef(Tooltip)>
                            </WithStyles(ForwardRef(Tooltip))>
                          </ArrowTooltip>
                        </li>
                      </StyledBreadcrumb>
                    </div>
                  </Route>
                </div>
              </ForwardRef(Paper)>
            </WithStyles(ForwardRef(Paper))>
          </div>
        </PageBreadcrumbs>
      </Connect(PageBreadcrumbs)>
    </Router>
  </MemoryRouter>
</Provider>
`;
