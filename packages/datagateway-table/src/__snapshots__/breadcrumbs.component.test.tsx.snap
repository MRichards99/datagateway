// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PageBreadcrumbs - Snapshot Tests (Generic, ISIS, DLS) renders correctly for DLS datafiles route 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Connect(PageBreadcrumbs)>
        <PageBreadcrumbs
          apiUrl=""
          dispatch={[Function]}
          location="/browse/proposal/INVESTIGATION 1/investigation/1/dataset/1/datafile"
        >
          <div>
            <WithStyles(ForwardRef(Paper))
              elevation={0}
            >
              <ForwardRef(Paper)
                classes={
                  Object {
                    "elevation0": "MuiPaper-elevation0",
                    "elevation1": "MuiPaper-elevation1",
                    "elevation10": "MuiPaper-elevation10",
                    "elevation11": "MuiPaper-elevation11",
                    "elevation12": "MuiPaper-elevation12",
                    "elevation13": "MuiPaper-elevation13",
                    "elevation14": "MuiPaper-elevation14",
                    "elevation15": "MuiPaper-elevation15",
                    "elevation16": "MuiPaper-elevation16",
                    "elevation17": "MuiPaper-elevation17",
                    "elevation18": "MuiPaper-elevation18",
                    "elevation19": "MuiPaper-elevation19",
                    "elevation2": "MuiPaper-elevation2",
                    "elevation20": "MuiPaper-elevation20",
                    "elevation21": "MuiPaper-elevation21",
                    "elevation22": "MuiPaper-elevation22",
                    "elevation23": "MuiPaper-elevation23",
                    "elevation24": "MuiPaper-elevation24",
                    "elevation3": "MuiPaper-elevation3",
                    "elevation4": "MuiPaper-elevation4",
                    "elevation5": "MuiPaper-elevation5",
                    "elevation6": "MuiPaper-elevation6",
                    "elevation7": "MuiPaper-elevation7",
                    "elevation8": "MuiPaper-elevation8",
                    "elevation9": "MuiPaper-elevation9",
                    "root": "MuiPaper-root",
                    "rounded": "MuiPaper-rounded",
                  }
                }
                elevation={0}
              >
                <div
                  className="MuiPaper-root MuiPaper-elevation0 MuiPaper-rounded"
                >
                  <Route>
                    <WithStyles(ForwardRef(Breadcrumbs))
                      aria-label="Breadcrumb"
                      separator={
                        <Memo(NavigateNextIcon)
                          fontSize="small"
                        />
                      }
                    >
                      <ForwardRef(Breadcrumbs)
                        aria-label="Breadcrumb"
                        classes={
                          Object {
                            "li": "MuiBreadcrumbs-li",
                            "ol": "MuiBreadcrumbs-ol",
                            "root": "MuiBreadcrumbs-root",
                            "separator": "MuiBreadcrumbs-separator",
                          }
                        }
                        separator={
                          <Memo(NavigateNextIcon)
                            fontSize="small"
                          />
                        }
                      >
                        <WithStyles(ForwardRef(Typography))
                          aria-label="Breadcrumb"
                          className="MuiBreadcrumbs-root"
                          color="textSecondary"
                          component="nav"
                        >
                          <ForwardRef(Typography)
                            aria-label="Breadcrumb"
                            className="MuiBreadcrumbs-root"
                            classes={
                              Object {
                                "alignCenter": "MuiTypography-alignCenter",
                                "alignJustify": "MuiTypography-alignJustify",
                                "alignLeft": "MuiTypography-alignLeft",
                                "alignRight": "MuiTypography-alignRight",
                                "body1": "MuiTypography-body1",
                                "body2": "MuiTypography-body2",
                                "button": "MuiTypography-button",
                                "caption": "MuiTypography-caption",
                                "colorError": "MuiTypography-colorError",
                                "colorInherit": "MuiTypography-colorInherit",
                                "colorPrimary": "MuiTypography-colorPrimary",
                                "colorSecondary": "MuiTypography-colorSecondary",
                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                "displayBlock": "MuiTypography-displayBlock",
                                "displayInline": "MuiTypography-displayInline",
                                "gutterBottom": "MuiTypography-gutterBottom",
                                "h1": "MuiTypography-h1",
                                "h2": "MuiTypography-h2",
                                "h3": "MuiTypography-h3",
                                "h4": "MuiTypography-h4",
                                "h5": "MuiTypography-h5",
                                "h6": "MuiTypography-h6",
                                "noWrap": "MuiTypography-noWrap",
                                "overline": "MuiTypography-overline",
                                "paragraph": "MuiTypography-paragraph",
                                "root": "MuiTypography-root",
                                "srOnly": "MuiTypography-srOnly",
                                "subtitle1": "MuiTypography-subtitle1",
                                "subtitle2": "MuiTypography-subtitle2",
                              }
                            }
                            color="textSecondary"
                            component="nav"
                          >
                            <nav
                              aria-label="Breadcrumb"
                              className="MuiTypography-root MuiBreadcrumbs-root MuiTypography-body1 MuiTypography-colorTextSecondary"
                            >
                              <ol
                                className="MuiBreadcrumbs-ol"
                              >
                                <li
                                  className="MuiBreadcrumbs-li"
                                  key="child-0"
                                >
                                  <WithStyles(ForwardRef(Link))
                                    component={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "displayName": "Link",
                                        "propTypes": Object {
                                          "innerRef": [Function],
                                          "onClick": [Function],
                                          "replace": [Function],
                                          "target": [Function],
                                          "to": [Function],
                                        },
                                        "render": [Function],
                                      }
                                    }
                                    key=".$base-proposal"
                                    to="/browse/proposal"
                                  >
                                    <ForwardRef(Link)
                                      classes={
                                        Object {
                                          "button": "MuiLink-button",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiLink-root",
                                          "underlineAlways": "MuiLink-underlineAlways",
                                          "underlineHover": "MuiLink-underlineHover",
                                          "underlineNone": "MuiLink-underlineNone",
                                        }
                                      }
                                      component={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "displayName": "Link",
                                          "propTypes": Object {
                                            "innerRef": [Function],
                                            "onClick": [Function],
                                            "replace": [Function],
                                            "target": [Function],
                                            "to": [Function],
                                          },
                                          "render": [Function],
                                        }
                                      }
                                      to="/browse/proposal"
                                    >
                                      <WithStyles(ForwardRef(Typography))
                                        className="MuiLink-root MuiLink-underlineHover"
                                        color="primary"
                                        component={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "displayName": "Link",
                                            "propTypes": Object {
                                              "innerRef": [Function],
                                              "onClick": [Function],
                                              "replace": [Function],
                                              "target": [Function],
                                              "to": [Function],
                                            },
                                            "render": [Function],
                                          }
                                        }
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        to="/browse/proposal"
                                        variant="inherit"
                                      >
                                        <ForwardRef(Typography)
                                          className="MuiLink-root MuiLink-underlineHover"
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter",
                                              "alignJustify": "MuiTypography-alignJustify",
                                              "alignLeft": "MuiTypography-alignLeft",
                                              "alignRight": "MuiTypography-alignRight",
                                              "body1": "MuiTypography-body1",
                                              "body2": "MuiTypography-body2",
                                              "button": "MuiTypography-button",
                                              "caption": "MuiTypography-caption",
                                              "colorError": "MuiTypography-colorError",
                                              "colorInherit": "MuiTypography-colorInherit",
                                              "colorPrimary": "MuiTypography-colorPrimary",
                                              "colorSecondary": "MuiTypography-colorSecondary",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                              "displayBlock": "MuiTypography-displayBlock",
                                              "displayInline": "MuiTypography-displayInline",
                                              "gutterBottom": "MuiTypography-gutterBottom",
                                              "h1": "MuiTypography-h1",
                                              "h2": "MuiTypography-h2",
                                              "h3": "MuiTypography-h3",
                                              "h4": "MuiTypography-h4",
                                              "h5": "MuiTypography-h5",
                                              "h6": "MuiTypography-h6",
                                              "noWrap": "MuiTypography-noWrap",
                                              "overline": "MuiTypography-overline",
                                              "paragraph": "MuiTypography-paragraph",
                                              "root": "MuiTypography-root",
                                              "srOnly": "MuiTypography-srOnly",
                                              "subtitle1": "MuiTypography-subtitle1",
                                              "subtitle2": "MuiTypography-subtitle2",
                                            }
                                          }
                                          color="primary"
                                          component={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "displayName": "Link",
                                              "propTypes": Object {
                                                "innerRef": [Function],
                                                "onClick": [Function],
                                                "replace": [Function],
                                                "target": [Function],
                                                "to": [Function],
                                              },
                                              "render": [Function],
                                            }
                                          }
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          to="/browse/proposal"
                                          variant="inherit"
                                        >
                                          <Link
                                            className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            to="/browse/proposal"
                                          >
                                            <LinkAnchor
                                              className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                              href="/browse/proposal"
                                              navigate={[Function]}
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                            >
                                              <a
                                                className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                                href="/browse/proposal"
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                              >
                                                Proposals
                                              </a>
                                            </LinkAnchor>
                                          </Link>
                                        </ForwardRef(Typography)>
                                      </WithStyles(ForwardRef(Typography))>
                                    </ForwardRef(Link)>
                                  </WithStyles(ForwardRef(Link))>
                                </li>
                                <WithStyles(BreadcrumbSeparator)
                                  className="MuiBreadcrumbs-separator"
                                  key="separator-0"
                                >
                                  <BreadcrumbSeparator
                                    className="MuiBreadcrumbs-separator"
                                    classes={
                                      Object {
                                        "root": "PrivateBreadcrumbSeparator-root-790",
                                      }
                                    }
                                  >
                                    <li
                                      aria-hidden={true}
                                      className="PrivateBreadcrumbSeparator-root-790 MuiBreadcrumbs-separator"
                                    >
                                      <ForwardRef
                                        fontSize="small"
                                      >
                                        <WithStyles(ForwardRef(SvgIcon))
                                          fontSize="small"
                                        >
                                          <ForwardRef(SvgIcon)
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                            fontSize="small"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef>
                                    </li>
                                  </BreadcrumbSeparator>
                                </WithStyles(BreadcrumbSeparator)>
                                <li
                                  className="MuiBreadcrumbs-li"
                                  key="child-1"
                                >
                                  <WithStyles(ForwardRef(Link))
                                    component={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "displayName": "Link",
                                        "propTypes": Object {
                                          "innerRef": [Function],
                                          "onClick": [Function],
                                          "replace": [Function],
                                          "target": [Function],
                                          "to": [Function],
                                        },
                                        "render": [Function],
                                      }
                                    }
                                    key=".1:$INVESTIGATION 1"
                                    to="/browse/proposal/INVESTIGATION 1/investigation"
                                  >
                                    <ForwardRef(Link)
                                      classes={
                                        Object {
                                          "button": "MuiLink-button",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiLink-root",
                                          "underlineAlways": "MuiLink-underlineAlways",
                                          "underlineHover": "MuiLink-underlineHover",
                                          "underlineNone": "MuiLink-underlineNone",
                                        }
                                      }
                                      component={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "displayName": "Link",
                                          "propTypes": Object {
                                            "innerRef": [Function],
                                            "onClick": [Function],
                                            "replace": [Function],
                                            "target": [Function],
                                            "to": [Function],
                                          },
                                          "render": [Function],
                                        }
                                      }
                                      to="/browse/proposal/INVESTIGATION 1/investigation"
                                    >
                                      <WithStyles(ForwardRef(Typography))
                                        className="MuiLink-root MuiLink-underlineHover"
                                        color="primary"
                                        component={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "displayName": "Link",
                                            "propTypes": Object {
                                              "innerRef": [Function],
                                              "onClick": [Function],
                                              "replace": [Function],
                                              "target": [Function],
                                              "to": [Function],
                                            },
                                            "render": [Function],
                                          }
                                        }
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        to="/browse/proposal/INVESTIGATION 1/investigation"
                                        variant="inherit"
                                      >
                                        <ForwardRef(Typography)
                                          className="MuiLink-root MuiLink-underlineHover"
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter",
                                              "alignJustify": "MuiTypography-alignJustify",
                                              "alignLeft": "MuiTypography-alignLeft",
                                              "alignRight": "MuiTypography-alignRight",
                                              "body1": "MuiTypography-body1",
                                              "body2": "MuiTypography-body2",
                                              "button": "MuiTypography-button",
                                              "caption": "MuiTypography-caption",
                                              "colorError": "MuiTypography-colorError",
                                              "colorInherit": "MuiTypography-colorInherit",
                                              "colorPrimary": "MuiTypography-colorPrimary",
                                              "colorSecondary": "MuiTypography-colorSecondary",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                              "displayBlock": "MuiTypography-displayBlock",
                                              "displayInline": "MuiTypography-displayInline",
                                              "gutterBottom": "MuiTypography-gutterBottom",
                                              "h1": "MuiTypography-h1",
                                              "h2": "MuiTypography-h2",
                                              "h3": "MuiTypography-h3",
                                              "h4": "MuiTypography-h4",
                                              "h5": "MuiTypography-h5",
                                              "h6": "MuiTypography-h6",
                                              "noWrap": "MuiTypography-noWrap",
                                              "overline": "MuiTypography-overline",
                                              "paragraph": "MuiTypography-paragraph",
                                              "root": "MuiTypography-root",
                                              "srOnly": "MuiTypography-srOnly",
                                              "subtitle1": "MuiTypography-subtitle1",
                                              "subtitle2": "MuiTypography-subtitle2",
                                            }
                                          }
                                          color="primary"
                                          component={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "displayName": "Link",
                                              "propTypes": Object {
                                                "innerRef": [Function],
                                                "onClick": [Function],
                                                "replace": [Function],
                                                "target": [Function],
                                                "to": [Function],
                                              },
                                              "render": [Function],
                                            }
                                          }
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          to="/browse/proposal/INVESTIGATION 1/investigation"
                                          variant="inherit"
                                        >
                                          <Link
                                            className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            to="/browse/proposal/INVESTIGATION 1/investigation"
                                          >
                                            <LinkAnchor
                                              className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                              href="/browse/proposal/INVESTIGATION 1/investigation"
                                              navigate={[Function]}
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                            >
                                              <a
                                                className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                                href="/browse/proposal/INVESTIGATION 1/investigation"
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                              >
                                                Test 1
                                              </a>
                                            </LinkAnchor>
                                          </Link>
                                        </ForwardRef(Typography)>
                                      </WithStyles(ForwardRef(Typography))>
                                    </ForwardRef(Link)>
                                  </WithStyles(ForwardRef(Link))>
                                </li>
                                <WithStyles(BreadcrumbSeparator)
                                  className="MuiBreadcrumbs-separator"
                                  key="separator-1"
                                >
                                  <BreadcrumbSeparator
                                    className="MuiBreadcrumbs-separator"
                                    classes={
                                      Object {
                                        "root": "PrivateBreadcrumbSeparator-root-790",
                                      }
                                    }
                                  >
                                    <li
                                      aria-hidden={true}
                                      className="PrivateBreadcrumbSeparator-root-790 MuiBreadcrumbs-separator"
                                    >
                                      <ForwardRef
                                        fontSize="small"
                                      >
                                        <WithStyles(ForwardRef(SvgIcon))
                                          fontSize="small"
                                        >
                                          <ForwardRef(SvgIcon)
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                            fontSize="small"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef>
                                    </li>
                                  </BreadcrumbSeparator>
                                </WithStyles(BreadcrumbSeparator)>
                                <li
                                  className="MuiBreadcrumbs-li"
                                  key="child-2"
                                >
                                  <WithStyles(ForwardRef(Link))
                                    component={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "displayName": "Link",
                                        "propTypes": Object {
                                          "innerRef": [Function],
                                          "onClick": [Function],
                                          "replace": [Function],
                                          "target": [Function],
                                          "to": [Function],
                                        },
                                        "render": [Function],
                                      }
                                    }
                                    key=".1:$1"
                                    to="/browse/proposal/INVESTIGATION 1/investigation/1/dataset"
                                  >
                                    <ForwardRef(Link)
                                      classes={
                                        Object {
                                          "button": "MuiLink-button",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiLink-root",
                                          "underlineAlways": "MuiLink-underlineAlways",
                                          "underlineHover": "MuiLink-underlineHover",
                                          "underlineNone": "MuiLink-underlineNone",
                                        }
                                      }
                                      component={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "displayName": "Link",
                                          "propTypes": Object {
                                            "innerRef": [Function],
                                            "onClick": [Function],
                                            "replace": [Function],
                                            "target": [Function],
                                            "to": [Function],
                                          },
                                          "render": [Function],
                                        }
                                      }
                                      to="/browse/proposal/INVESTIGATION 1/investigation/1/dataset"
                                    >
                                      <WithStyles(ForwardRef(Typography))
                                        className="MuiLink-root MuiLink-underlineHover"
                                        color="primary"
                                        component={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "displayName": "Link",
                                            "propTypes": Object {
                                              "innerRef": [Function],
                                              "onClick": [Function],
                                              "replace": [Function],
                                              "target": [Function],
                                              "to": [Function],
                                            },
                                            "render": [Function],
                                          }
                                        }
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        to="/browse/proposal/INVESTIGATION 1/investigation/1/dataset"
                                        variant="inherit"
                                      >
                                        <ForwardRef(Typography)
                                          className="MuiLink-root MuiLink-underlineHover"
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter",
                                              "alignJustify": "MuiTypography-alignJustify",
                                              "alignLeft": "MuiTypography-alignLeft",
                                              "alignRight": "MuiTypography-alignRight",
                                              "body1": "MuiTypography-body1",
                                              "body2": "MuiTypography-body2",
                                              "button": "MuiTypography-button",
                                              "caption": "MuiTypography-caption",
                                              "colorError": "MuiTypography-colorError",
                                              "colorInherit": "MuiTypography-colorInherit",
                                              "colorPrimary": "MuiTypography-colorPrimary",
                                              "colorSecondary": "MuiTypography-colorSecondary",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                              "displayBlock": "MuiTypography-displayBlock",
                                              "displayInline": "MuiTypography-displayInline",
                                              "gutterBottom": "MuiTypography-gutterBottom",
                                              "h1": "MuiTypography-h1",
                                              "h2": "MuiTypography-h2",
                                              "h3": "MuiTypography-h3",
                                              "h4": "MuiTypography-h4",
                                              "h5": "MuiTypography-h5",
                                              "h6": "MuiTypography-h6",
                                              "noWrap": "MuiTypography-noWrap",
                                              "overline": "MuiTypography-overline",
                                              "paragraph": "MuiTypography-paragraph",
                                              "root": "MuiTypography-root",
                                              "srOnly": "MuiTypography-srOnly",
                                              "subtitle1": "MuiTypography-subtitle1",
                                              "subtitle2": "MuiTypography-subtitle2",
                                            }
                                          }
                                          color="primary"
                                          component={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "displayName": "Link",
                                              "propTypes": Object {
                                                "innerRef": [Function],
                                                "onClick": [Function],
                                                "replace": [Function],
                                                "target": [Function],
                                                "to": [Function],
                                              },
                                              "render": [Function],
                                            }
                                          }
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          to="/browse/proposal/INVESTIGATION 1/investigation/1/dataset"
                                          variant="inherit"
                                        >
                                          <Link
                                            className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            to="/browse/proposal/INVESTIGATION 1/investigation/1/dataset"
                                          >
                                            <LinkAnchor
                                              className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                              href="/browse/proposal/INVESTIGATION 1/investigation/1/dataset"
                                              navigate={[Function]}
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                            >
                                              <a
                                                className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                                href="/browse/proposal/INVESTIGATION 1/investigation/1/dataset"
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                              >
                                                1
                                              </a>
                                            </LinkAnchor>
                                          </Link>
                                        </ForwardRef(Typography)>
                                      </WithStyles(ForwardRef(Typography))>
                                    </ForwardRef(Link)>
                                  </WithStyles(ForwardRef(Link))>
                                </li>
                                <WithStyles(BreadcrumbSeparator)
                                  className="MuiBreadcrumbs-separator"
                                  key="separator-2"
                                >
                                  <BreadcrumbSeparator
                                    className="MuiBreadcrumbs-separator"
                                    classes={
                                      Object {
                                        "root": "PrivateBreadcrumbSeparator-root-790",
                                      }
                                    }
                                  >
                                    <li
                                      aria-hidden={true}
                                      className="PrivateBreadcrumbSeparator-root-790 MuiBreadcrumbs-separator"
                                    >
                                      <ForwardRef
                                        fontSize="small"
                                      >
                                        <WithStyles(ForwardRef(SvgIcon))
                                          fontSize="small"
                                        >
                                          <ForwardRef(SvgIcon)
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                            fontSize="small"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef>
                                    </li>
                                  </BreadcrumbSeparator>
                                </WithStyles(BreadcrumbSeparator)>
                                <li
                                  className="MuiBreadcrumbs-li"
                                  key="child-3"
                                >
                                  <WithStyles(ForwardRef(Typography))
                                    color="textPrimary"
                                    key=".1:$1"
                                  >
                                    <ForwardRef(Typography)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textPrimary"
                                    >
                                      <p
                                        className="MuiTypography-root MuiTypography-body1 MuiTypography-colorTextPrimary"
                                      >
                                        INVESTIGATION 1
                                      </p>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                </li>
                                <WithStyles(BreadcrumbSeparator)
                                  className="MuiBreadcrumbs-separator"
                                  key="separator-3"
                                >
                                  <BreadcrumbSeparator
                                    className="MuiBreadcrumbs-separator"
                                    classes={
                                      Object {
                                        "root": "PrivateBreadcrumbSeparator-root-790",
                                      }
                                    }
                                  >
                                    <li
                                      aria-hidden={true}
                                      className="PrivateBreadcrumbSeparator-root-790 MuiBreadcrumbs-separator"
                                    >
                                      <ForwardRef
                                        fontSize="small"
                                      >
                                        <WithStyles(ForwardRef(SvgIcon))
                                          fontSize="small"
                                        >
                                          <ForwardRef(SvgIcon)
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                            fontSize="small"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef>
                                    </li>
                                  </BreadcrumbSeparator>
                                </WithStyles(BreadcrumbSeparator)>
                                <li
                                  className="MuiBreadcrumbs-li"
                                  key="child-4"
                                >
                                  <WithStyles(ForwardRef(Typography))
                                    color="textPrimary"
                                    key=".2"
                                  >
                                    <ForwardRef(Typography)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textPrimary"
                                    >
                                      <p
                                        className="MuiTypography-root MuiTypography-body1 MuiTypography-colorTextPrimary"
                                      >
                                        <i>
                                          Datafiles
                                        </i>
                                      </p>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                </li>
                              </ol>
                            </nav>
                          </ForwardRef(Typography)>
                        </WithStyles(ForwardRef(Typography))>
                      </ForwardRef(Breadcrumbs)>
                    </WithStyles(ForwardRef(Breadcrumbs))>
                  </Route>
                </div>
              </ForwardRef(Paper)>
            </WithStyles(ForwardRef(Paper))>
          </div>
        </PageBreadcrumbs>
      </Connect(PageBreadcrumbs)>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`PageBreadcrumbs - Snapshot Tests (Generic, ISIS, DLS) renders correctly for DLS datasets route 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Connect(PageBreadcrumbs)>
        <PageBreadcrumbs
          apiUrl=""
          dispatch={[Function]}
          location="/browse/proposal/INVESTIGATION 1/investigation/1/dataset"
        >
          <div>
            <WithStyles(ForwardRef(Paper))
              elevation={0}
            >
              <ForwardRef(Paper)
                classes={
                  Object {
                    "elevation0": "MuiPaper-elevation0",
                    "elevation1": "MuiPaper-elevation1",
                    "elevation10": "MuiPaper-elevation10",
                    "elevation11": "MuiPaper-elevation11",
                    "elevation12": "MuiPaper-elevation12",
                    "elevation13": "MuiPaper-elevation13",
                    "elevation14": "MuiPaper-elevation14",
                    "elevation15": "MuiPaper-elevation15",
                    "elevation16": "MuiPaper-elevation16",
                    "elevation17": "MuiPaper-elevation17",
                    "elevation18": "MuiPaper-elevation18",
                    "elevation19": "MuiPaper-elevation19",
                    "elevation2": "MuiPaper-elevation2",
                    "elevation20": "MuiPaper-elevation20",
                    "elevation21": "MuiPaper-elevation21",
                    "elevation22": "MuiPaper-elevation22",
                    "elevation23": "MuiPaper-elevation23",
                    "elevation24": "MuiPaper-elevation24",
                    "elevation3": "MuiPaper-elevation3",
                    "elevation4": "MuiPaper-elevation4",
                    "elevation5": "MuiPaper-elevation5",
                    "elevation6": "MuiPaper-elevation6",
                    "elevation7": "MuiPaper-elevation7",
                    "elevation8": "MuiPaper-elevation8",
                    "elevation9": "MuiPaper-elevation9",
                    "root": "MuiPaper-root",
                    "rounded": "MuiPaper-rounded",
                  }
                }
                elevation={0}
              >
                <div
                  className="MuiPaper-root MuiPaper-elevation0 MuiPaper-rounded"
                >
                  <Route>
                    <WithStyles(ForwardRef(Breadcrumbs))
                      aria-label="Breadcrumb"
                      separator={
                        <Memo(NavigateNextIcon)
                          fontSize="small"
                        />
                      }
                    >
                      <ForwardRef(Breadcrumbs)
                        aria-label="Breadcrumb"
                        classes={
                          Object {
                            "li": "MuiBreadcrumbs-li",
                            "ol": "MuiBreadcrumbs-ol",
                            "root": "MuiBreadcrumbs-root",
                            "separator": "MuiBreadcrumbs-separator",
                          }
                        }
                        separator={
                          <Memo(NavigateNextIcon)
                            fontSize="small"
                          />
                        }
                      >
                        <WithStyles(ForwardRef(Typography))
                          aria-label="Breadcrumb"
                          className="MuiBreadcrumbs-root"
                          color="textSecondary"
                          component="nav"
                        >
                          <ForwardRef(Typography)
                            aria-label="Breadcrumb"
                            className="MuiBreadcrumbs-root"
                            classes={
                              Object {
                                "alignCenter": "MuiTypography-alignCenter",
                                "alignJustify": "MuiTypography-alignJustify",
                                "alignLeft": "MuiTypography-alignLeft",
                                "alignRight": "MuiTypography-alignRight",
                                "body1": "MuiTypography-body1",
                                "body2": "MuiTypography-body2",
                                "button": "MuiTypography-button",
                                "caption": "MuiTypography-caption",
                                "colorError": "MuiTypography-colorError",
                                "colorInherit": "MuiTypography-colorInherit",
                                "colorPrimary": "MuiTypography-colorPrimary",
                                "colorSecondary": "MuiTypography-colorSecondary",
                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                "displayBlock": "MuiTypography-displayBlock",
                                "displayInline": "MuiTypography-displayInline",
                                "gutterBottom": "MuiTypography-gutterBottom",
                                "h1": "MuiTypography-h1",
                                "h2": "MuiTypography-h2",
                                "h3": "MuiTypography-h3",
                                "h4": "MuiTypography-h4",
                                "h5": "MuiTypography-h5",
                                "h6": "MuiTypography-h6",
                                "noWrap": "MuiTypography-noWrap",
                                "overline": "MuiTypography-overline",
                                "paragraph": "MuiTypography-paragraph",
                                "root": "MuiTypography-root",
                                "srOnly": "MuiTypography-srOnly",
                                "subtitle1": "MuiTypography-subtitle1",
                                "subtitle2": "MuiTypography-subtitle2",
                              }
                            }
                            color="textSecondary"
                            component="nav"
                          >
                            <nav
                              aria-label="Breadcrumb"
                              className="MuiTypography-root MuiBreadcrumbs-root MuiTypography-body1 MuiTypography-colorTextSecondary"
                            >
                              <ol
                                className="MuiBreadcrumbs-ol"
                              >
                                <li
                                  className="MuiBreadcrumbs-li"
                                  key="child-0"
                                >
                                  <WithStyles(ForwardRef(Link))
                                    component={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "displayName": "Link",
                                        "propTypes": Object {
                                          "innerRef": [Function],
                                          "onClick": [Function],
                                          "replace": [Function],
                                          "target": [Function],
                                          "to": [Function],
                                        },
                                        "render": [Function],
                                      }
                                    }
                                    key=".$base-proposal"
                                    to="/browse/proposal"
                                  >
                                    <ForwardRef(Link)
                                      classes={
                                        Object {
                                          "button": "MuiLink-button",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiLink-root",
                                          "underlineAlways": "MuiLink-underlineAlways",
                                          "underlineHover": "MuiLink-underlineHover",
                                          "underlineNone": "MuiLink-underlineNone",
                                        }
                                      }
                                      component={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "displayName": "Link",
                                          "propTypes": Object {
                                            "innerRef": [Function],
                                            "onClick": [Function],
                                            "replace": [Function],
                                            "target": [Function],
                                            "to": [Function],
                                          },
                                          "render": [Function],
                                        }
                                      }
                                      to="/browse/proposal"
                                    >
                                      <WithStyles(ForwardRef(Typography))
                                        className="MuiLink-root MuiLink-underlineHover"
                                        color="primary"
                                        component={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "displayName": "Link",
                                            "propTypes": Object {
                                              "innerRef": [Function],
                                              "onClick": [Function],
                                              "replace": [Function],
                                              "target": [Function],
                                              "to": [Function],
                                            },
                                            "render": [Function],
                                          }
                                        }
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        to="/browse/proposal"
                                        variant="inherit"
                                      >
                                        <ForwardRef(Typography)
                                          className="MuiLink-root MuiLink-underlineHover"
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter",
                                              "alignJustify": "MuiTypography-alignJustify",
                                              "alignLeft": "MuiTypography-alignLeft",
                                              "alignRight": "MuiTypography-alignRight",
                                              "body1": "MuiTypography-body1",
                                              "body2": "MuiTypography-body2",
                                              "button": "MuiTypography-button",
                                              "caption": "MuiTypography-caption",
                                              "colorError": "MuiTypography-colorError",
                                              "colorInherit": "MuiTypography-colorInherit",
                                              "colorPrimary": "MuiTypography-colorPrimary",
                                              "colorSecondary": "MuiTypography-colorSecondary",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                              "displayBlock": "MuiTypography-displayBlock",
                                              "displayInline": "MuiTypography-displayInline",
                                              "gutterBottom": "MuiTypography-gutterBottom",
                                              "h1": "MuiTypography-h1",
                                              "h2": "MuiTypography-h2",
                                              "h3": "MuiTypography-h3",
                                              "h4": "MuiTypography-h4",
                                              "h5": "MuiTypography-h5",
                                              "h6": "MuiTypography-h6",
                                              "noWrap": "MuiTypography-noWrap",
                                              "overline": "MuiTypography-overline",
                                              "paragraph": "MuiTypography-paragraph",
                                              "root": "MuiTypography-root",
                                              "srOnly": "MuiTypography-srOnly",
                                              "subtitle1": "MuiTypography-subtitle1",
                                              "subtitle2": "MuiTypography-subtitle2",
                                            }
                                          }
                                          color="primary"
                                          component={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "displayName": "Link",
                                              "propTypes": Object {
                                                "innerRef": [Function],
                                                "onClick": [Function],
                                                "replace": [Function],
                                                "target": [Function],
                                                "to": [Function],
                                              },
                                              "render": [Function],
                                            }
                                          }
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          to="/browse/proposal"
                                          variant="inherit"
                                        >
                                          <Link
                                            className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            to="/browse/proposal"
                                          >
                                            <LinkAnchor
                                              className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                              href="/browse/proposal"
                                              navigate={[Function]}
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                            >
                                              <a
                                                className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                                href="/browse/proposal"
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                              >
                                                Proposals
                                              </a>
                                            </LinkAnchor>
                                          </Link>
                                        </ForwardRef(Typography)>
                                      </WithStyles(ForwardRef(Typography))>
                                    </ForwardRef(Link)>
                                  </WithStyles(ForwardRef(Link))>
                                </li>
                                <WithStyles(BreadcrumbSeparator)
                                  className="MuiBreadcrumbs-separator"
                                  key="separator-0"
                                >
                                  <BreadcrumbSeparator
                                    className="MuiBreadcrumbs-separator"
                                    classes={
                                      Object {
                                        "root": "PrivateBreadcrumbSeparator-root-559",
                                      }
                                    }
                                  >
                                    <li
                                      aria-hidden={true}
                                      className="PrivateBreadcrumbSeparator-root-559 MuiBreadcrumbs-separator"
                                    >
                                      <ForwardRef
                                        fontSize="small"
                                      >
                                        <WithStyles(ForwardRef(SvgIcon))
                                          fontSize="small"
                                        >
                                          <ForwardRef(SvgIcon)
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                            fontSize="small"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef>
                                    </li>
                                  </BreadcrumbSeparator>
                                </WithStyles(BreadcrumbSeparator)>
                                <li
                                  className="MuiBreadcrumbs-li"
                                  key="child-1"
                                >
                                  <WithStyles(ForwardRef(Link))
                                    component={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "displayName": "Link",
                                        "propTypes": Object {
                                          "innerRef": [Function],
                                          "onClick": [Function],
                                          "replace": [Function],
                                          "target": [Function],
                                          "to": [Function],
                                        },
                                        "render": [Function],
                                      }
                                    }
                                    key=".1:$INVESTIGATION 1"
                                    to="/browse/proposal/INVESTIGATION 1/investigation"
                                  >
                                    <ForwardRef(Link)
                                      classes={
                                        Object {
                                          "button": "MuiLink-button",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiLink-root",
                                          "underlineAlways": "MuiLink-underlineAlways",
                                          "underlineHover": "MuiLink-underlineHover",
                                          "underlineNone": "MuiLink-underlineNone",
                                        }
                                      }
                                      component={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "displayName": "Link",
                                          "propTypes": Object {
                                            "innerRef": [Function],
                                            "onClick": [Function],
                                            "replace": [Function],
                                            "target": [Function],
                                            "to": [Function],
                                          },
                                          "render": [Function],
                                        }
                                      }
                                      to="/browse/proposal/INVESTIGATION 1/investigation"
                                    >
                                      <WithStyles(ForwardRef(Typography))
                                        className="MuiLink-root MuiLink-underlineHover"
                                        color="primary"
                                        component={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "displayName": "Link",
                                            "propTypes": Object {
                                              "innerRef": [Function],
                                              "onClick": [Function],
                                              "replace": [Function],
                                              "target": [Function],
                                              "to": [Function],
                                            },
                                            "render": [Function],
                                          }
                                        }
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        to="/browse/proposal/INVESTIGATION 1/investigation"
                                        variant="inherit"
                                      >
                                        <ForwardRef(Typography)
                                          className="MuiLink-root MuiLink-underlineHover"
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter",
                                              "alignJustify": "MuiTypography-alignJustify",
                                              "alignLeft": "MuiTypography-alignLeft",
                                              "alignRight": "MuiTypography-alignRight",
                                              "body1": "MuiTypography-body1",
                                              "body2": "MuiTypography-body2",
                                              "button": "MuiTypography-button",
                                              "caption": "MuiTypography-caption",
                                              "colorError": "MuiTypography-colorError",
                                              "colorInherit": "MuiTypography-colorInherit",
                                              "colorPrimary": "MuiTypography-colorPrimary",
                                              "colorSecondary": "MuiTypography-colorSecondary",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                              "displayBlock": "MuiTypography-displayBlock",
                                              "displayInline": "MuiTypography-displayInline",
                                              "gutterBottom": "MuiTypography-gutterBottom",
                                              "h1": "MuiTypography-h1",
                                              "h2": "MuiTypography-h2",
                                              "h3": "MuiTypography-h3",
                                              "h4": "MuiTypography-h4",
                                              "h5": "MuiTypography-h5",
                                              "h6": "MuiTypography-h6",
                                              "noWrap": "MuiTypography-noWrap",
                                              "overline": "MuiTypography-overline",
                                              "paragraph": "MuiTypography-paragraph",
                                              "root": "MuiTypography-root",
                                              "srOnly": "MuiTypography-srOnly",
                                              "subtitle1": "MuiTypography-subtitle1",
                                              "subtitle2": "MuiTypography-subtitle2",
                                            }
                                          }
                                          color="primary"
                                          component={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "displayName": "Link",
                                              "propTypes": Object {
                                                "innerRef": [Function],
                                                "onClick": [Function],
                                                "replace": [Function],
                                                "target": [Function],
                                                "to": [Function],
                                              },
                                              "render": [Function],
                                            }
                                          }
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          to="/browse/proposal/INVESTIGATION 1/investigation"
                                          variant="inherit"
                                        >
                                          <Link
                                            className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            to="/browse/proposal/INVESTIGATION 1/investigation"
                                          >
                                            <LinkAnchor
                                              className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                              href="/browse/proposal/INVESTIGATION 1/investigation"
                                              navigate={[Function]}
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                            >
                                              <a
                                                className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                                href="/browse/proposal/INVESTIGATION 1/investigation"
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                              >
                                                Test 1
                                              </a>
                                            </LinkAnchor>
                                          </Link>
                                        </ForwardRef(Typography)>
                                      </WithStyles(ForwardRef(Typography))>
                                    </ForwardRef(Link)>
                                  </WithStyles(ForwardRef(Link))>
                                </li>
                                <WithStyles(BreadcrumbSeparator)
                                  className="MuiBreadcrumbs-separator"
                                  key="separator-1"
                                >
                                  <BreadcrumbSeparator
                                    className="MuiBreadcrumbs-separator"
                                    classes={
                                      Object {
                                        "root": "PrivateBreadcrumbSeparator-root-559",
                                      }
                                    }
                                  >
                                    <li
                                      aria-hidden={true}
                                      className="PrivateBreadcrumbSeparator-root-559 MuiBreadcrumbs-separator"
                                    >
                                      <ForwardRef
                                        fontSize="small"
                                      >
                                        <WithStyles(ForwardRef(SvgIcon))
                                          fontSize="small"
                                        >
                                          <ForwardRef(SvgIcon)
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                            fontSize="small"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef>
                                    </li>
                                  </BreadcrumbSeparator>
                                </WithStyles(BreadcrumbSeparator)>
                                <li
                                  className="MuiBreadcrumbs-li"
                                  key="child-2"
                                >
                                  <WithStyles(ForwardRef(Typography))
                                    color="textPrimary"
                                    key=".1:$1"
                                  >
                                    <ForwardRef(Typography)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textPrimary"
                                    >
                                      <p
                                        className="MuiTypography-root MuiTypography-body1 MuiTypography-colorTextPrimary"
                                      >
                                        1
                                      </p>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                </li>
                                <WithStyles(BreadcrumbSeparator)
                                  className="MuiBreadcrumbs-separator"
                                  key="separator-2"
                                >
                                  <BreadcrumbSeparator
                                    className="MuiBreadcrumbs-separator"
                                    classes={
                                      Object {
                                        "root": "PrivateBreadcrumbSeparator-root-559",
                                      }
                                    }
                                  >
                                    <li
                                      aria-hidden={true}
                                      className="PrivateBreadcrumbSeparator-root-559 MuiBreadcrumbs-separator"
                                    >
                                      <ForwardRef
                                        fontSize="small"
                                      >
                                        <WithStyles(ForwardRef(SvgIcon))
                                          fontSize="small"
                                        >
                                          <ForwardRef(SvgIcon)
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                            fontSize="small"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef>
                                    </li>
                                  </BreadcrumbSeparator>
                                </WithStyles(BreadcrumbSeparator)>
                                <li
                                  className="MuiBreadcrumbs-li"
                                  key="child-3"
                                >
                                  <WithStyles(ForwardRef(Typography))
                                    color="textPrimary"
                                    key=".2"
                                  >
                                    <ForwardRef(Typography)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textPrimary"
                                    >
                                      <p
                                        className="MuiTypography-root MuiTypography-body1 MuiTypography-colorTextPrimary"
                                      >
                                        <i>
                                          Datasets
                                        </i>
                                      </p>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                </li>
                              </ol>
                            </nav>
                          </ForwardRef(Typography)>
                        </WithStyles(ForwardRef(Typography))>
                      </ForwardRef(Breadcrumbs)>
                    </WithStyles(ForwardRef(Breadcrumbs))>
                  </Route>
                </div>
              </ForwardRef(Paper)>
            </WithStyles(ForwardRef(Paper))>
          </div>
        </PageBreadcrumbs>
      </Connect(PageBreadcrumbs)>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`PageBreadcrumbs - Snapshot Tests (Generic, ISIS, DLS) renders correctly for DLS investigations route 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Connect(PageBreadcrumbs)>
        <PageBreadcrumbs
          apiUrl=""
          dispatch={[Function]}
          location="/browse/proposal/INVESTIGATION 1/investigation"
        >
          <div>
            <WithStyles(ForwardRef(Paper))
              elevation={0}
            >
              <ForwardRef(Paper)
                classes={
                  Object {
                    "elevation0": "MuiPaper-elevation0",
                    "elevation1": "MuiPaper-elevation1",
                    "elevation10": "MuiPaper-elevation10",
                    "elevation11": "MuiPaper-elevation11",
                    "elevation12": "MuiPaper-elevation12",
                    "elevation13": "MuiPaper-elevation13",
                    "elevation14": "MuiPaper-elevation14",
                    "elevation15": "MuiPaper-elevation15",
                    "elevation16": "MuiPaper-elevation16",
                    "elevation17": "MuiPaper-elevation17",
                    "elevation18": "MuiPaper-elevation18",
                    "elevation19": "MuiPaper-elevation19",
                    "elevation2": "MuiPaper-elevation2",
                    "elevation20": "MuiPaper-elevation20",
                    "elevation21": "MuiPaper-elevation21",
                    "elevation22": "MuiPaper-elevation22",
                    "elevation23": "MuiPaper-elevation23",
                    "elevation24": "MuiPaper-elevation24",
                    "elevation3": "MuiPaper-elevation3",
                    "elevation4": "MuiPaper-elevation4",
                    "elevation5": "MuiPaper-elevation5",
                    "elevation6": "MuiPaper-elevation6",
                    "elevation7": "MuiPaper-elevation7",
                    "elevation8": "MuiPaper-elevation8",
                    "elevation9": "MuiPaper-elevation9",
                    "root": "MuiPaper-root",
                    "rounded": "MuiPaper-rounded",
                  }
                }
                elevation={0}
              >
                <div
                  className="MuiPaper-root MuiPaper-elevation0 MuiPaper-rounded"
                >
                  <Route>
                    <WithStyles(ForwardRef(Breadcrumbs))
                      aria-label="Breadcrumb"
                      separator={
                        <Memo(NavigateNextIcon)
                          fontSize="small"
                        />
                      }
                    >
                      <ForwardRef(Breadcrumbs)
                        aria-label="Breadcrumb"
                        classes={
                          Object {
                            "li": "MuiBreadcrumbs-li",
                            "ol": "MuiBreadcrumbs-ol",
                            "root": "MuiBreadcrumbs-root",
                            "separator": "MuiBreadcrumbs-separator",
                          }
                        }
                        separator={
                          <Memo(NavigateNextIcon)
                            fontSize="small"
                          />
                        }
                      >
                        <WithStyles(ForwardRef(Typography))
                          aria-label="Breadcrumb"
                          className="MuiBreadcrumbs-root"
                          color="textSecondary"
                          component="nav"
                        >
                          <ForwardRef(Typography)
                            aria-label="Breadcrumb"
                            className="MuiBreadcrumbs-root"
                            classes={
                              Object {
                                "alignCenter": "MuiTypography-alignCenter",
                                "alignJustify": "MuiTypography-alignJustify",
                                "alignLeft": "MuiTypography-alignLeft",
                                "alignRight": "MuiTypography-alignRight",
                                "body1": "MuiTypography-body1",
                                "body2": "MuiTypography-body2",
                                "button": "MuiTypography-button",
                                "caption": "MuiTypography-caption",
                                "colorError": "MuiTypography-colorError",
                                "colorInherit": "MuiTypography-colorInherit",
                                "colorPrimary": "MuiTypography-colorPrimary",
                                "colorSecondary": "MuiTypography-colorSecondary",
                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                "displayBlock": "MuiTypography-displayBlock",
                                "displayInline": "MuiTypography-displayInline",
                                "gutterBottom": "MuiTypography-gutterBottom",
                                "h1": "MuiTypography-h1",
                                "h2": "MuiTypography-h2",
                                "h3": "MuiTypography-h3",
                                "h4": "MuiTypography-h4",
                                "h5": "MuiTypography-h5",
                                "h6": "MuiTypography-h6",
                                "noWrap": "MuiTypography-noWrap",
                                "overline": "MuiTypography-overline",
                                "paragraph": "MuiTypography-paragraph",
                                "root": "MuiTypography-root",
                                "srOnly": "MuiTypography-srOnly",
                                "subtitle1": "MuiTypography-subtitle1",
                                "subtitle2": "MuiTypography-subtitle2",
                              }
                            }
                            color="textSecondary"
                            component="nav"
                          >
                            <nav
                              aria-label="Breadcrumb"
                              className="MuiTypography-root MuiBreadcrumbs-root MuiTypography-body1 MuiTypography-colorTextSecondary"
                            >
                              <ol
                                className="MuiBreadcrumbs-ol"
                              >
                                <li
                                  className="MuiBreadcrumbs-li"
                                  key="child-0"
                                >
                                  <WithStyles(ForwardRef(Link))
                                    component={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "displayName": "Link",
                                        "propTypes": Object {
                                          "innerRef": [Function],
                                          "onClick": [Function],
                                          "replace": [Function],
                                          "target": [Function],
                                          "to": [Function],
                                        },
                                        "render": [Function],
                                      }
                                    }
                                    key=".$base-proposal"
                                    to="/browse/proposal"
                                  >
                                    <ForwardRef(Link)
                                      classes={
                                        Object {
                                          "button": "MuiLink-button",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiLink-root",
                                          "underlineAlways": "MuiLink-underlineAlways",
                                          "underlineHover": "MuiLink-underlineHover",
                                          "underlineNone": "MuiLink-underlineNone",
                                        }
                                      }
                                      component={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "displayName": "Link",
                                          "propTypes": Object {
                                            "innerRef": [Function],
                                            "onClick": [Function],
                                            "replace": [Function],
                                            "target": [Function],
                                            "to": [Function],
                                          },
                                          "render": [Function],
                                        }
                                      }
                                      to="/browse/proposal"
                                    >
                                      <WithStyles(ForwardRef(Typography))
                                        className="MuiLink-root MuiLink-underlineHover"
                                        color="primary"
                                        component={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "displayName": "Link",
                                            "propTypes": Object {
                                              "innerRef": [Function],
                                              "onClick": [Function],
                                              "replace": [Function],
                                              "target": [Function],
                                              "to": [Function],
                                            },
                                            "render": [Function],
                                          }
                                        }
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        to="/browse/proposal"
                                        variant="inherit"
                                      >
                                        <ForwardRef(Typography)
                                          className="MuiLink-root MuiLink-underlineHover"
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter",
                                              "alignJustify": "MuiTypography-alignJustify",
                                              "alignLeft": "MuiTypography-alignLeft",
                                              "alignRight": "MuiTypography-alignRight",
                                              "body1": "MuiTypography-body1",
                                              "body2": "MuiTypography-body2",
                                              "button": "MuiTypography-button",
                                              "caption": "MuiTypography-caption",
                                              "colorError": "MuiTypography-colorError",
                                              "colorInherit": "MuiTypography-colorInherit",
                                              "colorPrimary": "MuiTypography-colorPrimary",
                                              "colorSecondary": "MuiTypography-colorSecondary",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                              "displayBlock": "MuiTypography-displayBlock",
                                              "displayInline": "MuiTypography-displayInline",
                                              "gutterBottom": "MuiTypography-gutterBottom",
                                              "h1": "MuiTypography-h1",
                                              "h2": "MuiTypography-h2",
                                              "h3": "MuiTypography-h3",
                                              "h4": "MuiTypography-h4",
                                              "h5": "MuiTypography-h5",
                                              "h6": "MuiTypography-h6",
                                              "noWrap": "MuiTypography-noWrap",
                                              "overline": "MuiTypography-overline",
                                              "paragraph": "MuiTypography-paragraph",
                                              "root": "MuiTypography-root",
                                              "srOnly": "MuiTypography-srOnly",
                                              "subtitle1": "MuiTypography-subtitle1",
                                              "subtitle2": "MuiTypography-subtitle2",
                                            }
                                          }
                                          color="primary"
                                          component={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "displayName": "Link",
                                              "propTypes": Object {
                                                "innerRef": [Function],
                                                "onClick": [Function],
                                                "replace": [Function],
                                                "target": [Function],
                                                "to": [Function],
                                              },
                                              "render": [Function],
                                            }
                                          }
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          to="/browse/proposal"
                                          variant="inherit"
                                        >
                                          <Link
                                            className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            to="/browse/proposal"
                                          >
                                            <LinkAnchor
                                              className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                              href="/browse/proposal"
                                              navigate={[Function]}
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                            >
                                              <a
                                                className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                                href="/browse/proposal"
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                              >
                                                Proposals
                                              </a>
                                            </LinkAnchor>
                                          </Link>
                                        </ForwardRef(Typography)>
                                      </WithStyles(ForwardRef(Typography))>
                                    </ForwardRef(Link)>
                                  </WithStyles(ForwardRef(Link))>
                                </li>
                                <WithStyles(BreadcrumbSeparator)
                                  className="MuiBreadcrumbs-separator"
                                  key="separator-0"
                                >
                                  <BreadcrumbSeparator
                                    className="MuiBreadcrumbs-separator"
                                    classes={
                                      Object {
                                        "root": "PrivateBreadcrumbSeparator-root-328",
                                      }
                                    }
                                  >
                                    <li
                                      aria-hidden={true}
                                      className="PrivateBreadcrumbSeparator-root-328 MuiBreadcrumbs-separator"
                                    >
                                      <ForwardRef
                                        fontSize="small"
                                      >
                                        <WithStyles(ForwardRef(SvgIcon))
                                          fontSize="small"
                                        >
                                          <ForwardRef(SvgIcon)
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                            fontSize="small"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef>
                                    </li>
                                  </BreadcrumbSeparator>
                                </WithStyles(BreadcrumbSeparator)>
                                <li
                                  className="MuiBreadcrumbs-li"
                                  key="child-1"
                                >
                                  <WithStyles(ForwardRef(Typography))
                                    color="textPrimary"
                                    key=".1:$INVESTIGATION 1"
                                  >
                                    <ForwardRef(Typography)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textPrimary"
                                    >
                                      <p
                                        className="MuiTypography-root MuiTypography-body1 MuiTypography-colorTextPrimary"
                                      >
                                        Test 1
                                      </p>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                </li>
                                <WithStyles(BreadcrumbSeparator)
                                  className="MuiBreadcrumbs-separator"
                                  key="separator-1"
                                >
                                  <BreadcrumbSeparator
                                    className="MuiBreadcrumbs-separator"
                                    classes={
                                      Object {
                                        "root": "PrivateBreadcrumbSeparator-root-328",
                                      }
                                    }
                                  >
                                    <li
                                      aria-hidden={true}
                                      className="PrivateBreadcrumbSeparator-root-328 MuiBreadcrumbs-separator"
                                    >
                                      <ForwardRef
                                        fontSize="small"
                                      >
                                        <WithStyles(ForwardRef(SvgIcon))
                                          fontSize="small"
                                        >
                                          <ForwardRef(SvgIcon)
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                            fontSize="small"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef>
                                    </li>
                                  </BreadcrumbSeparator>
                                </WithStyles(BreadcrumbSeparator)>
                                <li
                                  className="MuiBreadcrumbs-li"
                                  key="child-2"
                                >
                                  <WithStyles(ForwardRef(Typography))
                                    color="textPrimary"
                                    key=".2"
                                  >
                                    <ForwardRef(Typography)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textPrimary"
                                    >
                                      <p
                                        className="MuiTypography-root MuiTypography-body1 MuiTypography-colorTextPrimary"
                                      >
                                        <i>
                                          Investigations
                                        </i>
                                      </p>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                </li>
                              </ol>
                            </nav>
                          </ForwardRef(Typography)>
                        </WithStyles(ForwardRef(Typography))>
                      </ForwardRef(Breadcrumbs)>
                    </WithStyles(ForwardRef(Breadcrumbs))>
                  </Route>
                </div>
              </ForwardRef(Paper)>
            </WithStyles(ForwardRef(Paper))>
          </div>
        </PageBreadcrumbs>
      </Connect(PageBreadcrumbs)>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`PageBreadcrumbs - Snapshot Tests (Generic, ISIS, DLS) renders correctly for DLS proposals route 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Connect(PageBreadcrumbs)>
        <PageBreadcrumbs
          apiUrl=""
          dispatch={[Function]}
          location="/browse/proposal"
        >
          <div>
            <WithStyles(ForwardRef(Paper))
              elevation={0}
            >
              <ForwardRef(Paper)
                classes={
                  Object {
                    "elevation0": "MuiPaper-elevation0",
                    "elevation1": "MuiPaper-elevation1",
                    "elevation10": "MuiPaper-elevation10",
                    "elevation11": "MuiPaper-elevation11",
                    "elevation12": "MuiPaper-elevation12",
                    "elevation13": "MuiPaper-elevation13",
                    "elevation14": "MuiPaper-elevation14",
                    "elevation15": "MuiPaper-elevation15",
                    "elevation16": "MuiPaper-elevation16",
                    "elevation17": "MuiPaper-elevation17",
                    "elevation18": "MuiPaper-elevation18",
                    "elevation19": "MuiPaper-elevation19",
                    "elevation2": "MuiPaper-elevation2",
                    "elevation20": "MuiPaper-elevation20",
                    "elevation21": "MuiPaper-elevation21",
                    "elevation22": "MuiPaper-elevation22",
                    "elevation23": "MuiPaper-elevation23",
                    "elevation24": "MuiPaper-elevation24",
                    "elevation3": "MuiPaper-elevation3",
                    "elevation4": "MuiPaper-elevation4",
                    "elevation5": "MuiPaper-elevation5",
                    "elevation6": "MuiPaper-elevation6",
                    "elevation7": "MuiPaper-elevation7",
                    "elevation8": "MuiPaper-elevation8",
                    "elevation9": "MuiPaper-elevation9",
                    "root": "MuiPaper-root",
                    "rounded": "MuiPaper-rounded",
                  }
                }
                elevation={0}
              >
                <div
                  className="MuiPaper-root MuiPaper-elevation0 MuiPaper-rounded"
                >
                  <Route>
                    <WithStyles(ForwardRef(Breadcrumbs))
                      aria-label="Breadcrumb"
                      separator={
                        <Memo(NavigateNextIcon)
                          fontSize="small"
                        />
                      }
                    >
                      <ForwardRef(Breadcrumbs)
                        aria-label="Breadcrumb"
                        classes={
                          Object {
                            "li": "MuiBreadcrumbs-li",
                            "ol": "MuiBreadcrumbs-ol",
                            "root": "MuiBreadcrumbs-root",
                            "separator": "MuiBreadcrumbs-separator",
                          }
                        }
                        separator={
                          <Memo(NavigateNextIcon)
                            fontSize="small"
                          />
                        }
                      >
                        <WithStyles(ForwardRef(Typography))
                          aria-label="Breadcrumb"
                          className="MuiBreadcrumbs-root"
                          color="textSecondary"
                          component="nav"
                        >
                          <ForwardRef(Typography)
                            aria-label="Breadcrumb"
                            className="MuiBreadcrumbs-root"
                            classes={
                              Object {
                                "alignCenter": "MuiTypography-alignCenter",
                                "alignJustify": "MuiTypography-alignJustify",
                                "alignLeft": "MuiTypography-alignLeft",
                                "alignRight": "MuiTypography-alignRight",
                                "body1": "MuiTypography-body1",
                                "body2": "MuiTypography-body2",
                                "button": "MuiTypography-button",
                                "caption": "MuiTypography-caption",
                                "colorError": "MuiTypography-colorError",
                                "colorInherit": "MuiTypography-colorInherit",
                                "colorPrimary": "MuiTypography-colorPrimary",
                                "colorSecondary": "MuiTypography-colorSecondary",
                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                "displayBlock": "MuiTypography-displayBlock",
                                "displayInline": "MuiTypography-displayInline",
                                "gutterBottom": "MuiTypography-gutterBottom",
                                "h1": "MuiTypography-h1",
                                "h2": "MuiTypography-h2",
                                "h3": "MuiTypography-h3",
                                "h4": "MuiTypography-h4",
                                "h5": "MuiTypography-h5",
                                "h6": "MuiTypography-h6",
                                "noWrap": "MuiTypography-noWrap",
                                "overline": "MuiTypography-overline",
                                "paragraph": "MuiTypography-paragraph",
                                "root": "MuiTypography-root",
                                "srOnly": "MuiTypography-srOnly",
                                "subtitle1": "MuiTypography-subtitle1",
                                "subtitle2": "MuiTypography-subtitle2",
                              }
                            }
                            color="textSecondary"
                            component="nav"
                          >
                            <nav
                              aria-label="Breadcrumb"
                              className="MuiTypography-root MuiBreadcrumbs-root MuiTypography-body1 MuiTypography-colorTextSecondary"
                            >
                              <ol
                                className="MuiBreadcrumbs-ol"
                              >
                                <li
                                  className="MuiBreadcrumbs-li"
                                  key="child-0"
                                >
                                  <WithStyles(ForwardRef(Typography))
                                    color="textPrimary"
                                    key=".$base-proposal"
                                  >
                                    <ForwardRef(Typography)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textPrimary"
                                    >
                                      <p
                                        className="MuiTypography-root MuiTypography-body1 MuiTypography-colorTextPrimary"
                                      >
                                        Proposals
                                      </p>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                </li>
                              </ol>
                            </nav>
                          </ForwardRef(Typography)>
                        </WithStyles(ForwardRef(Typography))>
                      </ForwardRef(Breadcrumbs)>
                    </WithStyles(ForwardRef(Breadcrumbs))>
                  </Route>
                </div>
              </ForwardRef(Paper)>
            </WithStyles(ForwardRef(Paper))>
          </div>
        </PageBreadcrumbs>
      </Connect(PageBreadcrumbs)>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`PageBreadcrumbs - Snapshot Tests (Generic, ISIS, DLS) renders correctly for ISIS datafiles route 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Connect(PageBreadcrumbs)>
        <PageBreadcrumbs
          apiUrl=""
          dispatch={[Function]}
          location="/browse/instrument/1/facilityCycle/1/investigation/1/dataset/1/datafile"
        >
          <div>
            <WithStyles(ForwardRef(Paper))
              elevation={0}
            >
              <ForwardRef(Paper)
                classes={
                  Object {
                    "elevation0": "MuiPaper-elevation0",
                    "elevation1": "MuiPaper-elevation1",
                    "elevation10": "MuiPaper-elevation10",
                    "elevation11": "MuiPaper-elevation11",
                    "elevation12": "MuiPaper-elevation12",
                    "elevation13": "MuiPaper-elevation13",
                    "elevation14": "MuiPaper-elevation14",
                    "elevation15": "MuiPaper-elevation15",
                    "elevation16": "MuiPaper-elevation16",
                    "elevation17": "MuiPaper-elevation17",
                    "elevation18": "MuiPaper-elevation18",
                    "elevation19": "MuiPaper-elevation19",
                    "elevation2": "MuiPaper-elevation2",
                    "elevation20": "MuiPaper-elevation20",
                    "elevation21": "MuiPaper-elevation21",
                    "elevation22": "MuiPaper-elevation22",
                    "elevation23": "MuiPaper-elevation23",
                    "elevation24": "MuiPaper-elevation24",
                    "elevation3": "MuiPaper-elevation3",
                    "elevation4": "MuiPaper-elevation4",
                    "elevation5": "MuiPaper-elevation5",
                    "elevation6": "MuiPaper-elevation6",
                    "elevation7": "MuiPaper-elevation7",
                    "elevation8": "MuiPaper-elevation8",
                    "elevation9": "MuiPaper-elevation9",
                    "root": "MuiPaper-root",
                    "rounded": "MuiPaper-rounded",
                  }
                }
                elevation={0}
              >
                <div
                  className="MuiPaper-root MuiPaper-elevation0 MuiPaper-rounded"
                >
                  <Route>
                    <WithStyles(ForwardRef(Breadcrumbs))
                      aria-label="Breadcrumb"
                      separator={
                        <Memo(NavigateNextIcon)
                          fontSize="small"
                        />
                      }
                    >
                      <ForwardRef(Breadcrumbs)
                        aria-label="Breadcrumb"
                        classes={
                          Object {
                            "li": "MuiBreadcrumbs-li",
                            "ol": "MuiBreadcrumbs-ol",
                            "root": "MuiBreadcrumbs-root",
                            "separator": "MuiBreadcrumbs-separator",
                          }
                        }
                        separator={
                          <Memo(NavigateNextIcon)
                            fontSize="small"
                          />
                        }
                      >
                        <WithStyles(ForwardRef(Typography))
                          aria-label="Breadcrumb"
                          className="MuiBreadcrumbs-root"
                          color="textSecondary"
                          component="nav"
                        >
                          <ForwardRef(Typography)
                            aria-label="Breadcrumb"
                            className="MuiBreadcrumbs-root"
                            classes={
                              Object {
                                "alignCenter": "MuiTypography-alignCenter",
                                "alignJustify": "MuiTypography-alignJustify",
                                "alignLeft": "MuiTypography-alignLeft",
                                "alignRight": "MuiTypography-alignRight",
                                "body1": "MuiTypography-body1",
                                "body2": "MuiTypography-body2",
                                "button": "MuiTypography-button",
                                "caption": "MuiTypography-caption",
                                "colorError": "MuiTypography-colorError",
                                "colorInherit": "MuiTypography-colorInherit",
                                "colorPrimary": "MuiTypography-colorPrimary",
                                "colorSecondary": "MuiTypography-colorSecondary",
                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                "displayBlock": "MuiTypography-displayBlock",
                                "displayInline": "MuiTypography-displayInline",
                                "gutterBottom": "MuiTypography-gutterBottom",
                                "h1": "MuiTypography-h1",
                                "h2": "MuiTypography-h2",
                                "h3": "MuiTypography-h3",
                                "h4": "MuiTypography-h4",
                                "h5": "MuiTypography-h5",
                                "h6": "MuiTypography-h6",
                                "noWrap": "MuiTypography-noWrap",
                                "overline": "MuiTypography-overline",
                                "paragraph": "MuiTypography-paragraph",
                                "root": "MuiTypography-root",
                                "srOnly": "MuiTypography-srOnly",
                                "subtitle1": "MuiTypography-subtitle1",
                                "subtitle2": "MuiTypography-subtitle2",
                              }
                            }
                            color="textSecondary"
                            component="nav"
                          >
                            <nav
                              aria-label="Breadcrumb"
                              className="MuiTypography-root MuiBreadcrumbs-root MuiTypography-body1 MuiTypography-colorTextSecondary"
                            >
                              <ol
                                className="MuiBreadcrumbs-ol"
                              >
                                <li
                                  className="MuiBreadcrumbs-li"
                                  key="child-0"
                                >
                                  <WithStyles(ForwardRef(Link))
                                    component={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "displayName": "Link",
                                        "propTypes": Object {
                                          "innerRef": [Function],
                                          "onClick": [Function],
                                          "replace": [Function],
                                          "target": [Function],
                                          "to": [Function],
                                        },
                                        "render": [Function],
                                      }
                                    }
                                    key=".$base-instrument"
                                    to="/browse/instrument"
                                  >
                                    <ForwardRef(Link)
                                      classes={
                                        Object {
                                          "button": "MuiLink-button",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiLink-root",
                                          "underlineAlways": "MuiLink-underlineAlways",
                                          "underlineHover": "MuiLink-underlineHover",
                                          "underlineNone": "MuiLink-underlineNone",
                                        }
                                      }
                                      component={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "displayName": "Link",
                                          "propTypes": Object {
                                            "innerRef": [Function],
                                            "onClick": [Function],
                                            "replace": [Function],
                                            "target": [Function],
                                            "to": [Function],
                                          },
                                          "render": [Function],
                                        }
                                      }
                                      to="/browse/instrument"
                                    >
                                      <WithStyles(ForwardRef(Typography))
                                        className="MuiLink-root MuiLink-underlineHover"
                                        color="primary"
                                        component={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "displayName": "Link",
                                            "propTypes": Object {
                                              "innerRef": [Function],
                                              "onClick": [Function],
                                              "replace": [Function],
                                              "target": [Function],
                                              "to": [Function],
                                            },
                                            "render": [Function],
                                          }
                                        }
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        to="/browse/instrument"
                                        variant="inherit"
                                      >
                                        <ForwardRef(Typography)
                                          className="MuiLink-root MuiLink-underlineHover"
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter",
                                              "alignJustify": "MuiTypography-alignJustify",
                                              "alignLeft": "MuiTypography-alignLeft",
                                              "alignRight": "MuiTypography-alignRight",
                                              "body1": "MuiTypography-body1",
                                              "body2": "MuiTypography-body2",
                                              "button": "MuiTypography-button",
                                              "caption": "MuiTypography-caption",
                                              "colorError": "MuiTypography-colorError",
                                              "colorInherit": "MuiTypography-colorInherit",
                                              "colorPrimary": "MuiTypography-colorPrimary",
                                              "colorSecondary": "MuiTypography-colorSecondary",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                              "displayBlock": "MuiTypography-displayBlock",
                                              "displayInline": "MuiTypography-displayInline",
                                              "gutterBottom": "MuiTypography-gutterBottom",
                                              "h1": "MuiTypography-h1",
                                              "h2": "MuiTypography-h2",
                                              "h3": "MuiTypography-h3",
                                              "h4": "MuiTypography-h4",
                                              "h5": "MuiTypography-h5",
                                              "h6": "MuiTypography-h6",
                                              "noWrap": "MuiTypography-noWrap",
                                              "overline": "MuiTypography-overline",
                                              "paragraph": "MuiTypography-paragraph",
                                              "root": "MuiTypography-root",
                                              "srOnly": "MuiTypography-srOnly",
                                              "subtitle1": "MuiTypography-subtitle1",
                                              "subtitle2": "MuiTypography-subtitle2",
                                            }
                                          }
                                          color="primary"
                                          component={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "displayName": "Link",
                                              "propTypes": Object {
                                                "innerRef": [Function],
                                                "onClick": [Function],
                                                "replace": [Function],
                                                "target": [Function],
                                                "to": [Function],
                                              },
                                              "render": [Function],
                                            }
                                          }
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          to="/browse/instrument"
                                          variant="inherit"
                                        >
                                          <Link
                                            className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            to="/browse/instrument"
                                          >
                                            <LinkAnchor
                                              className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                              href="/browse/instrument"
                                              navigate={[Function]}
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                            >
                                              <a
                                                className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                                href="/browse/instrument"
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                              >
                                                Instruments
                                              </a>
                                            </LinkAnchor>
                                          </Link>
                                        </ForwardRef(Typography)>
                                      </WithStyles(ForwardRef(Typography))>
                                    </ForwardRef(Link)>
                                  </WithStyles(ForwardRef(Link))>
                                </li>
                                <WithStyles(BreadcrumbSeparator)
                                  className="MuiBreadcrumbs-separator"
                                  key="separator-0"
                                >
                                  <BreadcrumbSeparator
                                    className="MuiBreadcrumbs-separator"
                                    classes={
                                      Object {
                                        "root": "PrivateBreadcrumbSeparator-root-713",
                                      }
                                    }
                                  >
                                    <li
                                      aria-hidden={true}
                                      className="PrivateBreadcrumbSeparator-root-713 MuiBreadcrumbs-separator"
                                    >
                                      <ForwardRef
                                        fontSize="small"
                                      >
                                        <WithStyles(ForwardRef(SvgIcon))
                                          fontSize="small"
                                        >
                                          <ForwardRef(SvgIcon)
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                            fontSize="small"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef>
                                    </li>
                                  </BreadcrumbSeparator>
                                </WithStyles(BreadcrumbSeparator)>
                                <li
                                  className="MuiBreadcrumbs-li"
                                  key="child-1"
                                >
                                  <WithStyles(ForwardRef(Link))
                                    component={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "displayName": "Link",
                                        "propTypes": Object {
                                          "innerRef": [Function],
                                          "onClick": [Function],
                                          "replace": [Function],
                                          "target": [Function],
                                          "to": [Function],
                                        },
                                        "render": [Function],
                                      }
                                    }
                                    key=".1:$1"
                                    to="/browse/instrument/1/facilityCycle"
                                  >
                                    <ForwardRef(Link)
                                      classes={
                                        Object {
                                          "button": "MuiLink-button",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiLink-root",
                                          "underlineAlways": "MuiLink-underlineAlways",
                                          "underlineHover": "MuiLink-underlineHover",
                                          "underlineNone": "MuiLink-underlineNone",
                                        }
                                      }
                                      component={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "displayName": "Link",
                                          "propTypes": Object {
                                            "innerRef": [Function],
                                            "onClick": [Function],
                                            "replace": [Function],
                                            "target": [Function],
                                            "to": [Function],
                                          },
                                          "render": [Function],
                                        }
                                      }
                                      to="/browse/instrument/1/facilityCycle"
                                    >
                                      <WithStyles(ForwardRef(Typography))
                                        className="MuiLink-root MuiLink-underlineHover"
                                        color="primary"
                                        component={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "displayName": "Link",
                                            "propTypes": Object {
                                              "innerRef": [Function],
                                              "onClick": [Function],
                                              "replace": [Function],
                                              "target": [Function],
                                              "to": [Function],
                                            },
                                            "render": [Function],
                                          }
                                        }
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        to="/browse/instrument/1/facilityCycle"
                                        variant="inherit"
                                      >
                                        <ForwardRef(Typography)
                                          className="MuiLink-root MuiLink-underlineHover"
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter",
                                              "alignJustify": "MuiTypography-alignJustify",
                                              "alignLeft": "MuiTypography-alignLeft",
                                              "alignRight": "MuiTypography-alignRight",
                                              "body1": "MuiTypography-body1",
                                              "body2": "MuiTypography-body2",
                                              "button": "MuiTypography-button",
                                              "caption": "MuiTypography-caption",
                                              "colorError": "MuiTypography-colorError",
                                              "colorInherit": "MuiTypography-colorInherit",
                                              "colorPrimary": "MuiTypography-colorPrimary",
                                              "colorSecondary": "MuiTypography-colorSecondary",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                              "displayBlock": "MuiTypography-displayBlock",
                                              "displayInline": "MuiTypography-displayInline",
                                              "gutterBottom": "MuiTypography-gutterBottom",
                                              "h1": "MuiTypography-h1",
                                              "h2": "MuiTypography-h2",
                                              "h3": "MuiTypography-h3",
                                              "h4": "MuiTypography-h4",
                                              "h5": "MuiTypography-h5",
                                              "h6": "MuiTypography-h6",
                                              "noWrap": "MuiTypography-noWrap",
                                              "overline": "MuiTypography-overline",
                                              "paragraph": "MuiTypography-paragraph",
                                              "root": "MuiTypography-root",
                                              "srOnly": "MuiTypography-srOnly",
                                              "subtitle1": "MuiTypography-subtitle1",
                                              "subtitle2": "MuiTypography-subtitle2",
                                            }
                                          }
                                          color="primary"
                                          component={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "displayName": "Link",
                                              "propTypes": Object {
                                                "innerRef": [Function],
                                                "onClick": [Function],
                                                "replace": [Function],
                                                "target": [Function],
                                                "to": [Function],
                                              },
                                              "render": [Function],
                                            }
                                          }
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          to="/browse/instrument/1/facilityCycle"
                                          variant="inherit"
                                        >
                                          <Link
                                            className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            to="/browse/instrument/1/facilityCycle"
                                          >
                                            <LinkAnchor
                                              className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                              href="/browse/instrument/1/facilityCycle"
                                              navigate={[Function]}
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                            >
                                              <a
                                                className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                                href="/browse/instrument/1/facilityCycle"
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                              >
                                                INVESTIGATION 1
                                              </a>
                                            </LinkAnchor>
                                          </Link>
                                        </ForwardRef(Typography)>
                                      </WithStyles(ForwardRef(Typography))>
                                    </ForwardRef(Link)>
                                  </WithStyles(ForwardRef(Link))>
                                </li>
                                <WithStyles(BreadcrumbSeparator)
                                  className="MuiBreadcrumbs-separator"
                                  key="separator-1"
                                >
                                  <BreadcrumbSeparator
                                    className="MuiBreadcrumbs-separator"
                                    classes={
                                      Object {
                                        "root": "PrivateBreadcrumbSeparator-root-713",
                                      }
                                    }
                                  >
                                    <li
                                      aria-hidden={true}
                                      className="PrivateBreadcrumbSeparator-root-713 MuiBreadcrumbs-separator"
                                    >
                                      <ForwardRef
                                        fontSize="small"
                                      >
                                        <WithStyles(ForwardRef(SvgIcon))
                                          fontSize="small"
                                        >
                                          <ForwardRef(SvgIcon)
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                            fontSize="small"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef>
                                    </li>
                                  </BreadcrumbSeparator>
                                </WithStyles(BreadcrumbSeparator)>
                                <li
                                  className="MuiBreadcrumbs-li"
                                  key="child-2"
                                >
                                  <WithStyles(ForwardRef(Link))
                                    component={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "displayName": "Link",
                                        "propTypes": Object {
                                          "innerRef": [Function],
                                          "onClick": [Function],
                                          "replace": [Function],
                                          "target": [Function],
                                          "to": [Function],
                                        },
                                        "render": [Function],
                                      }
                                    }
                                    key=".1:$1"
                                    to="/browse/instrument/1/facilityCycle/1/investigation"
                                  >
                                    <ForwardRef(Link)
                                      classes={
                                        Object {
                                          "button": "MuiLink-button",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiLink-root",
                                          "underlineAlways": "MuiLink-underlineAlways",
                                          "underlineHover": "MuiLink-underlineHover",
                                          "underlineNone": "MuiLink-underlineNone",
                                        }
                                      }
                                      component={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "displayName": "Link",
                                          "propTypes": Object {
                                            "innerRef": [Function],
                                            "onClick": [Function],
                                            "replace": [Function],
                                            "target": [Function],
                                            "to": [Function],
                                          },
                                          "render": [Function],
                                        }
                                      }
                                      to="/browse/instrument/1/facilityCycle/1/investigation"
                                    >
                                      <WithStyles(ForwardRef(Typography))
                                        className="MuiLink-root MuiLink-underlineHover"
                                        color="primary"
                                        component={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "displayName": "Link",
                                            "propTypes": Object {
                                              "innerRef": [Function],
                                              "onClick": [Function],
                                              "replace": [Function],
                                              "target": [Function],
                                              "to": [Function],
                                            },
                                            "render": [Function],
                                          }
                                        }
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        to="/browse/instrument/1/facilityCycle/1/investigation"
                                        variant="inherit"
                                      >
                                        <ForwardRef(Typography)
                                          className="MuiLink-root MuiLink-underlineHover"
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter",
                                              "alignJustify": "MuiTypography-alignJustify",
                                              "alignLeft": "MuiTypography-alignLeft",
                                              "alignRight": "MuiTypography-alignRight",
                                              "body1": "MuiTypography-body1",
                                              "body2": "MuiTypography-body2",
                                              "button": "MuiTypography-button",
                                              "caption": "MuiTypography-caption",
                                              "colorError": "MuiTypography-colorError",
                                              "colorInherit": "MuiTypography-colorInherit",
                                              "colorPrimary": "MuiTypography-colorPrimary",
                                              "colorSecondary": "MuiTypography-colorSecondary",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                              "displayBlock": "MuiTypography-displayBlock",
                                              "displayInline": "MuiTypography-displayInline",
                                              "gutterBottom": "MuiTypography-gutterBottom",
                                              "h1": "MuiTypography-h1",
                                              "h2": "MuiTypography-h2",
                                              "h3": "MuiTypography-h3",
                                              "h4": "MuiTypography-h4",
                                              "h5": "MuiTypography-h5",
                                              "h6": "MuiTypography-h6",
                                              "noWrap": "MuiTypography-noWrap",
                                              "overline": "MuiTypography-overline",
                                              "paragraph": "MuiTypography-paragraph",
                                              "root": "MuiTypography-root",
                                              "srOnly": "MuiTypography-srOnly",
                                              "subtitle1": "MuiTypography-subtitle1",
                                              "subtitle2": "MuiTypography-subtitle2",
                                            }
                                          }
                                          color="primary"
                                          component={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "displayName": "Link",
                                              "propTypes": Object {
                                                "innerRef": [Function],
                                                "onClick": [Function],
                                                "replace": [Function],
                                                "target": [Function],
                                                "to": [Function],
                                              },
                                              "render": [Function],
                                            }
                                          }
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          to="/browse/instrument/1/facilityCycle/1/investigation"
                                          variant="inherit"
                                        >
                                          <Link
                                            className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            to="/browse/instrument/1/facilityCycle/1/investigation"
                                          >
                                            <LinkAnchor
                                              className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                              href="/browse/instrument/1/facilityCycle/1/investigation"
                                              navigate={[Function]}
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                            >
                                              <a
                                                className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                                href="/browse/instrument/1/facilityCycle/1/investigation"
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                              >
                                                INVESTIGATION 1
                                              </a>
                                            </LinkAnchor>
                                          </Link>
                                        </ForwardRef(Typography)>
                                      </WithStyles(ForwardRef(Typography))>
                                    </ForwardRef(Link)>
                                  </WithStyles(ForwardRef(Link))>
                                </li>
                                <WithStyles(BreadcrumbSeparator)
                                  className="MuiBreadcrumbs-separator"
                                  key="separator-2"
                                >
                                  <BreadcrumbSeparator
                                    className="MuiBreadcrumbs-separator"
                                    classes={
                                      Object {
                                        "root": "PrivateBreadcrumbSeparator-root-713",
                                      }
                                    }
                                  >
                                    <li
                                      aria-hidden={true}
                                      className="PrivateBreadcrumbSeparator-root-713 MuiBreadcrumbs-separator"
                                    >
                                      <ForwardRef
                                        fontSize="small"
                                      >
                                        <WithStyles(ForwardRef(SvgIcon))
                                          fontSize="small"
                                        >
                                          <ForwardRef(SvgIcon)
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                            fontSize="small"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef>
                                    </li>
                                  </BreadcrumbSeparator>
                                </WithStyles(BreadcrumbSeparator)>
                                <li
                                  className="MuiBreadcrumbs-li"
                                  key="child-3"
                                >
                                  <WithStyles(ForwardRef(Link))
                                    component={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "displayName": "Link",
                                        "propTypes": Object {
                                          "innerRef": [Function],
                                          "onClick": [Function],
                                          "replace": [Function],
                                          "target": [Function],
                                          "to": [Function],
                                        },
                                        "render": [Function],
                                      }
                                    }
                                    key=".1:$1"
                                    to="/browse/instrument/1/facilityCycle/1/investigation/1/dataset"
                                  >
                                    <ForwardRef(Link)
                                      classes={
                                        Object {
                                          "button": "MuiLink-button",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiLink-root",
                                          "underlineAlways": "MuiLink-underlineAlways",
                                          "underlineHover": "MuiLink-underlineHover",
                                          "underlineNone": "MuiLink-underlineNone",
                                        }
                                      }
                                      component={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "displayName": "Link",
                                          "propTypes": Object {
                                            "innerRef": [Function],
                                            "onClick": [Function],
                                            "replace": [Function],
                                            "target": [Function],
                                            "to": [Function],
                                          },
                                          "render": [Function],
                                        }
                                      }
                                      to="/browse/instrument/1/facilityCycle/1/investigation/1/dataset"
                                    >
                                      <WithStyles(ForwardRef(Typography))
                                        className="MuiLink-root MuiLink-underlineHover"
                                        color="primary"
                                        component={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "displayName": "Link",
                                            "propTypes": Object {
                                              "innerRef": [Function],
                                              "onClick": [Function],
                                              "replace": [Function],
                                              "target": [Function],
                                              "to": [Function],
                                            },
                                            "render": [Function],
                                          }
                                        }
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        to="/browse/instrument/1/facilityCycle/1/investigation/1/dataset"
                                        variant="inherit"
                                      >
                                        <ForwardRef(Typography)
                                          className="MuiLink-root MuiLink-underlineHover"
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter",
                                              "alignJustify": "MuiTypography-alignJustify",
                                              "alignLeft": "MuiTypography-alignLeft",
                                              "alignRight": "MuiTypography-alignRight",
                                              "body1": "MuiTypography-body1",
                                              "body2": "MuiTypography-body2",
                                              "button": "MuiTypography-button",
                                              "caption": "MuiTypography-caption",
                                              "colorError": "MuiTypography-colorError",
                                              "colorInherit": "MuiTypography-colorInherit",
                                              "colorPrimary": "MuiTypography-colorPrimary",
                                              "colorSecondary": "MuiTypography-colorSecondary",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                              "displayBlock": "MuiTypography-displayBlock",
                                              "displayInline": "MuiTypography-displayInline",
                                              "gutterBottom": "MuiTypography-gutterBottom",
                                              "h1": "MuiTypography-h1",
                                              "h2": "MuiTypography-h2",
                                              "h3": "MuiTypography-h3",
                                              "h4": "MuiTypography-h4",
                                              "h5": "MuiTypography-h5",
                                              "h6": "MuiTypography-h6",
                                              "noWrap": "MuiTypography-noWrap",
                                              "overline": "MuiTypography-overline",
                                              "paragraph": "MuiTypography-paragraph",
                                              "root": "MuiTypography-root",
                                              "srOnly": "MuiTypography-srOnly",
                                              "subtitle1": "MuiTypography-subtitle1",
                                              "subtitle2": "MuiTypography-subtitle2",
                                            }
                                          }
                                          color="primary"
                                          component={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "displayName": "Link",
                                              "propTypes": Object {
                                                "innerRef": [Function],
                                                "onClick": [Function],
                                                "replace": [Function],
                                                "target": [Function],
                                                "to": [Function],
                                              },
                                              "render": [Function],
                                            }
                                          }
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          to="/browse/instrument/1/facilityCycle/1/investigation/1/dataset"
                                          variant="inherit"
                                        >
                                          <Link
                                            className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            to="/browse/instrument/1/facilityCycle/1/investigation/1/dataset"
                                          >
                                            <LinkAnchor
                                              className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                              href="/browse/instrument/1/facilityCycle/1/investigation/1/dataset"
                                              navigate={[Function]}
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                            >
                                              <a
                                                className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                                href="/browse/instrument/1/facilityCycle/1/investigation/1/dataset"
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                              >
                                                Test 1
                                              </a>
                                            </LinkAnchor>
                                          </Link>
                                        </ForwardRef(Typography)>
                                      </WithStyles(ForwardRef(Typography))>
                                    </ForwardRef(Link)>
                                  </WithStyles(ForwardRef(Link))>
                                </li>
                                <WithStyles(BreadcrumbSeparator)
                                  className="MuiBreadcrumbs-separator"
                                  key="separator-3"
                                >
                                  <BreadcrumbSeparator
                                    className="MuiBreadcrumbs-separator"
                                    classes={
                                      Object {
                                        "root": "PrivateBreadcrumbSeparator-root-713",
                                      }
                                    }
                                  >
                                    <li
                                      aria-hidden={true}
                                      className="PrivateBreadcrumbSeparator-root-713 MuiBreadcrumbs-separator"
                                    >
                                      <ForwardRef
                                        fontSize="small"
                                      >
                                        <WithStyles(ForwardRef(SvgIcon))
                                          fontSize="small"
                                        >
                                          <ForwardRef(SvgIcon)
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                            fontSize="small"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef>
                                    </li>
                                  </BreadcrumbSeparator>
                                </WithStyles(BreadcrumbSeparator)>
                                <li
                                  className="MuiBreadcrumbs-li"
                                  key="child-4"
                                >
                                  <WithStyles(ForwardRef(Typography))
                                    color="textPrimary"
                                    key=".1:$1"
                                  >
                                    <ForwardRef(Typography)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textPrimary"
                                    >
                                      <p
                                        className="MuiTypography-root MuiTypography-body1 MuiTypography-colorTextPrimary"
                                      >
                                        INVESTIGATION 1
                                      </p>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                </li>
                                <WithStyles(BreadcrumbSeparator)
                                  className="MuiBreadcrumbs-separator"
                                  key="separator-4"
                                >
                                  <BreadcrumbSeparator
                                    className="MuiBreadcrumbs-separator"
                                    classes={
                                      Object {
                                        "root": "PrivateBreadcrumbSeparator-root-713",
                                      }
                                    }
                                  >
                                    <li
                                      aria-hidden={true}
                                      className="PrivateBreadcrumbSeparator-root-713 MuiBreadcrumbs-separator"
                                    >
                                      <ForwardRef
                                        fontSize="small"
                                      >
                                        <WithStyles(ForwardRef(SvgIcon))
                                          fontSize="small"
                                        >
                                          <ForwardRef(SvgIcon)
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                            fontSize="small"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef>
                                    </li>
                                  </BreadcrumbSeparator>
                                </WithStyles(BreadcrumbSeparator)>
                                <li
                                  className="MuiBreadcrumbs-li"
                                  key="child-5"
                                >
                                  <WithStyles(ForwardRef(Typography))
                                    color="textPrimary"
                                    key=".2"
                                  >
                                    <ForwardRef(Typography)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textPrimary"
                                    >
                                      <p
                                        className="MuiTypography-root MuiTypography-body1 MuiTypography-colorTextPrimary"
                                      >
                                        <i>
                                          Datafiles
                                        </i>
                                      </p>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                </li>
                              </ol>
                            </nav>
                          </ForwardRef(Typography)>
                        </WithStyles(ForwardRef(Typography))>
                      </ForwardRef(Breadcrumbs)>
                    </WithStyles(ForwardRef(Breadcrumbs))>
                  </Route>
                </div>
              </ForwardRef(Paper)>
            </WithStyles(ForwardRef(Paper))>
          </div>
        </PageBreadcrumbs>
      </Connect(PageBreadcrumbs)>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`PageBreadcrumbs - Snapshot Tests (Generic, ISIS, DLS) renders correctly for ISIS datasets route 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Connect(PageBreadcrumbs)>
        <PageBreadcrumbs
          apiUrl=""
          dispatch={[Function]}
          location="/browse/instrument/1/facilityCycle/1/investigation/1/dataset"
        >
          <div>
            <WithStyles(ForwardRef(Paper))
              elevation={0}
            >
              <ForwardRef(Paper)
                classes={
                  Object {
                    "elevation0": "MuiPaper-elevation0",
                    "elevation1": "MuiPaper-elevation1",
                    "elevation10": "MuiPaper-elevation10",
                    "elevation11": "MuiPaper-elevation11",
                    "elevation12": "MuiPaper-elevation12",
                    "elevation13": "MuiPaper-elevation13",
                    "elevation14": "MuiPaper-elevation14",
                    "elevation15": "MuiPaper-elevation15",
                    "elevation16": "MuiPaper-elevation16",
                    "elevation17": "MuiPaper-elevation17",
                    "elevation18": "MuiPaper-elevation18",
                    "elevation19": "MuiPaper-elevation19",
                    "elevation2": "MuiPaper-elevation2",
                    "elevation20": "MuiPaper-elevation20",
                    "elevation21": "MuiPaper-elevation21",
                    "elevation22": "MuiPaper-elevation22",
                    "elevation23": "MuiPaper-elevation23",
                    "elevation24": "MuiPaper-elevation24",
                    "elevation3": "MuiPaper-elevation3",
                    "elevation4": "MuiPaper-elevation4",
                    "elevation5": "MuiPaper-elevation5",
                    "elevation6": "MuiPaper-elevation6",
                    "elevation7": "MuiPaper-elevation7",
                    "elevation8": "MuiPaper-elevation8",
                    "elevation9": "MuiPaper-elevation9",
                    "root": "MuiPaper-root",
                    "rounded": "MuiPaper-rounded",
                  }
                }
                elevation={0}
              >
                <div
                  className="MuiPaper-root MuiPaper-elevation0 MuiPaper-rounded"
                >
                  <Route>
                    <WithStyles(ForwardRef(Breadcrumbs))
                      aria-label="Breadcrumb"
                      separator={
                        <Memo(NavigateNextIcon)
                          fontSize="small"
                        />
                      }
                    >
                      <ForwardRef(Breadcrumbs)
                        aria-label="Breadcrumb"
                        classes={
                          Object {
                            "li": "MuiBreadcrumbs-li",
                            "ol": "MuiBreadcrumbs-ol",
                            "root": "MuiBreadcrumbs-root",
                            "separator": "MuiBreadcrumbs-separator",
                          }
                        }
                        separator={
                          <Memo(NavigateNextIcon)
                            fontSize="small"
                          />
                        }
                      >
                        <WithStyles(ForwardRef(Typography))
                          aria-label="Breadcrumb"
                          className="MuiBreadcrumbs-root"
                          color="textSecondary"
                          component="nav"
                        >
                          <ForwardRef(Typography)
                            aria-label="Breadcrumb"
                            className="MuiBreadcrumbs-root"
                            classes={
                              Object {
                                "alignCenter": "MuiTypography-alignCenter",
                                "alignJustify": "MuiTypography-alignJustify",
                                "alignLeft": "MuiTypography-alignLeft",
                                "alignRight": "MuiTypography-alignRight",
                                "body1": "MuiTypography-body1",
                                "body2": "MuiTypography-body2",
                                "button": "MuiTypography-button",
                                "caption": "MuiTypography-caption",
                                "colorError": "MuiTypography-colorError",
                                "colorInherit": "MuiTypography-colorInherit",
                                "colorPrimary": "MuiTypography-colorPrimary",
                                "colorSecondary": "MuiTypography-colorSecondary",
                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                "displayBlock": "MuiTypography-displayBlock",
                                "displayInline": "MuiTypography-displayInline",
                                "gutterBottom": "MuiTypography-gutterBottom",
                                "h1": "MuiTypography-h1",
                                "h2": "MuiTypography-h2",
                                "h3": "MuiTypography-h3",
                                "h4": "MuiTypography-h4",
                                "h5": "MuiTypography-h5",
                                "h6": "MuiTypography-h6",
                                "noWrap": "MuiTypography-noWrap",
                                "overline": "MuiTypography-overline",
                                "paragraph": "MuiTypography-paragraph",
                                "root": "MuiTypography-root",
                                "srOnly": "MuiTypography-srOnly",
                                "subtitle1": "MuiTypography-subtitle1",
                                "subtitle2": "MuiTypography-subtitle2",
                              }
                            }
                            color="textSecondary"
                            component="nav"
                          >
                            <nav
                              aria-label="Breadcrumb"
                              className="MuiTypography-root MuiBreadcrumbs-root MuiTypography-body1 MuiTypography-colorTextSecondary"
                            >
                              <ol
                                className="MuiBreadcrumbs-ol"
                              >
                                <li
                                  className="MuiBreadcrumbs-li"
                                  key="child-0"
                                >
                                  <WithStyles(ForwardRef(Link))
                                    component={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "displayName": "Link",
                                        "propTypes": Object {
                                          "innerRef": [Function],
                                          "onClick": [Function],
                                          "replace": [Function],
                                          "target": [Function],
                                          "to": [Function],
                                        },
                                        "render": [Function],
                                      }
                                    }
                                    key=".$base-instrument"
                                    to="/browse/instrument"
                                  >
                                    <ForwardRef(Link)
                                      classes={
                                        Object {
                                          "button": "MuiLink-button",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiLink-root",
                                          "underlineAlways": "MuiLink-underlineAlways",
                                          "underlineHover": "MuiLink-underlineHover",
                                          "underlineNone": "MuiLink-underlineNone",
                                        }
                                      }
                                      component={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "displayName": "Link",
                                          "propTypes": Object {
                                            "innerRef": [Function],
                                            "onClick": [Function],
                                            "replace": [Function],
                                            "target": [Function],
                                            "to": [Function],
                                          },
                                          "render": [Function],
                                        }
                                      }
                                      to="/browse/instrument"
                                    >
                                      <WithStyles(ForwardRef(Typography))
                                        className="MuiLink-root MuiLink-underlineHover"
                                        color="primary"
                                        component={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "displayName": "Link",
                                            "propTypes": Object {
                                              "innerRef": [Function],
                                              "onClick": [Function],
                                              "replace": [Function],
                                              "target": [Function],
                                              "to": [Function],
                                            },
                                            "render": [Function],
                                          }
                                        }
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        to="/browse/instrument"
                                        variant="inherit"
                                      >
                                        <ForwardRef(Typography)
                                          className="MuiLink-root MuiLink-underlineHover"
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter",
                                              "alignJustify": "MuiTypography-alignJustify",
                                              "alignLeft": "MuiTypography-alignLeft",
                                              "alignRight": "MuiTypography-alignRight",
                                              "body1": "MuiTypography-body1",
                                              "body2": "MuiTypography-body2",
                                              "button": "MuiTypography-button",
                                              "caption": "MuiTypography-caption",
                                              "colorError": "MuiTypography-colorError",
                                              "colorInherit": "MuiTypography-colorInherit",
                                              "colorPrimary": "MuiTypography-colorPrimary",
                                              "colorSecondary": "MuiTypography-colorSecondary",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                              "displayBlock": "MuiTypography-displayBlock",
                                              "displayInline": "MuiTypography-displayInline",
                                              "gutterBottom": "MuiTypography-gutterBottom",
                                              "h1": "MuiTypography-h1",
                                              "h2": "MuiTypography-h2",
                                              "h3": "MuiTypography-h3",
                                              "h4": "MuiTypography-h4",
                                              "h5": "MuiTypography-h5",
                                              "h6": "MuiTypography-h6",
                                              "noWrap": "MuiTypography-noWrap",
                                              "overline": "MuiTypography-overline",
                                              "paragraph": "MuiTypography-paragraph",
                                              "root": "MuiTypography-root",
                                              "srOnly": "MuiTypography-srOnly",
                                              "subtitle1": "MuiTypography-subtitle1",
                                              "subtitle2": "MuiTypography-subtitle2",
                                            }
                                          }
                                          color="primary"
                                          component={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "displayName": "Link",
                                              "propTypes": Object {
                                                "innerRef": [Function],
                                                "onClick": [Function],
                                                "replace": [Function],
                                                "target": [Function],
                                                "to": [Function],
                                              },
                                              "render": [Function],
                                            }
                                          }
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          to="/browse/instrument"
                                          variant="inherit"
                                        >
                                          <Link
                                            className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            to="/browse/instrument"
                                          >
                                            <LinkAnchor
                                              className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                              href="/browse/instrument"
                                              navigate={[Function]}
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                            >
                                              <a
                                                className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                                href="/browse/instrument"
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                              >
                                                Instruments
                                              </a>
                                            </LinkAnchor>
                                          </Link>
                                        </ForwardRef(Typography)>
                                      </WithStyles(ForwardRef(Typography))>
                                    </ForwardRef(Link)>
                                  </WithStyles(ForwardRef(Link))>
                                </li>
                                <WithStyles(BreadcrumbSeparator)
                                  className="MuiBreadcrumbs-separator"
                                  key="separator-0"
                                >
                                  <BreadcrumbSeparator
                                    className="MuiBreadcrumbs-separator"
                                    classes={
                                      Object {
                                        "root": "PrivateBreadcrumbSeparator-root-482",
                                      }
                                    }
                                  >
                                    <li
                                      aria-hidden={true}
                                      className="PrivateBreadcrumbSeparator-root-482 MuiBreadcrumbs-separator"
                                    >
                                      <ForwardRef
                                        fontSize="small"
                                      >
                                        <WithStyles(ForwardRef(SvgIcon))
                                          fontSize="small"
                                        >
                                          <ForwardRef(SvgIcon)
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                            fontSize="small"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef>
                                    </li>
                                  </BreadcrumbSeparator>
                                </WithStyles(BreadcrumbSeparator)>
                                <li
                                  className="MuiBreadcrumbs-li"
                                  key="child-1"
                                >
                                  <WithStyles(ForwardRef(Link))
                                    component={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "displayName": "Link",
                                        "propTypes": Object {
                                          "innerRef": [Function],
                                          "onClick": [Function],
                                          "replace": [Function],
                                          "target": [Function],
                                          "to": [Function],
                                        },
                                        "render": [Function],
                                      }
                                    }
                                    key=".1:$1"
                                    to="/browse/instrument/1/facilityCycle"
                                  >
                                    <ForwardRef(Link)
                                      classes={
                                        Object {
                                          "button": "MuiLink-button",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiLink-root",
                                          "underlineAlways": "MuiLink-underlineAlways",
                                          "underlineHover": "MuiLink-underlineHover",
                                          "underlineNone": "MuiLink-underlineNone",
                                        }
                                      }
                                      component={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "displayName": "Link",
                                          "propTypes": Object {
                                            "innerRef": [Function],
                                            "onClick": [Function],
                                            "replace": [Function],
                                            "target": [Function],
                                            "to": [Function],
                                          },
                                          "render": [Function],
                                        }
                                      }
                                      to="/browse/instrument/1/facilityCycle"
                                    >
                                      <WithStyles(ForwardRef(Typography))
                                        className="MuiLink-root MuiLink-underlineHover"
                                        color="primary"
                                        component={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "displayName": "Link",
                                            "propTypes": Object {
                                              "innerRef": [Function],
                                              "onClick": [Function],
                                              "replace": [Function],
                                              "target": [Function],
                                              "to": [Function],
                                            },
                                            "render": [Function],
                                          }
                                        }
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        to="/browse/instrument/1/facilityCycle"
                                        variant="inherit"
                                      >
                                        <ForwardRef(Typography)
                                          className="MuiLink-root MuiLink-underlineHover"
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter",
                                              "alignJustify": "MuiTypography-alignJustify",
                                              "alignLeft": "MuiTypography-alignLeft",
                                              "alignRight": "MuiTypography-alignRight",
                                              "body1": "MuiTypography-body1",
                                              "body2": "MuiTypography-body2",
                                              "button": "MuiTypography-button",
                                              "caption": "MuiTypography-caption",
                                              "colorError": "MuiTypography-colorError",
                                              "colorInherit": "MuiTypography-colorInherit",
                                              "colorPrimary": "MuiTypography-colorPrimary",
                                              "colorSecondary": "MuiTypography-colorSecondary",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                              "displayBlock": "MuiTypography-displayBlock",
                                              "displayInline": "MuiTypography-displayInline",
                                              "gutterBottom": "MuiTypography-gutterBottom",
                                              "h1": "MuiTypography-h1",
                                              "h2": "MuiTypography-h2",
                                              "h3": "MuiTypography-h3",
                                              "h4": "MuiTypography-h4",
                                              "h5": "MuiTypography-h5",
                                              "h6": "MuiTypography-h6",
                                              "noWrap": "MuiTypography-noWrap",
                                              "overline": "MuiTypography-overline",
                                              "paragraph": "MuiTypography-paragraph",
                                              "root": "MuiTypography-root",
                                              "srOnly": "MuiTypography-srOnly",
                                              "subtitle1": "MuiTypography-subtitle1",
                                              "subtitle2": "MuiTypography-subtitle2",
                                            }
                                          }
                                          color="primary"
                                          component={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "displayName": "Link",
                                              "propTypes": Object {
                                                "innerRef": [Function],
                                                "onClick": [Function],
                                                "replace": [Function],
                                                "target": [Function],
                                                "to": [Function],
                                              },
                                              "render": [Function],
                                            }
                                          }
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          to="/browse/instrument/1/facilityCycle"
                                          variant="inherit"
                                        >
                                          <Link
                                            className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            to="/browse/instrument/1/facilityCycle"
                                          >
                                            <LinkAnchor
                                              className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                              href="/browse/instrument/1/facilityCycle"
                                              navigate={[Function]}
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                            >
                                              <a
                                                className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                                href="/browse/instrument/1/facilityCycle"
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                              >
                                                INVESTIGATION 1
                                              </a>
                                            </LinkAnchor>
                                          </Link>
                                        </ForwardRef(Typography)>
                                      </WithStyles(ForwardRef(Typography))>
                                    </ForwardRef(Link)>
                                  </WithStyles(ForwardRef(Link))>
                                </li>
                                <WithStyles(BreadcrumbSeparator)
                                  className="MuiBreadcrumbs-separator"
                                  key="separator-1"
                                >
                                  <BreadcrumbSeparator
                                    className="MuiBreadcrumbs-separator"
                                    classes={
                                      Object {
                                        "root": "PrivateBreadcrumbSeparator-root-482",
                                      }
                                    }
                                  >
                                    <li
                                      aria-hidden={true}
                                      className="PrivateBreadcrumbSeparator-root-482 MuiBreadcrumbs-separator"
                                    >
                                      <ForwardRef
                                        fontSize="small"
                                      >
                                        <WithStyles(ForwardRef(SvgIcon))
                                          fontSize="small"
                                        >
                                          <ForwardRef(SvgIcon)
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                            fontSize="small"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef>
                                    </li>
                                  </BreadcrumbSeparator>
                                </WithStyles(BreadcrumbSeparator)>
                                <li
                                  className="MuiBreadcrumbs-li"
                                  key="child-2"
                                >
                                  <WithStyles(ForwardRef(Link))
                                    component={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "displayName": "Link",
                                        "propTypes": Object {
                                          "innerRef": [Function],
                                          "onClick": [Function],
                                          "replace": [Function],
                                          "target": [Function],
                                          "to": [Function],
                                        },
                                        "render": [Function],
                                      }
                                    }
                                    key=".1:$1"
                                    to="/browse/instrument/1/facilityCycle/1/investigation"
                                  >
                                    <ForwardRef(Link)
                                      classes={
                                        Object {
                                          "button": "MuiLink-button",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiLink-root",
                                          "underlineAlways": "MuiLink-underlineAlways",
                                          "underlineHover": "MuiLink-underlineHover",
                                          "underlineNone": "MuiLink-underlineNone",
                                        }
                                      }
                                      component={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "displayName": "Link",
                                          "propTypes": Object {
                                            "innerRef": [Function],
                                            "onClick": [Function],
                                            "replace": [Function],
                                            "target": [Function],
                                            "to": [Function],
                                          },
                                          "render": [Function],
                                        }
                                      }
                                      to="/browse/instrument/1/facilityCycle/1/investigation"
                                    >
                                      <WithStyles(ForwardRef(Typography))
                                        className="MuiLink-root MuiLink-underlineHover"
                                        color="primary"
                                        component={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "displayName": "Link",
                                            "propTypes": Object {
                                              "innerRef": [Function],
                                              "onClick": [Function],
                                              "replace": [Function],
                                              "target": [Function],
                                              "to": [Function],
                                            },
                                            "render": [Function],
                                          }
                                        }
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        to="/browse/instrument/1/facilityCycle/1/investigation"
                                        variant="inherit"
                                      >
                                        <ForwardRef(Typography)
                                          className="MuiLink-root MuiLink-underlineHover"
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter",
                                              "alignJustify": "MuiTypography-alignJustify",
                                              "alignLeft": "MuiTypography-alignLeft",
                                              "alignRight": "MuiTypography-alignRight",
                                              "body1": "MuiTypography-body1",
                                              "body2": "MuiTypography-body2",
                                              "button": "MuiTypography-button",
                                              "caption": "MuiTypography-caption",
                                              "colorError": "MuiTypography-colorError",
                                              "colorInherit": "MuiTypography-colorInherit",
                                              "colorPrimary": "MuiTypography-colorPrimary",
                                              "colorSecondary": "MuiTypography-colorSecondary",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                              "displayBlock": "MuiTypography-displayBlock",
                                              "displayInline": "MuiTypography-displayInline",
                                              "gutterBottom": "MuiTypography-gutterBottom",
                                              "h1": "MuiTypography-h1",
                                              "h2": "MuiTypography-h2",
                                              "h3": "MuiTypography-h3",
                                              "h4": "MuiTypography-h4",
                                              "h5": "MuiTypography-h5",
                                              "h6": "MuiTypography-h6",
                                              "noWrap": "MuiTypography-noWrap",
                                              "overline": "MuiTypography-overline",
                                              "paragraph": "MuiTypography-paragraph",
                                              "root": "MuiTypography-root",
                                              "srOnly": "MuiTypography-srOnly",
                                              "subtitle1": "MuiTypography-subtitle1",
                                              "subtitle2": "MuiTypography-subtitle2",
                                            }
                                          }
                                          color="primary"
                                          component={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "displayName": "Link",
                                              "propTypes": Object {
                                                "innerRef": [Function],
                                                "onClick": [Function],
                                                "replace": [Function],
                                                "target": [Function],
                                                "to": [Function],
                                              },
                                              "render": [Function],
                                            }
                                          }
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          to="/browse/instrument/1/facilityCycle/1/investigation"
                                          variant="inherit"
                                        >
                                          <Link
                                            className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            to="/browse/instrument/1/facilityCycle/1/investigation"
                                          >
                                            <LinkAnchor
                                              className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                              href="/browse/instrument/1/facilityCycle/1/investigation"
                                              navigate={[Function]}
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                            >
                                              <a
                                                className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                                href="/browse/instrument/1/facilityCycle/1/investigation"
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                              >
                                                INVESTIGATION 1
                                              </a>
                                            </LinkAnchor>
                                          </Link>
                                        </ForwardRef(Typography)>
                                      </WithStyles(ForwardRef(Typography))>
                                    </ForwardRef(Link)>
                                  </WithStyles(ForwardRef(Link))>
                                </li>
                                <WithStyles(BreadcrumbSeparator)
                                  className="MuiBreadcrumbs-separator"
                                  key="separator-2"
                                >
                                  <BreadcrumbSeparator
                                    className="MuiBreadcrumbs-separator"
                                    classes={
                                      Object {
                                        "root": "PrivateBreadcrumbSeparator-root-482",
                                      }
                                    }
                                  >
                                    <li
                                      aria-hidden={true}
                                      className="PrivateBreadcrumbSeparator-root-482 MuiBreadcrumbs-separator"
                                    >
                                      <ForwardRef
                                        fontSize="small"
                                      >
                                        <WithStyles(ForwardRef(SvgIcon))
                                          fontSize="small"
                                        >
                                          <ForwardRef(SvgIcon)
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                            fontSize="small"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef>
                                    </li>
                                  </BreadcrumbSeparator>
                                </WithStyles(BreadcrumbSeparator)>
                                <li
                                  className="MuiBreadcrumbs-li"
                                  key="child-3"
                                >
                                  <WithStyles(ForwardRef(Typography))
                                    color="textPrimary"
                                    key=".1:$1"
                                  >
                                    <ForwardRef(Typography)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textPrimary"
                                    >
                                      <p
                                        className="MuiTypography-root MuiTypography-body1 MuiTypography-colorTextPrimary"
                                      >
                                        Test 1
                                      </p>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                </li>
                                <WithStyles(BreadcrumbSeparator)
                                  className="MuiBreadcrumbs-separator"
                                  key="separator-3"
                                >
                                  <BreadcrumbSeparator
                                    className="MuiBreadcrumbs-separator"
                                    classes={
                                      Object {
                                        "root": "PrivateBreadcrumbSeparator-root-482",
                                      }
                                    }
                                  >
                                    <li
                                      aria-hidden={true}
                                      className="PrivateBreadcrumbSeparator-root-482 MuiBreadcrumbs-separator"
                                    >
                                      <ForwardRef
                                        fontSize="small"
                                      >
                                        <WithStyles(ForwardRef(SvgIcon))
                                          fontSize="small"
                                        >
                                          <ForwardRef(SvgIcon)
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                            fontSize="small"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef>
                                    </li>
                                  </BreadcrumbSeparator>
                                </WithStyles(BreadcrumbSeparator)>
                                <li
                                  className="MuiBreadcrumbs-li"
                                  key="child-4"
                                >
                                  <WithStyles(ForwardRef(Typography))
                                    color="textPrimary"
                                    key=".2"
                                  >
                                    <ForwardRef(Typography)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textPrimary"
                                    >
                                      <p
                                        className="MuiTypography-root MuiTypography-body1 MuiTypography-colorTextPrimary"
                                      >
                                        <i>
                                          Datasets
                                        </i>
                                      </p>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                </li>
                              </ol>
                            </nav>
                          </ForwardRef(Typography)>
                        </WithStyles(ForwardRef(Typography))>
                      </ForwardRef(Breadcrumbs)>
                    </WithStyles(ForwardRef(Breadcrumbs))>
                  </Route>
                </div>
              </ForwardRef(Paper)>
            </WithStyles(ForwardRef(Paper))>
          </div>
        </PageBreadcrumbs>
      </Connect(PageBreadcrumbs)>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`PageBreadcrumbs - Snapshot Tests (Generic, ISIS, DLS) renders correctly for ISIS facilityCycles route 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Connect(PageBreadcrumbs)>
        <PageBreadcrumbs
          apiUrl=""
          dispatch={[Function]}
          location="/browse/instrument/1/facilityCycle"
        >
          <div>
            <WithStyles(ForwardRef(Paper))
              elevation={0}
            >
              <ForwardRef(Paper)
                classes={
                  Object {
                    "elevation0": "MuiPaper-elevation0",
                    "elevation1": "MuiPaper-elevation1",
                    "elevation10": "MuiPaper-elevation10",
                    "elevation11": "MuiPaper-elevation11",
                    "elevation12": "MuiPaper-elevation12",
                    "elevation13": "MuiPaper-elevation13",
                    "elevation14": "MuiPaper-elevation14",
                    "elevation15": "MuiPaper-elevation15",
                    "elevation16": "MuiPaper-elevation16",
                    "elevation17": "MuiPaper-elevation17",
                    "elevation18": "MuiPaper-elevation18",
                    "elevation19": "MuiPaper-elevation19",
                    "elevation2": "MuiPaper-elevation2",
                    "elevation20": "MuiPaper-elevation20",
                    "elevation21": "MuiPaper-elevation21",
                    "elevation22": "MuiPaper-elevation22",
                    "elevation23": "MuiPaper-elevation23",
                    "elevation24": "MuiPaper-elevation24",
                    "elevation3": "MuiPaper-elevation3",
                    "elevation4": "MuiPaper-elevation4",
                    "elevation5": "MuiPaper-elevation5",
                    "elevation6": "MuiPaper-elevation6",
                    "elevation7": "MuiPaper-elevation7",
                    "elevation8": "MuiPaper-elevation8",
                    "elevation9": "MuiPaper-elevation9",
                    "root": "MuiPaper-root",
                    "rounded": "MuiPaper-rounded",
                  }
                }
                elevation={0}
              >
                <div
                  className="MuiPaper-root MuiPaper-elevation0 MuiPaper-rounded"
                >
                  <Route>
                    <WithStyles(ForwardRef(Breadcrumbs))
                      aria-label="Breadcrumb"
                      separator={
                        <Memo(NavigateNextIcon)
                          fontSize="small"
                        />
                      }
                    >
                      <ForwardRef(Breadcrumbs)
                        aria-label="Breadcrumb"
                        classes={
                          Object {
                            "li": "MuiBreadcrumbs-li",
                            "ol": "MuiBreadcrumbs-ol",
                            "root": "MuiBreadcrumbs-root",
                            "separator": "MuiBreadcrumbs-separator",
                          }
                        }
                        separator={
                          <Memo(NavigateNextIcon)
                            fontSize="small"
                          />
                        }
                      >
                        <WithStyles(ForwardRef(Typography))
                          aria-label="Breadcrumb"
                          className="MuiBreadcrumbs-root"
                          color="textSecondary"
                          component="nav"
                        >
                          <ForwardRef(Typography)
                            aria-label="Breadcrumb"
                            className="MuiBreadcrumbs-root"
                            classes={
                              Object {
                                "alignCenter": "MuiTypography-alignCenter",
                                "alignJustify": "MuiTypography-alignJustify",
                                "alignLeft": "MuiTypography-alignLeft",
                                "alignRight": "MuiTypography-alignRight",
                                "body1": "MuiTypography-body1",
                                "body2": "MuiTypography-body2",
                                "button": "MuiTypography-button",
                                "caption": "MuiTypography-caption",
                                "colorError": "MuiTypography-colorError",
                                "colorInherit": "MuiTypography-colorInherit",
                                "colorPrimary": "MuiTypography-colorPrimary",
                                "colorSecondary": "MuiTypography-colorSecondary",
                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                "displayBlock": "MuiTypography-displayBlock",
                                "displayInline": "MuiTypography-displayInline",
                                "gutterBottom": "MuiTypography-gutterBottom",
                                "h1": "MuiTypography-h1",
                                "h2": "MuiTypography-h2",
                                "h3": "MuiTypography-h3",
                                "h4": "MuiTypography-h4",
                                "h5": "MuiTypography-h5",
                                "h6": "MuiTypography-h6",
                                "noWrap": "MuiTypography-noWrap",
                                "overline": "MuiTypography-overline",
                                "paragraph": "MuiTypography-paragraph",
                                "root": "MuiTypography-root",
                                "srOnly": "MuiTypography-srOnly",
                                "subtitle1": "MuiTypography-subtitle1",
                                "subtitle2": "MuiTypography-subtitle2",
                              }
                            }
                            color="textSecondary"
                            component="nav"
                          >
                            <nav
                              aria-label="Breadcrumb"
                              className="MuiTypography-root MuiBreadcrumbs-root MuiTypography-body1 MuiTypography-colorTextSecondary"
                            >
                              <ol
                                className="MuiBreadcrumbs-ol"
                              >
                                <li
                                  className="MuiBreadcrumbs-li"
                                  key="child-0"
                                >
                                  <WithStyles(ForwardRef(Link))
                                    component={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "displayName": "Link",
                                        "propTypes": Object {
                                          "innerRef": [Function],
                                          "onClick": [Function],
                                          "replace": [Function],
                                          "target": [Function],
                                          "to": [Function],
                                        },
                                        "render": [Function],
                                      }
                                    }
                                    key=".$base-instrument"
                                    to="/browse/instrument"
                                  >
                                    <ForwardRef(Link)
                                      classes={
                                        Object {
                                          "button": "MuiLink-button",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiLink-root",
                                          "underlineAlways": "MuiLink-underlineAlways",
                                          "underlineHover": "MuiLink-underlineHover",
                                          "underlineNone": "MuiLink-underlineNone",
                                        }
                                      }
                                      component={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "displayName": "Link",
                                          "propTypes": Object {
                                            "innerRef": [Function],
                                            "onClick": [Function],
                                            "replace": [Function],
                                            "target": [Function],
                                            "to": [Function],
                                          },
                                          "render": [Function],
                                        }
                                      }
                                      to="/browse/instrument"
                                    >
                                      <WithStyles(ForwardRef(Typography))
                                        className="MuiLink-root MuiLink-underlineHover"
                                        color="primary"
                                        component={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "displayName": "Link",
                                            "propTypes": Object {
                                              "innerRef": [Function],
                                              "onClick": [Function],
                                              "replace": [Function],
                                              "target": [Function],
                                              "to": [Function],
                                            },
                                            "render": [Function],
                                          }
                                        }
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        to="/browse/instrument"
                                        variant="inherit"
                                      >
                                        <ForwardRef(Typography)
                                          className="MuiLink-root MuiLink-underlineHover"
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter",
                                              "alignJustify": "MuiTypography-alignJustify",
                                              "alignLeft": "MuiTypography-alignLeft",
                                              "alignRight": "MuiTypography-alignRight",
                                              "body1": "MuiTypography-body1",
                                              "body2": "MuiTypography-body2",
                                              "button": "MuiTypography-button",
                                              "caption": "MuiTypography-caption",
                                              "colorError": "MuiTypography-colorError",
                                              "colorInherit": "MuiTypography-colorInherit",
                                              "colorPrimary": "MuiTypography-colorPrimary",
                                              "colorSecondary": "MuiTypography-colorSecondary",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                              "displayBlock": "MuiTypography-displayBlock",
                                              "displayInline": "MuiTypography-displayInline",
                                              "gutterBottom": "MuiTypography-gutterBottom",
                                              "h1": "MuiTypography-h1",
                                              "h2": "MuiTypography-h2",
                                              "h3": "MuiTypography-h3",
                                              "h4": "MuiTypography-h4",
                                              "h5": "MuiTypography-h5",
                                              "h6": "MuiTypography-h6",
                                              "noWrap": "MuiTypography-noWrap",
                                              "overline": "MuiTypography-overline",
                                              "paragraph": "MuiTypography-paragraph",
                                              "root": "MuiTypography-root",
                                              "srOnly": "MuiTypography-srOnly",
                                              "subtitle1": "MuiTypography-subtitle1",
                                              "subtitle2": "MuiTypography-subtitle2",
                                            }
                                          }
                                          color="primary"
                                          component={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "displayName": "Link",
                                              "propTypes": Object {
                                                "innerRef": [Function],
                                                "onClick": [Function],
                                                "replace": [Function],
                                                "target": [Function],
                                                "to": [Function],
                                              },
                                              "render": [Function],
                                            }
                                          }
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          to="/browse/instrument"
                                          variant="inherit"
                                        >
                                          <Link
                                            className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            to="/browse/instrument"
                                          >
                                            <LinkAnchor
                                              className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                              href="/browse/instrument"
                                              navigate={[Function]}
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                            >
                                              <a
                                                className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                                href="/browse/instrument"
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                              >
                                                Instruments
                                              </a>
                                            </LinkAnchor>
                                          </Link>
                                        </ForwardRef(Typography)>
                                      </WithStyles(ForwardRef(Typography))>
                                    </ForwardRef(Link)>
                                  </WithStyles(ForwardRef(Link))>
                                </li>
                                <WithStyles(BreadcrumbSeparator)
                                  className="MuiBreadcrumbs-separator"
                                  key="separator-0"
                                >
                                  <BreadcrumbSeparator
                                    className="MuiBreadcrumbs-separator"
                                    classes={
                                      Object {
                                        "root": "PrivateBreadcrumbSeparator-root-251",
                                      }
                                    }
                                  >
                                    <li
                                      aria-hidden={true}
                                      className="PrivateBreadcrumbSeparator-root-251 MuiBreadcrumbs-separator"
                                    >
                                      <ForwardRef
                                        fontSize="small"
                                      >
                                        <WithStyles(ForwardRef(SvgIcon))
                                          fontSize="small"
                                        >
                                          <ForwardRef(SvgIcon)
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                            fontSize="small"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef>
                                    </li>
                                  </BreadcrumbSeparator>
                                </WithStyles(BreadcrumbSeparator)>
                                <li
                                  className="MuiBreadcrumbs-li"
                                  key="child-1"
                                >
                                  <WithStyles(ForwardRef(Typography))
                                    color="textPrimary"
                                    key=".1:$1"
                                  >
                                    <ForwardRef(Typography)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textPrimary"
                                    >
                                      <p
                                        className="MuiTypography-root MuiTypography-body1 MuiTypography-colorTextPrimary"
                                      >
                                        INVESTIGATION 1
                                      </p>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                </li>
                                <WithStyles(BreadcrumbSeparator)
                                  className="MuiBreadcrumbs-separator"
                                  key="separator-1"
                                >
                                  <BreadcrumbSeparator
                                    className="MuiBreadcrumbs-separator"
                                    classes={
                                      Object {
                                        "root": "PrivateBreadcrumbSeparator-root-251",
                                      }
                                    }
                                  >
                                    <li
                                      aria-hidden={true}
                                      className="PrivateBreadcrumbSeparator-root-251 MuiBreadcrumbs-separator"
                                    >
                                      <ForwardRef
                                        fontSize="small"
                                      >
                                        <WithStyles(ForwardRef(SvgIcon))
                                          fontSize="small"
                                        >
                                          <ForwardRef(SvgIcon)
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                            fontSize="small"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef>
                                    </li>
                                  </BreadcrumbSeparator>
                                </WithStyles(BreadcrumbSeparator)>
                                <li
                                  className="MuiBreadcrumbs-li"
                                  key="child-2"
                                >
                                  <WithStyles(ForwardRef(Typography))
                                    color="textPrimary"
                                    key=".2"
                                  >
                                    <ForwardRef(Typography)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textPrimary"
                                    >
                                      <p
                                        className="MuiTypography-root MuiTypography-body1 MuiTypography-colorTextPrimary"
                                      >
                                        <i>
                                          FacilityCycles
                                        </i>
                                      </p>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                </li>
                              </ol>
                            </nav>
                          </ForwardRef(Typography)>
                        </WithStyles(ForwardRef(Typography))>
                      </ForwardRef(Breadcrumbs)>
                    </WithStyles(ForwardRef(Breadcrumbs))>
                  </Route>
                </div>
              </ForwardRef(Paper)>
            </WithStyles(ForwardRef(Paper))>
          </div>
        </PageBreadcrumbs>
      </Connect(PageBreadcrumbs)>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`PageBreadcrumbs - Snapshot Tests (Generic, ISIS, DLS) renders correctly for ISIS instruments route 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Connect(PageBreadcrumbs)>
        <PageBreadcrumbs
          apiUrl=""
          dispatch={[Function]}
          location="/browse/instrument"
        >
          <div>
            <WithStyles(ForwardRef(Paper))
              elevation={0}
            >
              <ForwardRef(Paper)
                classes={
                  Object {
                    "elevation0": "MuiPaper-elevation0",
                    "elevation1": "MuiPaper-elevation1",
                    "elevation10": "MuiPaper-elevation10",
                    "elevation11": "MuiPaper-elevation11",
                    "elevation12": "MuiPaper-elevation12",
                    "elevation13": "MuiPaper-elevation13",
                    "elevation14": "MuiPaper-elevation14",
                    "elevation15": "MuiPaper-elevation15",
                    "elevation16": "MuiPaper-elevation16",
                    "elevation17": "MuiPaper-elevation17",
                    "elevation18": "MuiPaper-elevation18",
                    "elevation19": "MuiPaper-elevation19",
                    "elevation2": "MuiPaper-elevation2",
                    "elevation20": "MuiPaper-elevation20",
                    "elevation21": "MuiPaper-elevation21",
                    "elevation22": "MuiPaper-elevation22",
                    "elevation23": "MuiPaper-elevation23",
                    "elevation24": "MuiPaper-elevation24",
                    "elevation3": "MuiPaper-elevation3",
                    "elevation4": "MuiPaper-elevation4",
                    "elevation5": "MuiPaper-elevation5",
                    "elevation6": "MuiPaper-elevation6",
                    "elevation7": "MuiPaper-elevation7",
                    "elevation8": "MuiPaper-elevation8",
                    "elevation9": "MuiPaper-elevation9",
                    "root": "MuiPaper-root",
                    "rounded": "MuiPaper-rounded",
                  }
                }
                elevation={0}
              >
                <div
                  className="MuiPaper-root MuiPaper-elevation0 MuiPaper-rounded"
                >
                  <Route>
                    <WithStyles(ForwardRef(Breadcrumbs))
                      aria-label="Breadcrumb"
                      separator={
                        <Memo(NavigateNextIcon)
                          fontSize="small"
                        />
                      }
                    >
                      <ForwardRef(Breadcrumbs)
                        aria-label="Breadcrumb"
                        classes={
                          Object {
                            "li": "MuiBreadcrumbs-li",
                            "ol": "MuiBreadcrumbs-ol",
                            "root": "MuiBreadcrumbs-root",
                            "separator": "MuiBreadcrumbs-separator",
                          }
                        }
                        separator={
                          <Memo(NavigateNextIcon)
                            fontSize="small"
                          />
                        }
                      >
                        <WithStyles(ForwardRef(Typography))
                          aria-label="Breadcrumb"
                          className="MuiBreadcrumbs-root"
                          color="textSecondary"
                          component="nav"
                        >
                          <ForwardRef(Typography)
                            aria-label="Breadcrumb"
                            className="MuiBreadcrumbs-root"
                            classes={
                              Object {
                                "alignCenter": "MuiTypography-alignCenter",
                                "alignJustify": "MuiTypography-alignJustify",
                                "alignLeft": "MuiTypography-alignLeft",
                                "alignRight": "MuiTypography-alignRight",
                                "body1": "MuiTypography-body1",
                                "body2": "MuiTypography-body2",
                                "button": "MuiTypography-button",
                                "caption": "MuiTypography-caption",
                                "colorError": "MuiTypography-colorError",
                                "colorInherit": "MuiTypography-colorInherit",
                                "colorPrimary": "MuiTypography-colorPrimary",
                                "colorSecondary": "MuiTypography-colorSecondary",
                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                "displayBlock": "MuiTypography-displayBlock",
                                "displayInline": "MuiTypography-displayInline",
                                "gutterBottom": "MuiTypography-gutterBottom",
                                "h1": "MuiTypography-h1",
                                "h2": "MuiTypography-h2",
                                "h3": "MuiTypography-h3",
                                "h4": "MuiTypography-h4",
                                "h5": "MuiTypography-h5",
                                "h6": "MuiTypography-h6",
                                "noWrap": "MuiTypography-noWrap",
                                "overline": "MuiTypography-overline",
                                "paragraph": "MuiTypography-paragraph",
                                "root": "MuiTypography-root",
                                "srOnly": "MuiTypography-srOnly",
                                "subtitle1": "MuiTypography-subtitle1",
                                "subtitle2": "MuiTypography-subtitle2",
                              }
                            }
                            color="textSecondary"
                            component="nav"
                          >
                            <nav
                              aria-label="Breadcrumb"
                              className="MuiTypography-root MuiBreadcrumbs-root MuiTypography-body1 MuiTypography-colorTextSecondary"
                            >
                              <ol
                                className="MuiBreadcrumbs-ol"
                              >
                                <li
                                  className="MuiBreadcrumbs-li"
                                  key="child-0"
                                >
                                  <WithStyles(ForwardRef(Typography))
                                    color="textPrimary"
                                    key=".$base-instrument"
                                  >
                                    <ForwardRef(Typography)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textPrimary"
                                    >
                                      <p
                                        className="MuiTypography-root MuiTypography-body1 MuiTypography-colorTextPrimary"
                                      >
                                        Instruments
                                      </p>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                </li>
                              </ol>
                            </nav>
                          </ForwardRef(Typography)>
                        </WithStyles(ForwardRef(Typography))>
                      </ForwardRef(Breadcrumbs)>
                    </WithStyles(ForwardRef(Breadcrumbs))>
                  </Route>
                </div>
              </ForwardRef(Paper)>
            </WithStyles(ForwardRef(Paper))>
          </div>
        </PageBreadcrumbs>
      </Connect(PageBreadcrumbs)>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`PageBreadcrumbs - Snapshot Tests (Generic, ISIS, DLS) renders correctly for generic datafiles route 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Connect(PageBreadcrumbs)>
        <PageBreadcrumbs
          apiUrl=""
          dispatch={[Function]}
          location="/browse/investigation/1/dataset/1/datafile"
        >
          <div>
            <WithStyles(ForwardRef(Paper))
              elevation={0}
            >
              <ForwardRef(Paper)
                classes={
                  Object {
                    "elevation0": "MuiPaper-elevation0",
                    "elevation1": "MuiPaper-elevation1",
                    "elevation10": "MuiPaper-elevation10",
                    "elevation11": "MuiPaper-elevation11",
                    "elevation12": "MuiPaper-elevation12",
                    "elevation13": "MuiPaper-elevation13",
                    "elevation14": "MuiPaper-elevation14",
                    "elevation15": "MuiPaper-elevation15",
                    "elevation16": "MuiPaper-elevation16",
                    "elevation17": "MuiPaper-elevation17",
                    "elevation18": "MuiPaper-elevation18",
                    "elevation19": "MuiPaper-elevation19",
                    "elevation2": "MuiPaper-elevation2",
                    "elevation20": "MuiPaper-elevation20",
                    "elevation21": "MuiPaper-elevation21",
                    "elevation22": "MuiPaper-elevation22",
                    "elevation23": "MuiPaper-elevation23",
                    "elevation24": "MuiPaper-elevation24",
                    "elevation3": "MuiPaper-elevation3",
                    "elevation4": "MuiPaper-elevation4",
                    "elevation5": "MuiPaper-elevation5",
                    "elevation6": "MuiPaper-elevation6",
                    "elevation7": "MuiPaper-elevation7",
                    "elevation8": "MuiPaper-elevation8",
                    "elevation9": "MuiPaper-elevation9",
                    "root": "MuiPaper-root",
                    "rounded": "MuiPaper-rounded",
                  }
                }
                elevation={0}
              >
                <div
                  className="MuiPaper-root MuiPaper-elevation0 MuiPaper-rounded"
                >
                  <Route>
                    <WithStyles(ForwardRef(Breadcrumbs))
                      aria-label="Breadcrumb"
                      separator={
                        <Memo(NavigateNextIcon)
                          fontSize="small"
                        />
                      }
                    >
                      <ForwardRef(Breadcrumbs)
                        aria-label="Breadcrumb"
                        classes={
                          Object {
                            "li": "MuiBreadcrumbs-li",
                            "ol": "MuiBreadcrumbs-ol",
                            "root": "MuiBreadcrumbs-root",
                            "separator": "MuiBreadcrumbs-separator",
                          }
                        }
                        separator={
                          <Memo(NavigateNextIcon)
                            fontSize="small"
                          />
                        }
                      >
                        <WithStyles(ForwardRef(Typography))
                          aria-label="Breadcrumb"
                          className="MuiBreadcrumbs-root"
                          color="textSecondary"
                          component="nav"
                        >
                          <ForwardRef(Typography)
                            aria-label="Breadcrumb"
                            className="MuiBreadcrumbs-root"
                            classes={
                              Object {
                                "alignCenter": "MuiTypography-alignCenter",
                                "alignJustify": "MuiTypography-alignJustify",
                                "alignLeft": "MuiTypography-alignLeft",
                                "alignRight": "MuiTypography-alignRight",
                                "body1": "MuiTypography-body1",
                                "body2": "MuiTypography-body2",
                                "button": "MuiTypography-button",
                                "caption": "MuiTypography-caption",
                                "colorError": "MuiTypography-colorError",
                                "colorInherit": "MuiTypography-colorInherit",
                                "colorPrimary": "MuiTypography-colorPrimary",
                                "colorSecondary": "MuiTypography-colorSecondary",
                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                "displayBlock": "MuiTypography-displayBlock",
                                "displayInline": "MuiTypography-displayInline",
                                "gutterBottom": "MuiTypography-gutterBottom",
                                "h1": "MuiTypography-h1",
                                "h2": "MuiTypography-h2",
                                "h3": "MuiTypography-h3",
                                "h4": "MuiTypography-h4",
                                "h5": "MuiTypography-h5",
                                "h6": "MuiTypography-h6",
                                "noWrap": "MuiTypography-noWrap",
                                "overline": "MuiTypography-overline",
                                "paragraph": "MuiTypography-paragraph",
                                "root": "MuiTypography-root",
                                "srOnly": "MuiTypography-srOnly",
                                "subtitle1": "MuiTypography-subtitle1",
                                "subtitle2": "MuiTypography-subtitle2",
                              }
                            }
                            color="textSecondary"
                            component="nav"
                          >
                            <nav
                              aria-label="Breadcrumb"
                              className="MuiTypography-root MuiBreadcrumbs-root MuiTypography-body1 MuiTypography-colorTextSecondary"
                            >
                              <ol
                                className="MuiBreadcrumbs-ol"
                              >
                                <li
                                  className="MuiBreadcrumbs-li"
                                  key="child-0"
                                >
                                  <WithStyles(ForwardRef(Link))
                                    component={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "displayName": "Link",
                                        "propTypes": Object {
                                          "innerRef": [Function],
                                          "onClick": [Function],
                                          "replace": [Function],
                                          "target": [Function],
                                          "to": [Function],
                                        },
                                        "render": [Function],
                                      }
                                    }
                                    key=".$base-investigation"
                                    to="/browse/investigation"
                                  >
                                    <ForwardRef(Link)
                                      classes={
                                        Object {
                                          "button": "MuiLink-button",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiLink-root",
                                          "underlineAlways": "MuiLink-underlineAlways",
                                          "underlineHover": "MuiLink-underlineHover",
                                          "underlineNone": "MuiLink-underlineNone",
                                        }
                                      }
                                      component={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "displayName": "Link",
                                          "propTypes": Object {
                                            "innerRef": [Function],
                                            "onClick": [Function],
                                            "replace": [Function],
                                            "target": [Function],
                                            "to": [Function],
                                          },
                                          "render": [Function],
                                        }
                                      }
                                      to="/browse/investigation"
                                    >
                                      <WithStyles(ForwardRef(Typography))
                                        className="MuiLink-root MuiLink-underlineHover"
                                        color="primary"
                                        component={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "displayName": "Link",
                                            "propTypes": Object {
                                              "innerRef": [Function],
                                              "onClick": [Function],
                                              "replace": [Function],
                                              "target": [Function],
                                              "to": [Function],
                                            },
                                            "render": [Function],
                                          }
                                        }
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        to="/browse/investigation"
                                        variant="inherit"
                                      >
                                        <ForwardRef(Typography)
                                          className="MuiLink-root MuiLink-underlineHover"
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter",
                                              "alignJustify": "MuiTypography-alignJustify",
                                              "alignLeft": "MuiTypography-alignLeft",
                                              "alignRight": "MuiTypography-alignRight",
                                              "body1": "MuiTypography-body1",
                                              "body2": "MuiTypography-body2",
                                              "button": "MuiTypography-button",
                                              "caption": "MuiTypography-caption",
                                              "colorError": "MuiTypography-colorError",
                                              "colorInherit": "MuiTypography-colorInherit",
                                              "colorPrimary": "MuiTypography-colorPrimary",
                                              "colorSecondary": "MuiTypography-colorSecondary",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                              "displayBlock": "MuiTypography-displayBlock",
                                              "displayInline": "MuiTypography-displayInline",
                                              "gutterBottom": "MuiTypography-gutterBottom",
                                              "h1": "MuiTypography-h1",
                                              "h2": "MuiTypography-h2",
                                              "h3": "MuiTypography-h3",
                                              "h4": "MuiTypography-h4",
                                              "h5": "MuiTypography-h5",
                                              "h6": "MuiTypography-h6",
                                              "noWrap": "MuiTypography-noWrap",
                                              "overline": "MuiTypography-overline",
                                              "paragraph": "MuiTypography-paragraph",
                                              "root": "MuiTypography-root",
                                              "srOnly": "MuiTypography-srOnly",
                                              "subtitle1": "MuiTypography-subtitle1",
                                              "subtitle2": "MuiTypography-subtitle2",
                                            }
                                          }
                                          color="primary"
                                          component={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "displayName": "Link",
                                              "propTypes": Object {
                                                "innerRef": [Function],
                                                "onClick": [Function],
                                                "replace": [Function],
                                                "target": [Function],
                                                "to": [Function],
                                              },
                                              "render": [Function],
                                            }
                                          }
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          to="/browse/investigation"
                                          variant="inherit"
                                        >
                                          <Link
                                            className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            to="/browse/investigation"
                                          >
                                            <LinkAnchor
                                              className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                              href="/browse/investigation"
                                              navigate={[Function]}
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                            >
                                              <a
                                                className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                                href="/browse/investigation"
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                              >
                                                Investigations
                                              </a>
                                            </LinkAnchor>
                                          </Link>
                                        </ForwardRef(Typography)>
                                      </WithStyles(ForwardRef(Typography))>
                                    </ForwardRef(Link)>
                                  </WithStyles(ForwardRef(Link))>
                                </li>
                                <WithStyles(BreadcrumbSeparator)
                                  className="MuiBreadcrumbs-separator"
                                  key="separator-0"
                                >
                                  <BreadcrumbSeparator
                                    className="MuiBreadcrumbs-separator"
                                    classes={
                                      Object {
                                        "root": "PrivateBreadcrumbSeparator-root-636",
                                      }
                                    }
                                  >
                                    <li
                                      aria-hidden={true}
                                      className="PrivateBreadcrumbSeparator-root-636 MuiBreadcrumbs-separator"
                                    >
                                      <ForwardRef
                                        fontSize="small"
                                      >
                                        <WithStyles(ForwardRef(SvgIcon))
                                          fontSize="small"
                                        >
                                          <ForwardRef(SvgIcon)
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                            fontSize="small"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef>
                                    </li>
                                  </BreadcrumbSeparator>
                                </WithStyles(BreadcrumbSeparator)>
                                <li
                                  className="MuiBreadcrumbs-li"
                                  key="child-1"
                                >
                                  <WithStyles(ForwardRef(Link))
                                    component={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "displayName": "Link",
                                        "propTypes": Object {
                                          "innerRef": [Function],
                                          "onClick": [Function],
                                          "replace": [Function],
                                          "target": [Function],
                                          "to": [Function],
                                        },
                                        "render": [Function],
                                      }
                                    }
                                    key=".1:$1"
                                    to="/browse/investigation/1/dataset"
                                  >
                                    <ForwardRef(Link)
                                      classes={
                                        Object {
                                          "button": "MuiLink-button",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiLink-root",
                                          "underlineAlways": "MuiLink-underlineAlways",
                                          "underlineHover": "MuiLink-underlineHover",
                                          "underlineNone": "MuiLink-underlineNone",
                                        }
                                      }
                                      component={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "displayName": "Link",
                                          "propTypes": Object {
                                            "innerRef": [Function],
                                            "onClick": [Function],
                                            "replace": [Function],
                                            "target": [Function],
                                            "to": [Function],
                                          },
                                          "render": [Function],
                                        }
                                      }
                                      to="/browse/investigation/1/dataset"
                                    >
                                      <WithStyles(ForwardRef(Typography))
                                        className="MuiLink-root MuiLink-underlineHover"
                                        color="primary"
                                        component={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "displayName": "Link",
                                            "propTypes": Object {
                                              "innerRef": [Function],
                                              "onClick": [Function],
                                              "replace": [Function],
                                              "target": [Function],
                                              "to": [Function],
                                            },
                                            "render": [Function],
                                          }
                                        }
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        to="/browse/investigation/1/dataset"
                                        variant="inherit"
                                      >
                                        <ForwardRef(Typography)
                                          className="MuiLink-root MuiLink-underlineHover"
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter",
                                              "alignJustify": "MuiTypography-alignJustify",
                                              "alignLeft": "MuiTypography-alignLeft",
                                              "alignRight": "MuiTypography-alignRight",
                                              "body1": "MuiTypography-body1",
                                              "body2": "MuiTypography-body2",
                                              "button": "MuiTypography-button",
                                              "caption": "MuiTypography-caption",
                                              "colorError": "MuiTypography-colorError",
                                              "colorInherit": "MuiTypography-colorInherit",
                                              "colorPrimary": "MuiTypography-colorPrimary",
                                              "colorSecondary": "MuiTypography-colorSecondary",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                              "displayBlock": "MuiTypography-displayBlock",
                                              "displayInline": "MuiTypography-displayInline",
                                              "gutterBottom": "MuiTypography-gutterBottom",
                                              "h1": "MuiTypography-h1",
                                              "h2": "MuiTypography-h2",
                                              "h3": "MuiTypography-h3",
                                              "h4": "MuiTypography-h4",
                                              "h5": "MuiTypography-h5",
                                              "h6": "MuiTypography-h6",
                                              "noWrap": "MuiTypography-noWrap",
                                              "overline": "MuiTypography-overline",
                                              "paragraph": "MuiTypography-paragraph",
                                              "root": "MuiTypography-root",
                                              "srOnly": "MuiTypography-srOnly",
                                              "subtitle1": "MuiTypography-subtitle1",
                                              "subtitle2": "MuiTypography-subtitle2",
                                            }
                                          }
                                          color="primary"
                                          component={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "displayName": "Link",
                                              "propTypes": Object {
                                                "innerRef": [Function],
                                                "onClick": [Function],
                                                "replace": [Function],
                                                "target": [Function],
                                                "to": [Function],
                                              },
                                              "render": [Function],
                                            }
                                          }
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          to="/browse/investigation/1/dataset"
                                          variant="inherit"
                                        >
                                          <Link
                                            className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            to="/browse/investigation/1/dataset"
                                          >
                                            <LinkAnchor
                                              className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                              href="/browse/investigation/1/dataset"
                                              navigate={[Function]}
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                            >
                                              <a
                                                className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                                href="/browse/investigation/1/dataset"
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                              >
                                                Test 1
                                              </a>
                                            </LinkAnchor>
                                          </Link>
                                        </ForwardRef(Typography)>
                                      </WithStyles(ForwardRef(Typography))>
                                    </ForwardRef(Link)>
                                  </WithStyles(ForwardRef(Link))>
                                </li>
                                <WithStyles(BreadcrumbSeparator)
                                  className="MuiBreadcrumbs-separator"
                                  key="separator-1"
                                >
                                  <BreadcrumbSeparator
                                    className="MuiBreadcrumbs-separator"
                                    classes={
                                      Object {
                                        "root": "PrivateBreadcrumbSeparator-root-636",
                                      }
                                    }
                                  >
                                    <li
                                      aria-hidden={true}
                                      className="PrivateBreadcrumbSeparator-root-636 MuiBreadcrumbs-separator"
                                    >
                                      <ForwardRef
                                        fontSize="small"
                                      >
                                        <WithStyles(ForwardRef(SvgIcon))
                                          fontSize="small"
                                        >
                                          <ForwardRef(SvgIcon)
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                            fontSize="small"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef>
                                    </li>
                                  </BreadcrumbSeparator>
                                </WithStyles(BreadcrumbSeparator)>
                                <li
                                  className="MuiBreadcrumbs-li"
                                  key="child-2"
                                >
                                  <WithStyles(ForwardRef(Typography))
                                    color="textPrimary"
                                    key=".1:$1"
                                  >
                                    <ForwardRef(Typography)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textPrimary"
                                    >
                                      <p
                                        className="MuiTypography-root MuiTypography-body1 MuiTypography-colorTextPrimary"
                                      >
                                        INVESTIGATION 1
                                      </p>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                </li>
                                <WithStyles(BreadcrumbSeparator)
                                  className="MuiBreadcrumbs-separator"
                                  key="separator-2"
                                >
                                  <BreadcrumbSeparator
                                    className="MuiBreadcrumbs-separator"
                                    classes={
                                      Object {
                                        "root": "PrivateBreadcrumbSeparator-root-636",
                                      }
                                    }
                                  >
                                    <li
                                      aria-hidden={true}
                                      className="PrivateBreadcrumbSeparator-root-636 MuiBreadcrumbs-separator"
                                    >
                                      <ForwardRef
                                        fontSize="small"
                                      >
                                        <WithStyles(ForwardRef(SvgIcon))
                                          fontSize="small"
                                        >
                                          <ForwardRef(SvgIcon)
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                            fontSize="small"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef>
                                    </li>
                                  </BreadcrumbSeparator>
                                </WithStyles(BreadcrumbSeparator)>
                                <li
                                  className="MuiBreadcrumbs-li"
                                  key="child-3"
                                >
                                  <WithStyles(ForwardRef(Typography))
                                    color="textPrimary"
                                    key=".2"
                                  >
                                    <ForwardRef(Typography)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textPrimary"
                                    >
                                      <p
                                        className="MuiTypography-root MuiTypography-body1 MuiTypography-colorTextPrimary"
                                      >
                                        <i>
                                          Datafiles
                                        </i>
                                      </p>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                </li>
                              </ol>
                            </nav>
                          </ForwardRef(Typography)>
                        </WithStyles(ForwardRef(Typography))>
                      </ForwardRef(Breadcrumbs)>
                    </WithStyles(ForwardRef(Breadcrumbs))>
                  </Route>
                </div>
              </ForwardRef(Paper)>
            </WithStyles(ForwardRef(Paper))>
          </div>
        </PageBreadcrumbs>
      </Connect(PageBreadcrumbs)>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`PageBreadcrumbs - Snapshot Tests (Generic, ISIS, DLS) renders correctly for generic datasets route 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Connect(PageBreadcrumbs)>
        <PageBreadcrumbs
          apiUrl=""
          dispatch={[Function]}
          location="/browse/investigation/1/dataset"
        >
          <div>
            <WithStyles(ForwardRef(Paper))
              elevation={0}
            >
              <ForwardRef(Paper)
                classes={
                  Object {
                    "elevation0": "MuiPaper-elevation0",
                    "elevation1": "MuiPaper-elevation1",
                    "elevation10": "MuiPaper-elevation10",
                    "elevation11": "MuiPaper-elevation11",
                    "elevation12": "MuiPaper-elevation12",
                    "elevation13": "MuiPaper-elevation13",
                    "elevation14": "MuiPaper-elevation14",
                    "elevation15": "MuiPaper-elevation15",
                    "elevation16": "MuiPaper-elevation16",
                    "elevation17": "MuiPaper-elevation17",
                    "elevation18": "MuiPaper-elevation18",
                    "elevation19": "MuiPaper-elevation19",
                    "elevation2": "MuiPaper-elevation2",
                    "elevation20": "MuiPaper-elevation20",
                    "elevation21": "MuiPaper-elevation21",
                    "elevation22": "MuiPaper-elevation22",
                    "elevation23": "MuiPaper-elevation23",
                    "elevation24": "MuiPaper-elevation24",
                    "elevation3": "MuiPaper-elevation3",
                    "elevation4": "MuiPaper-elevation4",
                    "elevation5": "MuiPaper-elevation5",
                    "elevation6": "MuiPaper-elevation6",
                    "elevation7": "MuiPaper-elevation7",
                    "elevation8": "MuiPaper-elevation8",
                    "elevation9": "MuiPaper-elevation9",
                    "root": "MuiPaper-root",
                    "rounded": "MuiPaper-rounded",
                  }
                }
                elevation={0}
              >
                <div
                  className="MuiPaper-root MuiPaper-elevation0 MuiPaper-rounded"
                >
                  <Route>
                    <WithStyles(ForwardRef(Breadcrumbs))
                      aria-label="Breadcrumb"
                      separator={
                        <Memo(NavigateNextIcon)
                          fontSize="small"
                        />
                      }
                    >
                      <ForwardRef(Breadcrumbs)
                        aria-label="Breadcrumb"
                        classes={
                          Object {
                            "li": "MuiBreadcrumbs-li",
                            "ol": "MuiBreadcrumbs-ol",
                            "root": "MuiBreadcrumbs-root",
                            "separator": "MuiBreadcrumbs-separator",
                          }
                        }
                        separator={
                          <Memo(NavigateNextIcon)
                            fontSize="small"
                          />
                        }
                      >
                        <WithStyles(ForwardRef(Typography))
                          aria-label="Breadcrumb"
                          className="MuiBreadcrumbs-root"
                          color="textSecondary"
                          component="nav"
                        >
                          <ForwardRef(Typography)
                            aria-label="Breadcrumb"
                            className="MuiBreadcrumbs-root"
                            classes={
                              Object {
                                "alignCenter": "MuiTypography-alignCenter",
                                "alignJustify": "MuiTypography-alignJustify",
                                "alignLeft": "MuiTypography-alignLeft",
                                "alignRight": "MuiTypography-alignRight",
                                "body1": "MuiTypography-body1",
                                "body2": "MuiTypography-body2",
                                "button": "MuiTypography-button",
                                "caption": "MuiTypography-caption",
                                "colorError": "MuiTypography-colorError",
                                "colorInherit": "MuiTypography-colorInherit",
                                "colorPrimary": "MuiTypography-colorPrimary",
                                "colorSecondary": "MuiTypography-colorSecondary",
                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                "displayBlock": "MuiTypography-displayBlock",
                                "displayInline": "MuiTypography-displayInline",
                                "gutterBottom": "MuiTypography-gutterBottom",
                                "h1": "MuiTypography-h1",
                                "h2": "MuiTypography-h2",
                                "h3": "MuiTypography-h3",
                                "h4": "MuiTypography-h4",
                                "h5": "MuiTypography-h5",
                                "h6": "MuiTypography-h6",
                                "noWrap": "MuiTypography-noWrap",
                                "overline": "MuiTypography-overline",
                                "paragraph": "MuiTypography-paragraph",
                                "root": "MuiTypography-root",
                                "srOnly": "MuiTypography-srOnly",
                                "subtitle1": "MuiTypography-subtitle1",
                                "subtitle2": "MuiTypography-subtitle2",
                              }
                            }
                            color="textSecondary"
                            component="nav"
                          >
                            <nav
                              aria-label="Breadcrumb"
                              className="MuiTypography-root MuiBreadcrumbs-root MuiTypography-body1 MuiTypography-colorTextSecondary"
                            >
                              <ol
                                className="MuiBreadcrumbs-ol"
                              >
                                <li
                                  className="MuiBreadcrumbs-li"
                                  key="child-0"
                                >
                                  <WithStyles(ForwardRef(Link))
                                    component={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "displayName": "Link",
                                        "propTypes": Object {
                                          "innerRef": [Function],
                                          "onClick": [Function],
                                          "replace": [Function],
                                          "target": [Function],
                                          "to": [Function],
                                        },
                                        "render": [Function],
                                      }
                                    }
                                    key=".$base-investigation"
                                    to="/browse/investigation"
                                  >
                                    <ForwardRef(Link)
                                      classes={
                                        Object {
                                          "button": "MuiLink-button",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiLink-root",
                                          "underlineAlways": "MuiLink-underlineAlways",
                                          "underlineHover": "MuiLink-underlineHover",
                                          "underlineNone": "MuiLink-underlineNone",
                                        }
                                      }
                                      component={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "displayName": "Link",
                                          "propTypes": Object {
                                            "innerRef": [Function],
                                            "onClick": [Function],
                                            "replace": [Function],
                                            "target": [Function],
                                            "to": [Function],
                                          },
                                          "render": [Function],
                                        }
                                      }
                                      to="/browse/investigation"
                                    >
                                      <WithStyles(ForwardRef(Typography))
                                        className="MuiLink-root MuiLink-underlineHover"
                                        color="primary"
                                        component={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "displayName": "Link",
                                            "propTypes": Object {
                                              "innerRef": [Function],
                                              "onClick": [Function],
                                              "replace": [Function],
                                              "target": [Function],
                                              "to": [Function],
                                            },
                                            "render": [Function],
                                          }
                                        }
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        to="/browse/investigation"
                                        variant="inherit"
                                      >
                                        <ForwardRef(Typography)
                                          className="MuiLink-root MuiLink-underlineHover"
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter",
                                              "alignJustify": "MuiTypography-alignJustify",
                                              "alignLeft": "MuiTypography-alignLeft",
                                              "alignRight": "MuiTypography-alignRight",
                                              "body1": "MuiTypography-body1",
                                              "body2": "MuiTypography-body2",
                                              "button": "MuiTypography-button",
                                              "caption": "MuiTypography-caption",
                                              "colorError": "MuiTypography-colorError",
                                              "colorInherit": "MuiTypography-colorInherit",
                                              "colorPrimary": "MuiTypography-colorPrimary",
                                              "colorSecondary": "MuiTypography-colorSecondary",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                              "displayBlock": "MuiTypography-displayBlock",
                                              "displayInline": "MuiTypography-displayInline",
                                              "gutterBottom": "MuiTypography-gutterBottom",
                                              "h1": "MuiTypography-h1",
                                              "h2": "MuiTypography-h2",
                                              "h3": "MuiTypography-h3",
                                              "h4": "MuiTypography-h4",
                                              "h5": "MuiTypography-h5",
                                              "h6": "MuiTypography-h6",
                                              "noWrap": "MuiTypography-noWrap",
                                              "overline": "MuiTypography-overline",
                                              "paragraph": "MuiTypography-paragraph",
                                              "root": "MuiTypography-root",
                                              "srOnly": "MuiTypography-srOnly",
                                              "subtitle1": "MuiTypography-subtitle1",
                                              "subtitle2": "MuiTypography-subtitle2",
                                            }
                                          }
                                          color="primary"
                                          component={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "displayName": "Link",
                                              "propTypes": Object {
                                                "innerRef": [Function],
                                                "onClick": [Function],
                                                "replace": [Function],
                                                "target": [Function],
                                                "to": [Function],
                                              },
                                              "render": [Function],
                                            }
                                          }
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          to="/browse/investigation"
                                          variant="inherit"
                                        >
                                          <Link
                                            className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            to="/browse/investigation"
                                          >
                                            <LinkAnchor
                                              className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                              href="/browse/investigation"
                                              navigate={[Function]}
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                            >
                                              <a
                                                className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                                href="/browse/investigation"
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                              >
                                                Investigations
                                              </a>
                                            </LinkAnchor>
                                          </Link>
                                        </ForwardRef(Typography)>
                                      </WithStyles(ForwardRef(Typography))>
                                    </ForwardRef(Link)>
                                  </WithStyles(ForwardRef(Link))>
                                </li>
                                <WithStyles(BreadcrumbSeparator)
                                  className="MuiBreadcrumbs-separator"
                                  key="separator-0"
                                >
                                  <BreadcrumbSeparator
                                    className="MuiBreadcrumbs-separator"
                                    classes={
                                      Object {
                                        "root": "PrivateBreadcrumbSeparator-root-405",
                                      }
                                    }
                                  >
                                    <li
                                      aria-hidden={true}
                                      className="PrivateBreadcrumbSeparator-root-405 MuiBreadcrumbs-separator"
                                    >
                                      <ForwardRef
                                        fontSize="small"
                                      >
                                        <WithStyles(ForwardRef(SvgIcon))
                                          fontSize="small"
                                        >
                                          <ForwardRef(SvgIcon)
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                            fontSize="small"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef>
                                    </li>
                                  </BreadcrumbSeparator>
                                </WithStyles(BreadcrumbSeparator)>
                                <li
                                  className="MuiBreadcrumbs-li"
                                  key="child-1"
                                >
                                  <WithStyles(ForwardRef(Typography))
                                    color="textPrimary"
                                    key=".1:$1"
                                  >
                                    <ForwardRef(Typography)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textPrimary"
                                    >
                                      <p
                                        className="MuiTypography-root MuiTypography-body1 MuiTypography-colorTextPrimary"
                                      >
                                        Test 1
                                      </p>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                </li>
                                <WithStyles(BreadcrumbSeparator)
                                  className="MuiBreadcrumbs-separator"
                                  key="separator-1"
                                >
                                  <BreadcrumbSeparator
                                    className="MuiBreadcrumbs-separator"
                                    classes={
                                      Object {
                                        "root": "PrivateBreadcrumbSeparator-root-405",
                                      }
                                    }
                                  >
                                    <li
                                      aria-hidden={true}
                                      className="PrivateBreadcrumbSeparator-root-405 MuiBreadcrumbs-separator"
                                    >
                                      <ForwardRef
                                        fontSize="small"
                                      >
                                        <WithStyles(ForwardRef(SvgIcon))
                                          fontSize="small"
                                        >
                                          <ForwardRef(SvgIcon)
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                            fontSize="small"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef>
                                    </li>
                                  </BreadcrumbSeparator>
                                </WithStyles(BreadcrumbSeparator)>
                                <li
                                  className="MuiBreadcrumbs-li"
                                  key="child-2"
                                >
                                  <WithStyles(ForwardRef(Typography))
                                    color="textPrimary"
                                    key=".2"
                                  >
                                    <ForwardRef(Typography)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textPrimary"
                                    >
                                      <p
                                        className="MuiTypography-root MuiTypography-body1 MuiTypography-colorTextPrimary"
                                      >
                                        <i>
                                          Datasets
                                        </i>
                                      </p>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                </li>
                              </ol>
                            </nav>
                          </ForwardRef(Typography)>
                        </WithStyles(ForwardRef(Typography))>
                      </ForwardRef(Breadcrumbs)>
                    </WithStyles(ForwardRef(Breadcrumbs))>
                  </Route>
                </div>
              </ForwardRef(Paper)>
            </WithStyles(ForwardRef(Paper))>
          </div>
        </PageBreadcrumbs>
      </Connect(PageBreadcrumbs)>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`PageBreadcrumbs - Snapshot Tests (Generic, ISIS, DLS) renders correctly for generic investigations route 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Connect(PageBreadcrumbs)>
        <PageBreadcrumbs
          apiUrl=""
          dispatch={[Function]}
          location="/browse/investigation"
        >
          <div>
            <WithStyles(ForwardRef(Paper))
              elevation={0}
            >
              <ForwardRef(Paper)
                classes={
                  Object {
                    "elevation0": "MuiPaper-elevation0",
                    "elevation1": "MuiPaper-elevation1",
                    "elevation10": "MuiPaper-elevation10",
                    "elevation11": "MuiPaper-elevation11",
                    "elevation12": "MuiPaper-elevation12",
                    "elevation13": "MuiPaper-elevation13",
                    "elevation14": "MuiPaper-elevation14",
                    "elevation15": "MuiPaper-elevation15",
                    "elevation16": "MuiPaper-elevation16",
                    "elevation17": "MuiPaper-elevation17",
                    "elevation18": "MuiPaper-elevation18",
                    "elevation19": "MuiPaper-elevation19",
                    "elevation2": "MuiPaper-elevation2",
                    "elevation20": "MuiPaper-elevation20",
                    "elevation21": "MuiPaper-elevation21",
                    "elevation22": "MuiPaper-elevation22",
                    "elevation23": "MuiPaper-elevation23",
                    "elevation24": "MuiPaper-elevation24",
                    "elevation3": "MuiPaper-elevation3",
                    "elevation4": "MuiPaper-elevation4",
                    "elevation5": "MuiPaper-elevation5",
                    "elevation6": "MuiPaper-elevation6",
                    "elevation7": "MuiPaper-elevation7",
                    "elevation8": "MuiPaper-elevation8",
                    "elevation9": "MuiPaper-elevation9",
                    "root": "MuiPaper-root",
                    "rounded": "MuiPaper-rounded",
                  }
                }
                elevation={0}
              >
                <div
                  className="MuiPaper-root MuiPaper-elevation0 MuiPaper-rounded"
                >
                  <Route>
                    <WithStyles(ForwardRef(Breadcrumbs))
                      aria-label="Breadcrumb"
                      separator={
                        <Memo(NavigateNextIcon)
                          fontSize="small"
                        />
                      }
                    >
                      <ForwardRef(Breadcrumbs)
                        aria-label="Breadcrumb"
                        classes={
                          Object {
                            "li": "MuiBreadcrumbs-li",
                            "ol": "MuiBreadcrumbs-ol",
                            "root": "MuiBreadcrumbs-root",
                            "separator": "MuiBreadcrumbs-separator",
                          }
                        }
                        separator={
                          <Memo(NavigateNextIcon)
                            fontSize="small"
                          />
                        }
                      >
                        <WithStyles(ForwardRef(Typography))
                          aria-label="Breadcrumb"
                          className="MuiBreadcrumbs-root"
                          color="textSecondary"
                          component="nav"
                        >
                          <ForwardRef(Typography)
                            aria-label="Breadcrumb"
                            className="MuiBreadcrumbs-root"
                            classes={
                              Object {
                                "alignCenter": "MuiTypography-alignCenter",
                                "alignJustify": "MuiTypography-alignJustify",
                                "alignLeft": "MuiTypography-alignLeft",
                                "alignRight": "MuiTypography-alignRight",
                                "body1": "MuiTypography-body1",
                                "body2": "MuiTypography-body2",
                                "button": "MuiTypography-button",
                                "caption": "MuiTypography-caption",
                                "colorError": "MuiTypography-colorError",
                                "colorInherit": "MuiTypography-colorInherit",
                                "colorPrimary": "MuiTypography-colorPrimary",
                                "colorSecondary": "MuiTypography-colorSecondary",
                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                "displayBlock": "MuiTypography-displayBlock",
                                "displayInline": "MuiTypography-displayInline",
                                "gutterBottom": "MuiTypography-gutterBottom",
                                "h1": "MuiTypography-h1",
                                "h2": "MuiTypography-h2",
                                "h3": "MuiTypography-h3",
                                "h4": "MuiTypography-h4",
                                "h5": "MuiTypography-h5",
                                "h6": "MuiTypography-h6",
                                "noWrap": "MuiTypography-noWrap",
                                "overline": "MuiTypography-overline",
                                "paragraph": "MuiTypography-paragraph",
                                "root": "MuiTypography-root",
                                "srOnly": "MuiTypography-srOnly",
                                "subtitle1": "MuiTypography-subtitle1",
                                "subtitle2": "MuiTypography-subtitle2",
                              }
                            }
                            color="textSecondary"
                            component="nav"
                          >
                            <nav
                              aria-label="Breadcrumb"
                              className="MuiTypography-root MuiBreadcrumbs-root MuiTypography-body1 MuiTypography-colorTextSecondary"
                            >
                              <ol
                                className="MuiBreadcrumbs-ol"
                              >
                                <li
                                  className="MuiBreadcrumbs-li"
                                  key="child-0"
                                >
                                  <WithStyles(ForwardRef(Typography))
                                    color="textPrimary"
                                    key=".$base-investigation"
                                  >
                                    <ForwardRef(Typography)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textPrimary"
                                    >
                                      <p
                                        className="MuiTypography-root MuiTypography-body1 MuiTypography-colorTextPrimary"
                                      >
                                        Investigations
                                      </p>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                </li>
                              </ol>
                            </nav>
                          </ForwardRef(Typography)>
                        </WithStyles(ForwardRef(Typography))>
                      </ForwardRef(Breadcrumbs)>
                    </WithStyles(ForwardRef(Breadcrumbs))>
                  </Route>
                </div>
              </ForwardRef(Paper)>
            </WithStyles(ForwardRef(Paper))>
          </div>
        </PageBreadcrumbs>
      </Connect(PageBreadcrumbs)>
    </Router>
  </MemoryRouter>
</Provider>
`;
