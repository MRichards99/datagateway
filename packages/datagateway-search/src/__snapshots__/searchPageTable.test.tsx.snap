// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SearchPageTable renders SearchPageTable correctly after request 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(SearchPageTable)
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
  >
    <SearchPageTable
      currentTab="none"
      datafile={
        Array [
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
        ]
      }
      datafileTab={true}
      dataset={
        Array [
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
        ]
      }
      datasetTab={true}
      investigation={
        Array [
          undefined,
        ]
      }
      investigationTab={true}
      requestReceived={true}
      setCurrentTab={[Function]}
      store={
        Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        }
      }
    >
      <div>
        <WithStyles(ForwardRef(AppBar))
          position="static"
        >
          <ForwardRef(AppBar)
            classes={
              Object {
                "colorDefault": "MuiAppBar-colorDefault",
                "colorInherit": "MuiAppBar-colorInherit",
                "colorPrimary": "MuiAppBar-colorPrimary",
                "colorSecondary": "MuiAppBar-colorSecondary",
                "colorTransparent": "MuiAppBar-colorTransparent",
                "positionAbsolute": "MuiAppBar-positionAbsolute",
                "positionFixed": "MuiAppBar-positionFixed",
                "positionRelative": "MuiAppBar-positionRelative",
                "positionStatic": "MuiAppBar-positionStatic",
                "positionSticky": "MuiAppBar-positionSticky",
                "root": "MuiAppBar-root",
              }
            }
            position="static"
          >
            <WithStyles(ForwardRef(Paper))
              className="MuiAppBar-root MuiAppBar-positionStatic MuiAppBar-colorPrimary"
              component="header"
              elevation={4}
              square={true}
            >
              <ForwardRef(Paper)
                className="MuiAppBar-root MuiAppBar-positionStatic MuiAppBar-colorPrimary"
                classes={
                  Object {
                    "elevation0": "MuiPaper-elevation0",
                    "elevation1": "MuiPaper-elevation1",
                    "elevation10": "MuiPaper-elevation10",
                    "elevation11": "MuiPaper-elevation11",
                    "elevation12": "MuiPaper-elevation12",
                    "elevation13": "MuiPaper-elevation13",
                    "elevation14": "MuiPaper-elevation14",
                    "elevation15": "MuiPaper-elevation15",
                    "elevation16": "MuiPaper-elevation16",
                    "elevation17": "MuiPaper-elevation17",
                    "elevation18": "MuiPaper-elevation18",
                    "elevation19": "MuiPaper-elevation19",
                    "elevation2": "MuiPaper-elevation2",
                    "elevation20": "MuiPaper-elevation20",
                    "elevation21": "MuiPaper-elevation21",
                    "elevation22": "MuiPaper-elevation22",
                    "elevation23": "MuiPaper-elevation23",
                    "elevation24": "MuiPaper-elevation24",
                    "elevation3": "MuiPaper-elevation3",
                    "elevation4": "MuiPaper-elevation4",
                    "elevation5": "MuiPaper-elevation5",
                    "elevation6": "MuiPaper-elevation6",
                    "elevation7": "MuiPaper-elevation7",
                    "elevation8": "MuiPaper-elevation8",
                    "elevation9": "MuiPaper-elevation9",
                    "outlined": "MuiPaper-outlined",
                    "root": "MuiPaper-root",
                    "rounded": "MuiPaper-rounded",
                  }
                }
                component="header"
                elevation={4}
                square={true}
              >
                <header
                  className="MuiPaper-root MuiAppBar-root MuiAppBar-positionStatic MuiAppBar-colorPrimary MuiPaper-elevation4"
                >
                  <WithStyles(ForwardRef(Tabs))
                    aria-label="searchPageTable.tabs_arialabel"
                    onChange={[Function]}
                    value="none"
                  >
                    <ForwardRef(Tabs)
                      aria-label="searchPageTable.tabs_arialabel"
                      classes={
                        Object {
                          "centered": "MuiTabs-centered",
                          "fixed": "MuiTabs-fixed",
                          "flexContainer": "MuiTabs-flexContainer",
                          "flexContainerVertical": "MuiTabs-flexContainerVertical",
                          "indicator": "MuiTabs-indicator",
                          "root": "MuiTabs-root",
                          "scrollButtons": "MuiTabs-scrollButtons",
                          "scrollButtonsDesktop": "MuiTabs-scrollButtonsDesktop",
                          "scrollable": "MuiTabs-scrollable",
                          "scroller": "MuiTabs-scroller",
                          "vertical": "MuiTabs-vertical",
                        }
                      }
                      onChange={[Function]}
                      value="none"
                    >
                      <div
                        className="MuiTabs-root"
                      >
                        <div
                          className="MuiTabs-scroller MuiTabs-fixed"
                          onScroll={[Function]}
                          style={
                            Object {
                              "marginBottom": null,
                              "overflow": "hidden",
                            }
                          }
                        >
                          <div
                            aria-label="searchPageTable.tabs_arialabel"
                            className="MuiTabs-flexContainer"
                            onKeyDown={[Function]}
                            role="tablist"
                          >
                            <WithStyles(ForwardRef(Tab))
                              aria-controls="simple-tabpanel-investigation"
                              fullWidth={false}
                              id="simple-tab-investigation"
                              indicator={false}
                              key=".0"
                              label={
                                <ForwardRef(WithStyles)
                                  badgeContent={1}
                                  id="investigation-badge"
                                  showZero={true}
                                >
                                  <span
                                    style={
                                      Object {
                                        "marginLeft": "calc(-0.5 * 1ch - 6px)",
                                        "marginRight": "calc(0.5 * 1ch + 6px)",
                                        "paddingRight": "1ch",
                                      }
                                    }
                                  >
                                    tabs.investigation
                                  </span>
                                </ForwardRef(WithStyles)>
                              }
                              onChange={[Function]}
                              selected={false}
                              textColor="inherit"
                              value="investigation"
                            >
                              <ForwardRef(Tab)
                                aria-controls="simple-tabpanel-investigation"
                                classes={
                                  Object {
                                    "disabled": "Mui-disabled",
                                    "fullWidth": "MuiTab-fullWidth",
                                    "labelIcon": "MuiTab-labelIcon",
                                    "root": "MuiTab-root",
                                    "selected": "Mui-selected",
                                    "textColorInherit": "MuiTab-textColorInherit",
                                    "textColorPrimary": "MuiTab-textColorPrimary",
                                    "textColorSecondary": "MuiTab-textColorSecondary",
                                    "wrapped": "MuiTab-wrapped",
                                    "wrapper": "MuiTab-wrapper",
                                  }
                                }
                                fullWidth={false}
                                id="simple-tab-investigation"
                                indicator={false}
                                label={
                                  <ForwardRef(WithStyles)
                                    badgeContent={1}
                                    id="investigation-badge"
                                    showZero={true}
                                  >
                                    <span
                                      style={
                                        Object {
                                          "marginLeft": "calc(-0.5 * 1ch - 6px)",
                                          "marginRight": "calc(0.5 * 1ch + 6px)",
                                          "paddingRight": "1ch",
                                        }
                                      }
                                    >
                                      tabs.investigation
                                    </span>
                                  </ForwardRef(WithStyles)>
                                }
                                onChange={[Function]}
                                selected={false}
                                textColor="inherit"
                                value="investigation"
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  aria-controls="simple-tabpanel-investigation"
                                  aria-selected={false}
                                  className="MuiTab-root MuiTab-textColorInherit"
                                  disabled={false}
                                  focusRipple={true}
                                  id="simple-tab-investigation"
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  role="tab"
                                  tabIndex={-1}
                                >
                                  <ForwardRef(ButtonBase)
                                    aria-controls="simple-tabpanel-investigation"
                                    aria-selected={false}
                                    className="MuiTab-root MuiTab-textColorInherit"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    disabled={false}
                                    focusRipple={true}
                                    id="simple-tab-investigation"
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    role="tab"
                                    tabIndex={-1}
                                  >
                                    <button
                                      aria-controls="simple-tabpanel-investigation"
                                      aria-selected={false}
                                      className="MuiButtonBase-root MuiTab-root MuiTab-textColorInherit"
                                      disabled={false}
                                      id="simple-tab-investigation"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      role="tab"
                                      tabIndex={-1}
                                      type="button"
                                    >
                                      <span
                                        className="MuiTab-wrapper"
                                      >
                                        <WithStyles(WithStyles(ForwardRef(Badge)))
                                          badgeContent={1}
                                          id="investigation-badge"
                                          showZero={true}
                                        >
                                          <WithStyles(ForwardRef(Badge))
                                            badgeContent={1}
                                            classes={
                                              Object {
                                                "badge": "WithStyles(ForwardRef(Badge))-badge-2",
                                              }
                                            }
                                            id="investigation-badge"
                                            showZero={true}
                                          >
                                            <ForwardRef(Badge)
                                              badgeContent={1}
                                              classes={
                                                Object {
                                                  "anchorOriginBottomLeftCircle": "MuiBadge-anchorOriginBottomLeftCircle",
                                                  "anchorOriginBottomLeftRectangle": "MuiBadge-anchorOriginBottomLeftRectangle",
                                                  "anchorOriginBottomRightCircle": "MuiBadge-anchorOriginBottomRightCircle",
                                                  "anchorOriginBottomRightRectangle": "MuiBadge-anchorOriginBottomRightRectangle",
                                                  "anchorOriginTopLeftCircle": "MuiBadge-anchorOriginTopLeftCircle",
                                                  "anchorOriginTopLeftRectangle": "MuiBadge-anchorOriginTopLeftRectangle",
                                                  "anchorOriginTopRightCircle": "MuiBadge-anchorOriginTopRightCircle",
                                                  "anchorOriginTopRightRectangle": "MuiBadge-anchorOriginTopRightRectangle",
                                                  "badge": "MuiBadge-badge WithStyles(ForwardRef(Badge))-badge-2",
                                                  "colorError": "MuiBadge-colorError",
                                                  "colorPrimary": "MuiBadge-colorPrimary",
                                                  "colorSecondary": "MuiBadge-colorSecondary",
                                                  "dot": "MuiBadge-dot",
                                                  "invisible": "MuiBadge-invisible",
                                                  "root": "MuiBadge-root",
                                                }
                                              }
                                              id="investigation-badge"
                                              showZero={true}
                                            >
                                              <span
                                                className="MuiBadge-root"
                                                id="investigation-badge"
                                              >
                                                <span
                                                  style={
                                                    Object {
                                                      "marginLeft": "calc(-0.5 * 1ch - 6px)",
                                                      "marginRight": "calc(0.5 * 1ch + 6px)",
                                                      "paddingRight": "1ch",
                                                    }
                                                  }
                                                >
                                                  tabs.investigation
                                                </span>
                                                <span
                                                  className="MuiBadge-badge WithStyles(ForwardRef(Badge))-badge-2 MuiBadge-anchorOriginTopRightRectangle"
                                                >
                                                  1
                                                </span>
                                              </span>
                                            </ForwardRef(Badge)>
                                          </WithStyles(ForwardRef(Badge))>
                                        </WithStyles(WithStyles(ForwardRef(Badge)))>
                                      </span>
                                      <WithStyles(memo)
                                        center={false}
                                      >
                                        <ForwardRef(TouchRipple)
                                          center={false}
                                          classes={
                                            Object {
                                              "child": "MuiTouchRipple-child",
                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                              "ripple": "MuiTouchRipple-ripple",
                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                              "root": "MuiTouchRipple-root",
                                            }
                                          }
                                        >
                                          <span
                                            className="MuiTouchRipple-root"
                                          >
                                            <TransitionGroup
                                              childFactory={[Function]}
                                              component={null}
                                              exit={true}
                                            />
                                          </span>
                                        </ForwardRef(TouchRipple)>
                                      </WithStyles(memo)>
                                    </button>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(Tab)>
                            </WithStyles(ForwardRef(Tab))>
                            <WithStyles(ForwardRef(Tab))
                              aria-controls="simple-tabpanel-dataset"
                              fullWidth={false}
                              id="simple-tab-dataset"
                              indicator={false}
                              key=".1"
                              label={
                                <ForwardRef(WithStyles)
                                  badgeContent={10}
                                  id="dataset-badge"
                                  showZero={true}
                                >
                                  <span
                                    style={
                                      Object {
                                        "marginLeft": "calc(-0.5 * 2ch - 6px)",
                                        "marginRight": "calc(0.5 * 2ch + 6px)",
                                        "paddingRight": "1ch",
                                      }
                                    }
                                  >
                                    tabs.dataset
                                  </span>
                                </ForwardRef(WithStyles)>
                              }
                              onChange={[Function]}
                              selected={false}
                              textColor="inherit"
                              value="dataset"
                            >
                              <ForwardRef(Tab)
                                aria-controls="simple-tabpanel-dataset"
                                classes={
                                  Object {
                                    "disabled": "Mui-disabled",
                                    "fullWidth": "MuiTab-fullWidth",
                                    "labelIcon": "MuiTab-labelIcon",
                                    "root": "MuiTab-root",
                                    "selected": "Mui-selected",
                                    "textColorInherit": "MuiTab-textColorInherit",
                                    "textColorPrimary": "MuiTab-textColorPrimary",
                                    "textColorSecondary": "MuiTab-textColorSecondary",
                                    "wrapped": "MuiTab-wrapped",
                                    "wrapper": "MuiTab-wrapper",
                                  }
                                }
                                fullWidth={false}
                                id="simple-tab-dataset"
                                indicator={false}
                                label={
                                  <ForwardRef(WithStyles)
                                    badgeContent={10}
                                    id="dataset-badge"
                                    showZero={true}
                                  >
                                    <span
                                      style={
                                        Object {
                                          "marginLeft": "calc(-0.5 * 2ch - 6px)",
                                          "marginRight": "calc(0.5 * 2ch + 6px)",
                                          "paddingRight": "1ch",
                                        }
                                      }
                                    >
                                      tabs.dataset
                                    </span>
                                  </ForwardRef(WithStyles)>
                                }
                                onChange={[Function]}
                                selected={false}
                                textColor="inherit"
                                value="dataset"
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  aria-controls="simple-tabpanel-dataset"
                                  aria-selected={false}
                                  className="MuiTab-root MuiTab-textColorInherit"
                                  disabled={false}
                                  focusRipple={true}
                                  id="simple-tab-dataset"
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  role="tab"
                                  tabIndex={-1}
                                >
                                  <ForwardRef(ButtonBase)
                                    aria-controls="simple-tabpanel-dataset"
                                    aria-selected={false}
                                    className="MuiTab-root MuiTab-textColorInherit"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    disabled={false}
                                    focusRipple={true}
                                    id="simple-tab-dataset"
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    role="tab"
                                    tabIndex={-1}
                                  >
                                    <button
                                      aria-controls="simple-tabpanel-dataset"
                                      aria-selected={false}
                                      className="MuiButtonBase-root MuiTab-root MuiTab-textColorInherit"
                                      disabled={false}
                                      id="simple-tab-dataset"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      role="tab"
                                      tabIndex={-1}
                                      type="button"
                                    >
                                      <span
                                        className="MuiTab-wrapper"
                                      >
                                        <WithStyles(WithStyles(ForwardRef(Badge)))
                                          badgeContent={10}
                                          id="dataset-badge"
                                          showZero={true}
                                        >
                                          <WithStyles(ForwardRef(Badge))
                                            badgeContent={10}
                                            classes={
                                              Object {
                                                "badge": "WithStyles(ForwardRef(Badge))-badge-2",
                                              }
                                            }
                                            id="dataset-badge"
                                            showZero={true}
                                          >
                                            <ForwardRef(Badge)
                                              badgeContent={10}
                                              classes={
                                                Object {
                                                  "anchorOriginBottomLeftCircle": "MuiBadge-anchorOriginBottomLeftCircle",
                                                  "anchorOriginBottomLeftRectangle": "MuiBadge-anchorOriginBottomLeftRectangle",
                                                  "anchorOriginBottomRightCircle": "MuiBadge-anchorOriginBottomRightCircle",
                                                  "anchorOriginBottomRightRectangle": "MuiBadge-anchorOriginBottomRightRectangle",
                                                  "anchorOriginTopLeftCircle": "MuiBadge-anchorOriginTopLeftCircle",
                                                  "anchorOriginTopLeftRectangle": "MuiBadge-anchorOriginTopLeftRectangle",
                                                  "anchorOriginTopRightCircle": "MuiBadge-anchorOriginTopRightCircle",
                                                  "anchorOriginTopRightRectangle": "MuiBadge-anchorOriginTopRightRectangle",
                                                  "badge": "MuiBadge-badge WithStyles(ForwardRef(Badge))-badge-2",
                                                  "colorError": "MuiBadge-colorError",
                                                  "colorPrimary": "MuiBadge-colorPrimary",
                                                  "colorSecondary": "MuiBadge-colorSecondary",
                                                  "dot": "MuiBadge-dot",
                                                  "invisible": "MuiBadge-invisible",
                                                  "root": "MuiBadge-root",
                                                }
                                              }
                                              id="dataset-badge"
                                              showZero={true}
                                            >
                                              <span
                                                className="MuiBadge-root"
                                                id="dataset-badge"
                                              >
                                                <span
                                                  style={
                                                    Object {
                                                      "marginLeft": "calc(-0.5 * 2ch - 6px)",
                                                      "marginRight": "calc(0.5 * 2ch + 6px)",
                                                      "paddingRight": "1ch",
                                                    }
                                                  }
                                                >
                                                  tabs.dataset
                                                </span>
                                                <span
                                                  className="MuiBadge-badge WithStyles(ForwardRef(Badge))-badge-2 MuiBadge-anchorOriginTopRightRectangle"
                                                >
                                                  10
                                                </span>
                                              </span>
                                            </ForwardRef(Badge)>
                                          </WithStyles(ForwardRef(Badge))>
                                        </WithStyles(WithStyles(ForwardRef(Badge)))>
                                      </span>
                                      <WithStyles(memo)
                                        center={false}
                                      >
                                        <ForwardRef(TouchRipple)
                                          center={false}
                                          classes={
                                            Object {
                                              "child": "MuiTouchRipple-child",
                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                              "ripple": "MuiTouchRipple-ripple",
                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                              "root": "MuiTouchRipple-root",
                                            }
                                          }
                                        >
                                          <span
                                            className="MuiTouchRipple-root"
                                          >
                                            <TransitionGroup
                                              childFactory={[Function]}
                                              component={null}
                                              exit={true}
                                            />
                                          </span>
                                        </ForwardRef(TouchRipple)>
                                      </WithStyles(memo)>
                                    </button>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(Tab)>
                            </WithStyles(ForwardRef(Tab))>
                            <WithStyles(ForwardRef(Tab))
                              aria-controls="simple-tabpanel-datafile"
                              fullWidth={false}
                              id="simple-tab-datafile"
                              indicator={false}
                              key=".2"
                              label={
                                <ForwardRef(WithStyles)
                                  badgeContent={100}
                                  id="datafile-badge"
                                  showZero={true}
                                >
                                  <span
                                    style={
                                      Object {
                                        "marginLeft": "calc(-0.5 * 3ch - 6px)",
                                        "marginRight": "calc(0.5 * 3ch + 6px)",
                                        "paddingRight": "1ch",
                                      }
                                    }
                                  >
                                    tabs.datafile
                                  </span>
                                </ForwardRef(WithStyles)>
                              }
                              onChange={[Function]}
                              selected={false}
                              textColor="inherit"
                              value="datafile"
                            >
                              <ForwardRef(Tab)
                                aria-controls="simple-tabpanel-datafile"
                                classes={
                                  Object {
                                    "disabled": "Mui-disabled",
                                    "fullWidth": "MuiTab-fullWidth",
                                    "labelIcon": "MuiTab-labelIcon",
                                    "root": "MuiTab-root",
                                    "selected": "Mui-selected",
                                    "textColorInherit": "MuiTab-textColorInherit",
                                    "textColorPrimary": "MuiTab-textColorPrimary",
                                    "textColorSecondary": "MuiTab-textColorSecondary",
                                    "wrapped": "MuiTab-wrapped",
                                    "wrapper": "MuiTab-wrapper",
                                  }
                                }
                                fullWidth={false}
                                id="simple-tab-datafile"
                                indicator={false}
                                label={
                                  <ForwardRef(WithStyles)
                                    badgeContent={100}
                                    id="datafile-badge"
                                    showZero={true}
                                  >
                                    <span
                                      style={
                                        Object {
                                          "marginLeft": "calc(-0.5 * 3ch - 6px)",
                                          "marginRight": "calc(0.5 * 3ch + 6px)",
                                          "paddingRight": "1ch",
                                        }
                                      }
                                    >
                                      tabs.datafile
                                    </span>
                                  </ForwardRef(WithStyles)>
                                }
                                onChange={[Function]}
                                selected={false}
                                textColor="inherit"
                                value="datafile"
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  aria-controls="simple-tabpanel-datafile"
                                  aria-selected={false}
                                  className="MuiTab-root MuiTab-textColorInherit"
                                  disabled={false}
                                  focusRipple={true}
                                  id="simple-tab-datafile"
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  role="tab"
                                  tabIndex={-1}
                                >
                                  <ForwardRef(ButtonBase)
                                    aria-controls="simple-tabpanel-datafile"
                                    aria-selected={false}
                                    className="MuiTab-root MuiTab-textColorInherit"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    disabled={false}
                                    focusRipple={true}
                                    id="simple-tab-datafile"
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    role="tab"
                                    tabIndex={-1}
                                  >
                                    <button
                                      aria-controls="simple-tabpanel-datafile"
                                      aria-selected={false}
                                      className="MuiButtonBase-root MuiTab-root MuiTab-textColorInherit"
                                      disabled={false}
                                      id="simple-tab-datafile"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      role="tab"
                                      tabIndex={-1}
                                      type="button"
                                    >
                                      <span
                                        className="MuiTab-wrapper"
                                      >
                                        <WithStyles(WithStyles(ForwardRef(Badge)))
                                          badgeContent={100}
                                          id="datafile-badge"
                                          showZero={true}
                                        >
                                          <WithStyles(ForwardRef(Badge))
                                            badgeContent={100}
                                            classes={
                                              Object {
                                                "badge": "WithStyles(ForwardRef(Badge))-badge-2",
                                              }
                                            }
                                            id="datafile-badge"
                                            showZero={true}
                                          >
                                            <ForwardRef(Badge)
                                              badgeContent={100}
                                              classes={
                                                Object {
                                                  "anchorOriginBottomLeftCircle": "MuiBadge-anchorOriginBottomLeftCircle",
                                                  "anchorOriginBottomLeftRectangle": "MuiBadge-anchorOriginBottomLeftRectangle",
                                                  "anchorOriginBottomRightCircle": "MuiBadge-anchorOriginBottomRightCircle",
                                                  "anchorOriginBottomRightRectangle": "MuiBadge-anchorOriginBottomRightRectangle",
                                                  "anchorOriginTopLeftCircle": "MuiBadge-anchorOriginTopLeftCircle",
                                                  "anchorOriginTopLeftRectangle": "MuiBadge-anchorOriginTopLeftRectangle",
                                                  "anchorOriginTopRightCircle": "MuiBadge-anchorOriginTopRightCircle",
                                                  "anchorOriginTopRightRectangle": "MuiBadge-anchorOriginTopRightRectangle",
                                                  "badge": "MuiBadge-badge WithStyles(ForwardRef(Badge))-badge-2",
                                                  "colorError": "MuiBadge-colorError",
                                                  "colorPrimary": "MuiBadge-colorPrimary",
                                                  "colorSecondary": "MuiBadge-colorSecondary",
                                                  "dot": "MuiBadge-dot",
                                                  "invisible": "MuiBadge-invisible",
                                                  "root": "MuiBadge-root",
                                                }
                                              }
                                              id="datafile-badge"
                                              showZero={true}
                                            >
                                              <span
                                                className="MuiBadge-root"
                                                id="datafile-badge"
                                              >
                                                <span
                                                  style={
                                                    Object {
                                                      "marginLeft": "calc(-0.5 * 3ch - 6px)",
                                                      "marginRight": "calc(0.5 * 3ch + 6px)",
                                                      "paddingRight": "1ch",
                                                    }
                                                  }
                                                >
                                                  tabs.datafile
                                                </span>
                                                <span
                                                  className="MuiBadge-badge WithStyles(ForwardRef(Badge))-badge-2 MuiBadge-anchorOriginTopRightRectangle"
                                                >
                                                  99+
                                                </span>
                                              </span>
                                            </ForwardRef(Badge)>
                                          </WithStyles(ForwardRef(Badge))>
                                        </WithStyles(WithStyles(ForwardRef(Badge)))>
                                      </span>
                                      <WithStyles(memo)
                                        center={false}
                                      >
                                        <ForwardRef(TouchRipple)
                                          center={false}
                                          classes={
                                            Object {
                                              "child": "MuiTouchRipple-child",
                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                              "ripple": "MuiTouchRipple-ripple",
                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                              "root": "MuiTouchRipple-root",
                                            }
                                          }
                                        >
                                          <span
                                            className="MuiTouchRipple-root"
                                          >
                                            <TransitionGroup
                                              childFactory={[Function]}
                                              component={null}
                                              exit={true}
                                            />
                                          </span>
                                        </ForwardRef(TouchRipple)>
                                      </WithStyles(memo)>
                                    </button>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(Tab)>
                            </WithStyles(ForwardRef(Tab))>
                          </div>
                          <WithStyles(ForwardRef(TabIndicator))
                            className="MuiTabs-indicator"
                            color="secondary"
                            orientation="horizontal"
                            style={
                              Object {
                                "left": 0,
                                "width": 0,
                              }
                            }
                          >
                            <ForwardRef(TabIndicator)
                              className="MuiTabs-indicator"
                              classes={
                                Object {
                                  "colorPrimary": "PrivateTabIndicator-colorPrimary-7",
                                  "colorSecondary": "PrivateTabIndicator-colorSecondary-8",
                                  "root": "PrivateTabIndicator-root-6",
                                  "vertical": "PrivateTabIndicator-vertical-9",
                                }
                              }
                              color="secondary"
                              orientation="horizontal"
                              style={
                                Object {
                                  "left": 0,
                                  "width": 0,
                                }
                              }
                            >
                              <span
                                className="PrivateTabIndicator-root-6 PrivateTabIndicator-colorSecondary-8 MuiTabs-indicator"
                                style={
                                  Object {
                                    "left": 0,
                                    "width": 0,
                                  }
                                }
                              />
                            </ForwardRef(TabIndicator)>
                          </WithStyles(ForwardRef(TabIndicator))>
                        </div>
                      </div>
                    </ForwardRef(Tabs)>
                  </WithStyles(ForwardRef(Tabs))>
                </header>
              </ForwardRef(Paper)>
            </WithStyles(ForwardRef(Paper))>
          </ForwardRef(AppBar)>
        </WithStyles(ForwardRef(AppBar))>
        <TabPanel
          index="investigation"
          value="none"
        >
          <Styled(MuiBox)
            aria-labelledby="simple-tab-investigation"
            border={0}
            component="div"
            hidden={true}
            id="simple-tabpanel-investigation"
            role="tabpanel"
          >
            <div
              aria-labelledby="simple-tab-investigation"
              className="MuiBox-root MuiBox-root-3"
              hidden={true}
              id="simple-tabpanel-investigation"
              role="tabpanel"
            />
          </Styled(MuiBox)>
        </TabPanel>
        <TabPanel
          index="dataset"
          value="none"
        >
          <Styled(MuiBox)
            aria-labelledby="simple-tab-dataset"
            border={0}
            component="div"
            hidden={true}
            id="simple-tabpanel-dataset"
            role="tabpanel"
          >
            <div
              aria-labelledby="simple-tab-dataset"
              className="MuiBox-root MuiBox-root-4"
              hidden={true}
              id="simple-tabpanel-dataset"
              role="tabpanel"
            />
          </Styled(MuiBox)>
        </TabPanel>
        <TabPanel
          index="datafile"
          value="none"
        >
          <Styled(MuiBox)
            aria-labelledby="simple-tab-datafile"
            border={0}
            component="div"
            hidden={true}
            id="simple-tabpanel-datafile"
            role="tabpanel"
          >
            <div
              aria-labelledby="simple-tab-datafile"
              className="MuiBox-root MuiBox-root-5"
              hidden={true}
              id="simple-tabpanel-datafile"
              role="tabpanel"
            />
          </Styled(MuiBox)>
        </TabPanel>
      </div>
    </SearchPageTable>
  </Connect(SearchPageTable)>
</Provider>
`;

exports[`SearchPageTable renders SearchPageTable correctly before request 1`] = `
<div>
  <Connect(SearchPageTable)
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
  >
    <SearchPageTable
      currentTab="none"
      datafile={Array []}
      datafileTab={false}
      dataset={Array []}
      datasetTab={false}
      investigation={Array []}
      investigationTab={false}
      requestReceived={false}
      setCurrentTab={[Function]}
      store={
        Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        }
      }
    >
      <Styled(MuiBox)
        color="secondary.main"
        px={3}
        py={1}
      >
        <div
          className="MuiBox-root MuiBox-root-1"
        >
          <h2>
            searchPageTable.header
          </h2>
          searchPageTable.text
        </div>
      </Styled(MuiBox)>
    </SearchPageTable>
  </Connect(SearchPageTable)>
</div>
`;
