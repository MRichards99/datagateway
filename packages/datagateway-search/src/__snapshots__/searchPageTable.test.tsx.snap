// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SearchPageTable - Tests renders SearchPageTable on button click 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <MemoryRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "ic4mjv",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "ic4mjv",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Connect(SearchPageContainer)>
        <SearchPageContainer
          dispatch={[Function]}
          entityCount={0}
        >
          <Switch>
            <Route
              computedMatch={
                Object {
                  "isExact": true,
                  "params": Object {},
                  "path": "/",
                  "url": "/",
                }
              }
              exact={true}
              location={
                Object {
                  "hash": "",
                  "key": "ic4mjv",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                }
              }
              path="/"
              render={[Function]}
            >
              <Link
                to="/search/data"
              >
                <LinkAnchor
                  href="/search/data"
                  navigate={[Function]}
                >
                  <a
                    href="/search/data"
                    onClick={[Function]}
                  >
                    Search data
                  </a>
                </LinkAnchor>
              </Link>
            </Route>
          </Switch>
        </SearchPageContainer>
      </Connect(SearchPageContainer)>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`SearchPageTable - Tests renders initial search page correctly 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Connect(SearchPageContainer)>
        <SearchPageContainer
          dispatch={[Function]}
          entityCount={0}
        >
          <Switch>
            <Route
              computedMatch={
                Object {
                  "isExact": true,
                  "params": Object {},
                  "path": "/",
                  "url": "/",
                }
              }
              exact={true}
              location={
                Object {
                  "hash": "",
                  "key": "testKey",
                  "pathname": "/",
                  "search": "",
                }
              }
              path="/"
              render={[Function]}
            >
              <Link
                to="/search/data"
              >
                <LinkAnchor
                  href="/search/data"
                  navigate={[Function]}
                >
                  <a
                    href="/search/data"
                    onClick={[Function]}
                  >
                    Search data
                  </a>
                </LinkAnchor>
              </Link>
            </Route>
          </Switch>
        </SearchPageContainer>
      </Connect(SearchPageContainer)>
    </Router>
  </MemoryRouter>
</Provider>
`;
