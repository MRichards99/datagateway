name: CI Build
on: 
  workflow_dispatch:
  pull_request:
  # By default, the pull_request event type is not triggered when a PR is merged into master
  push:
    branches:
      - master
      - use-local-ICAT-in-CI-runs-#641

jobs:
# Setup Java & Python
  java-python-icat:
    name: Setup Java and Python
    runs-on: ubuntu-16.04
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.8', '3.9']
    steps:
      - name: Add apt repo
        run: sudo add-apt-repository universe
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: 8
          java-package: jdk
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64

      # ICAT Ansible clone and install dependencies
      - name: Checkout icat-ansible
        uses: actions/checkout@v2
        with:
          repository: icatproject-contrib/icat-ansible
          ref: change-payara-setup-script-url
          path: icat-ansible
      - name: Install Ansible
        run: pip install -r icat-ansible/requirements.txt

      # Prep for running the playbook
      - name: Create hosts file
        run: echo -e "[icatdb-minimal-hosts]\nlocalhost ansible_connection=local" > icat-ansible/hosts
      - name: Prepare vault pass
        run: echo -e "icattravispw" > icat-ansible/vault_pass.txt
      - name: Move vault to directory it'll get detected by Ansible
        run: mv icat-ansible/vault.yml icat-ansible/group_vars/all
      - name: Replace default payara user with Actions user
        run: |
          sed -i -e "s/^payara_user: \"glassfish\"/payara_user: \"runner\"/" icat-ansible/group_vars/all/vars.yml

      # Create local instance of ICAT
      - name: Run ICAT Ansible Playbook
        run: |
          ansible-playbook icat-ansible/icatdb-minimal-hosts.yml -i icat-ansible/hosts --vault-password-file icat-ansible/vault_pass.txt -vv

      - name: Checkout DataGateway API
        uses: actions/checkout@v2

  # lint-and-unit-test:
  #   name: Lint & Unit Tests
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repo
  #       uses: actions/checkout@v2
  #     - name: Setup Node.js
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: '14.x'
  #     # Cache yarn dependencies/ restore the cached dependencies during future workflows
  #     - name: Get yarn cache directory path
  #       id: yarn-cache-dir-path
  #       run: echo "::set-output name=dir::$(yarn cache dir)"
  #     - name: Cache yarn dependencies
  #       uses: actions/cache@v2
  #       id: yarn-cache
  #       with:
  #         path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
  #         key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-yarn-
  #     - name: Install dependencies
  #       # Ubuntu 16+ does not install libgconf-2-4 by default, so we need to install it ourselves (for Cypress)
  #       run: |
  #         npm config set scripts-prepend-node-path true
  #         sudo apt-get install libgconf-2-4
  #         yarn --frozen-lockfile
  #     - name: Run linting
  #       run: yarn lint
  #     - name: Run unit tests
  #       run: yarn test:unit
  #     - name: Upload unit test coverage for the Common package
  #       if: success()
  #       uses: codecov/codecov-action@v1
  #       with:
  #         directory: ./packages/datagateway-common/
  #         flags: common
  #         fail_ci_if_error: true
  #     - name: Upload unit test coverage for the DataView package
  #       if: success()
  #       uses: codecov/codecov-action@v1
  #       with:
  #         directory: ./packages/datagateway-dataview/
  #         flags: dataview
  #         fail_ci_if_error: true
  #     - name: Upload unit test coverage for the Search package
  #       if: success()
  #       uses: codecov/codecov-action@v1
  #       with:
  #         directory: ./packages/datagateway-search/
  #         flags: search
  #         fail_ci_if_error: true
  #     - name: Upload unit test coverage for the Download package
  #       if: success()
  #       uses: codecov/codecov-action@v1
  #       with:
  #         directory: ./packages/datagateway-download/
  #         flags: download
  #         fail_ci_if_error: true

  # # Seperate e2e jobs so that they can run in parallel
  # download-e2e-test:
  #   # Run only if the  Lint & Unit Tests job passed
  #   needs: lint-and-unit-test
  #   name: DataGateway Download End to End Tests
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repo
  #       uses: actions/checkout@v2
  #     - name: Setup Node.js
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: '14.x'
  #     # Cache yarn dependencies/ restore the cached dependencies during future workflows
  #     - name: Get yarn cache directory path
  #       id: yarn-cache-dir-path
  #       run: echo "::set-output name=dir::$(yarn cache dir)"
  #     - name: Cache yarn dependencies
  #       uses: actions/cache@v2
  #       id: yarn-cache
  #       with:
  #         path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
  #         key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-yarn-
  #     - name: Install dependencies
  #       # Ubuntu 16+ does not install libgconf-2-4 by default, so we need to install it ourselves (for Cypress)
  #       run: |
  #         npm config set scripts-prepend-node-path true
  #         sudo apt-get install libgconf-2-4
  #         yarn --frozen-lockfile
  #     - name: Run datagateway-download e2e tests
  #       run: yarn workspace datagateway-download run e2e

  # search-e2e-test:
  #   # Run only if  the  Lint & Unit Tests job passed
  #   needs: lint-and-unit-test
  #   name: DataGateway Search End to End Tests
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repo
  #       uses: actions/checkout@v2
  #     - name: Setup Node.js
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: '14.x'
  #     # Cache yarn dependencies/ restore the cached dependencies during future workflows
  #     - name: Get yarn cache directory path
  #       id: yarn-cache-dir-path
  #       run: echo "::set-output name=dir::$(yarn cache dir)"
  #     - name: Cache yarn dependencies
  #       uses: actions/cache@v2
  #       id: yarn-cache
  #       with:
  #         path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
  #         key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-yarn-
  #     - name: Install dependencies
  #       # Ubuntu 16+ does not install libgconf-2-4 by default, so we need to install it ourselves (for Cypress)
  #       run: |
  #         npm config set scripts-prepend-node-path true
  #         sudo apt-get install libgconf-2-4
  #         yarn --frozen-lockfile
  #     - name: Run datagateway-search e2e tests
  #       run: yarn workspace datagateway-search run e2e

  # dataview-e2e-test:
  #   # Run only if  the  Lint & Unit Tests job passed
  #   needs: lint-and-unit-test
  #   name: DataGateway DataView End to End Tests
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repo
  #       uses: actions/checkout@v2
  #     - name: Setup Node.js
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: '14.x'
  #     # Cache yarn dependencies/ restore the cached dependencies during future workflows
  #     - name: Get yarn cache directory path
  #       id: yarn-cache-dir-path
  #       run: echo "::set-output name=dir::$(yarn cache dir)"
  #     - name: Cache yarn dependencies
  #       uses: actions/cache@v2
  #       id: yarn-cache
  #       with:
  #         path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
  #         key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-yarn-
  #     - name: Install dependencies
  #       # Ubuntu 16+ does not install libgconf-2-4 by default, so we need to install it ourselves (for Cypress)
  #       run: |
  #         npm config set scripts-prepend-node-path true
  #         sudo apt-get install libgconf-2-4
  #         yarn --frozen-lockfile
  #     - name: Run datagateway-dataview e2e tests
  #       run: yarn workspace datagateway-dataview run e2e
